"use strict";(self.webpackChunkglasskube_docs=self.webpackChunkglasskube_docs||[]).push([[7127],{6327:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>r,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>l});var n=a(4848),c=a(8453);const t={},i="Package Scopes",o={id:"design/package-scopes",title:"Package Scopes",description:"At Glasskube, we understand that granular management of Kubernetes resources is crucial. That's why we offer two distinct resource types that determine how widely a package can be installed:",source:"@site/docs/05_design/package-scopes.md",sourceDirName:"05_design",slug:"/design/package-scopes",permalink:"/TP2024-T5/docs/design/package-scopes",draft:!1,unlisted:!1,editUrl:"https://github.com/glasskube/glasskube/tree/main/website/docs/05_design/package-scopes.md",tags:[],version:"current",frontMatter:{}},r={},l=[{value:"ClusterPackages: Managing Resources at the Cluster Level",id:"clusterpackages-managing-resources-at-the-cluster-level",level:3},{value:"Packages: Isolation at the Namespace Level",id:"packages-isolation-at-the-namespace-level",level:3},{value:"Dependencies and Package Scopes",id:"dependencies-and-package-scopes",level:3},{value:"Defining Package Scope: A Note for Package Authors",id:"defining-package-scope-a-note-for-package-authors",level:3},{value:"Evolving Package Scopes",id:"evolving-package-scopes",level:3}];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"package-scopes",children:"Package Scopes"})}),"\n",(0,n.jsx)(s.p,{children:"At Glasskube, we understand that granular management of Kubernetes resources is crucial. That's why we offer two distinct resource types that determine how widely a package can be installed:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Cluster-scoped packages (ClusterPackages):"})," Installed once per cluster and accessible from all namespaces. Ideal for cluster-wide functionality and shared resources."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Namespace-scoped packages (Packages):"})," Installed in specific namespaces, offering isolation and flexibility. Perfect for application-specific tools or multiple instances of the same package."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Let's explore when you'd opt for each scope."}),"\n",(0,n.jsx)(s.h3,{id:"clusterpackages-managing-resources-at-the-cluster-level",children:"ClusterPackages: Managing Resources at the Cluster Level"}),"\n",(0,n.jsx)(s.p,{children:"ClusterPackages are the prefered when your package:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Needs access to all namespaces in your cluster."}),"\n",(0,n.jsxs)(s.li,{children:["Utilizes ",(0,n.jsx)(s.code,{children:"ClusterRoles"})," and ",(0,n.jsx)(s.code,{children:"ClusterRoleBindings"})," for authorization."]}),"\n",(0,n.jsx)(s.li,{children:"Provides functionality or manages resources that are relevant cluster-wide, such as networking, monitoring, or security tools."}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"packages-isolation-at-the-namespace-level",children:"Packages: Isolation at the Namespace Level"}),"\n",(0,n.jsx)(s.p,{children:"Packages are ideal when you require:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Isolation: Your package's functionality is contained within a specific namespace."}),"\n",(0,n.jsx)(s.li,{children:"Flexibility: You need to install the same package multiple times, each instance operating independently in its own namespace."}),"\n",(0,n.jsxs)(s.li,{children:["When the package uses ",(0,n.jsx)(s.code,{children:"Roles"})," and ",(0,n.jsx)(s.code,{children:"RoleBindings"})," for access control."]}),"\n",(0,n.jsx)(s.li,{children:"Application-specific tools or components that don't need cluster-wide access."}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"dependencies-and-package-scopes",children:"Dependencies and Package Scopes"}),"\n",(0,n.jsx)(s.p,{children:"The distinction between ClusterPackages and Packages also impacts dependencies."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"ClusterPackages:"})," If multiple ClusterPackages/Packages depend on another ClusterPackage, they'll share that dependency. This is also the expected behaviour for dependency on operators."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Packages:"})," When a ClusterPackage/Package depends on a Package, that Package is instantiated as a ",(0,n.jsx)(s.code,{children:"component"})," alongside the original package. Each instance of the original package gets its own, isolated instance of the dependent Package."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"defining-package-scope-a-note-for-package-authors",children:"Defining Package Scope: A Note for Package Authors"}),"\n",(0,n.jsx)(s.p,{children:"While Glasskube packages default to cluster-scoped, we strongly recommend explicitly defining the scope in your package definition. This ensures clarity and avoids any potential ambiguity about how your package is intended to be used."}),"\n",(0,n.jsxs)(s.p,{children:["To designate a package scope, include the ",(0,n.jsx)(s.code,{children:"scope"}),": ",(0,n.jsx)(s.code,{children:"Namespaced"})," or ",(0,n.jsx)(s.code,{children:"Cluster"})," key-value pair."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"name: <packageName>\r\nshortDescription: <description>\r\nscope: Namespaced or Cluster\r\ndefaultNamespace: <defaultNamespaceName>\r\niconUrl: <iconURL>\n"})}),"\n",(0,n.jsxs)(s.p,{children:["For a complete overview of all available options in the package manifest, refer to the ",(0,n.jsx)(s.a,{href:"https://glasskube.dev/docs/reference/package-manifest/",children:"full package manifest reference page"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"evolving-package-scopes",children:"Evolving Package Scopes"}),"\n",(0,n.jsx)(s.p,{children:"As Glasskube continues to evolve, we recognize that the distinction between cluster-scoped and namespace-scoped packages might need further refinement to address a broader range of use cases, at the moment each package can only be assigned a single scope that does not change, we're actively exploring ways to enhance flexibility and support scenarios where a package could benefit from being installed both cluster-wide and within specific namespaces."}),"\n",(0,n.jsxs)(s.p,{children:["We value community input and encourage you to join the ",(0,n.jsx)(s.a,{href:"https://github.com/glasskube/glasskube/discussions/1220",children:"ongoing discussion"})," about the future of package scopes. Your insights and experiences will help us shape the evolution of this feature to better serve the diverse needs of Glasskube users."]}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"Note: The specific mechanisms and implementation details of any future changes to package scopes are still under consideration."}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,a)=>{a.d(s,{R:()=>i,x:()=>o});var n=a(6540);const c={},t=n.createContext(c);function i(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);