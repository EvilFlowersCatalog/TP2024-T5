"use strict";(self.webpackChunkglasskube_docs=self.webpackChunkglasskube_docs||[]).push([[66],{10777:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var t=a(74848),r=a(28453);const s={},o="Package Operator",c={id:"components/package-operator",title:"Package Operator",description:"The package operator follows the Kubernetes Operator Pattern and has two controllers:",source:"@site/docs/03_components/02_package-operator.md",sourceDirName:"03_components",slug:"/components/package-operator",permalink:"/TP2024-T5/docs/components/package-operator",draft:!1,unlisted:!1,editUrl:"https://github.com/EvilFlowersCatalog/TP2024-T5/tree/main/docs/03_components/02_package-operator.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{}},i={},l=[{value:"Package Controller",id:"package-controller",level:2},{value:"PackageInfo Controller",id:"packageinfo-controller",level:2},{value:"Handling Package Updates",id:"handling-package-updates",level:2},{value:"FAQ",id:"faq",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",mermaid:"mermaid",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"package-operator",children:"Package Operator"})}),"\n",(0,t.jsxs)(n.p,{children:["The package operator follows the ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/extend-kubernetes/operator/",children:"Kubernetes Operator Pattern"})," and has two controllers:"]}),"\n",(0,t.jsx)(n.h2,{id:"package-controller",children:"Package Controller"}),"\n",(0,t.jsxs)(n.p,{children:["The Package controller manages the ",(0,t.jsx)(n.code,{children:"Package"})," resources of the cluster."]}),"\n",(0,t.jsxs)(n.p,{children:["Whenever a ",(0,t.jsx)(n.code,{children:"Package"})," has been created, changed or deleted these changes will be picked up and applied by the Package controller.\nThe Package controller also makes sure that dependencies of a ",(0,t.jsx)(n.code,{children:"Package"})," are met without conflicting installations, by applying the logic described ",(0,t.jsx)(n.a,{href:"/docs/design/dependency-management",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"packageinfo-controller",children:"PackageInfo Controller"}),"\n",(0,t.jsxs)(n.p,{children:["The PackageInfo controller syncs the relevant ",(0,t.jsx)(n.code,{children:"PackageInfo"})," resources with the manifests defined in the package repository."]}),"\n",(0,t.jsx)(n.h2,{id:"handling-package-updates",children:"Handling Package Updates"}),"\n",(0,t.jsxs)(n.p,{children:["A Package must have it's ",(0,t.jsx)(n.code,{children:".spec.version"})," set.\nThis instructs the operator to install this exact version of the package.\nWe also call this version pinning."]}),"\n",(0,t.jsxs)(n.p,{children:["To update a package with a pinned version, run ",(0,t.jsx)(n.code,{children:"glasskube update <package>"}),".\nThis will upate the package to the latest version."]}),"\n",(0,t.jsx)(n.mermaid,{value:"---\ntitle: Package Reconciliation\n---\nflowchart TB\n  start((Start))\n  ensurePinned[Create PackageInfo for .spec.version if missing]\n  ready{PackageInfo is ready}\n  ensureManifest[Ensure manifest]\n  ensureManifestOk{Success}\n  cleanup[Clean up old PackageInfos]\n  end1([End])\n\n  start --\x3e ensurePinned\n  ensurePinned --\x3e ready\n  ready -- yes --\x3e ensureManifest\n  ready -- no --\x3e end1\n  ensureManifest --\x3e ensureManifestOk\n  ensureManifestOk -- yes --\x3e cleanup\n  ensureManifestOk -- no --\x3e end1\n  cleanup --\x3e end1"}),"\n",(0,t.jsx)(n.mermaid,{value:"---\ntitle: PackageInfo Reconciliation\n---\nflowchart TB\n  start((Start))\n  DVP[Fetch version/package.yaml]\n  end1([End])\n\n  start --\x3e DVP\n  DVP --\x3e end1"}),"\n",(0,t.jsx)(n.h3,{id:"faq",children:"FAQ"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"How is the latest version determined?"})}),"\n",(0,t.jsxs)(n.p,{children:["The package's ",(0,t.jsx)(n.code,{children:"versions.yaml"})," is fetched from the repository. This file contains all available versions and a field ",(0,t.jsx)(n.code,{children:"latestVersion"}),".\nNote that ",(0,t.jsx)(n.code,{children:"latestVersion"})," might not be equal to the actual latest available version \u2013 think of a package where ",(0,t.jsx)(n.code,{children:"latestVersion = v1.1.7"}),",\nwhile there might already be a prerelease of a new major version like ",(0,t.jsx)(n.code,{children:"v2.0.0-alpha.1"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"How is a specific version of a package fetched?"})}),"\n",(0,t.jsxs)(n.p,{children:["Instead of fetching ",(0,t.jsx)(n.code,{children:"repository.xyz/package-name/package.yaml"}),", the operator fetches ",(0,t.jsx)(n.code,{children:"repository.xyz/package-name/version/package.yaml"})]}),"\n",(0,t.jsxs)(n.p,{children:["Check the ",(0,t.jsx)(n.a,{href:"../package-repository#structure",children:"package repository docs"})," and ",(0,t.jsx)(n.a,{href:"/docs/design/dependency-management",children:"dependency management docs"})," for more information."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>c});var t=a(96540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);