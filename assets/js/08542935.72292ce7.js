"use strict";(self.webpackChunkglasskube_docs=self.webpackChunkglasskube_docs||[]).push([[4803],{5609:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=n(4848),o=n(8453);const s={slug:"contributor-guidelines",title:"Why contributor guidelines matter.",description:"Contributor guidelines are the missing piece needed to the best Developer Experience",authors:["jpage"],tags:["glasskube"],image:"https://github.com/user-attachments/assets/a6209ab4-b4dd-42f8-b0be-fc30ea55d7cf"},r=void 0,a={permalink:"/TP2024-T5/blog/contributor-guidelines",source:"@site/blog/2024-04-04-contributor-guidelines/index.mdx",title:"Why contributor guidelines matter.",description:"Contributor guidelines are the missing piece needed to the best Developer Experience",date:"2024-04-04T00:00:00.000Z",tags:[{inline:!0,label:"glasskube",permalink:"/TP2024-T5/blog/tags/glasskube"}],readingTime:4.775,hasTruncateMarker:!0,authors:[{name:"Jake Page",title:"Developer Relations Engineer",url:"https://github.com/jakepage91",imageURL:"https://avatars.githubusercontent.com/jakepage91",key:"jpage",page:null}],frontMatter:{slug:"contributor-guidelines",title:"Why contributor guidelines matter.",description:"Contributor guidelines are the missing piece needed to the best Developer Experience",authors:["jpage"],tags:["glasskube"],image:"https://github.com/user-attachments/assets/a6209ab4-b4dd-42f8-b0be-fc30ea55d7cf"},unlisted:!1,prevItem:{title:"Glasskube Beta is live.",permalink:"/TP2024-T5/blog/beta-launch"},nextItem:{title:"10 Steps to Build a Top-Tier Discord Server for Your Open Source Community. \u2728",permalink:"/TP2024-T5/blog/discord-setup"}},l={authorsImageUrls:[void 0]},c=[{value:"TL;DR",id:"tldr",level:2},{value:"Understand your audience",id:"understand-your-audience",level:2},{value:"Define contribution paths",id:"define-contribution-paths",level:2},{value:"Community engagement",id:"community-engagement",level:2},{value:"Contribution workflow",id:"contribution-workflow",level:2},{value:"Development guidelines",id:"development-guidelines",level:2},{value:"Testing",id:"testing",level:2},{value:"Documentation and best practices",id:"documentation-and-best-practices",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://github.com/user-attachments/assets/a6209ab4-b4dd-42f8-b0be-fc30ea55d7cf",alt:"Contributor guidelines thumbnail"})}),"\n",(0,i.jsx)(t.h2,{id:"tldr",children:"TL;DR"}),"\n",(0,i.jsxs)(t.p,{children:["As an open-source project maintainer, you should be obsessed with ",(0,i.jsx)(t.strong,{children:"Developer Experience"}),". I don\u2019t need to convince you that the ",(0,i.jsx)(t.a,{href:"https://github.com/glasskube/glasskube/tree/main",children:"README.md"})," needs to be clear and informative. Everybody knows how great documentation can elevate a project. Having a top-notch ",(0,i.jsx)(t.a,{href:"https://github.com/glasskube/glasskube/blob/main/CONTRIBUTING.md",children:"CONTRIBUTING.md"})," file is the missing piece to retain the open-source contributors you attract."]}),"\n",(0,i.jsxs)(t.p,{children:["The CONTRIBUTING.md file should not be confused with a tutorial or a project guide, it\u2019s ",(0,i.jsx)(t.code,{children:"reference material"})," for developers who want to understand what work is available and how to get involved quickly."]}),"\n",(0,i.jsx)(t.p,{children:"Make sure your guidelines are:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Clear and actionable"}),"\n",(0,i.jsx)(t.li,{children:"Use precise language"}),"\n",(0,i.jsx)(t.li,{children:"Easy to skim through"}),"\n",(0,i.jsx)(t.li,{children:"Point to additional resources"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"understand-your-audience",children:"Understand your audience"}),"\n",(0,i.jsx)(t.p,{children:"Developers are not a monolithic group of internet dwellers who all care about the same problems, have the same experience, or work the same way. Having said that, there are a few things that are broadly applicable. They want to read less and build more. \ud83c\udfd7\ufe0f"}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"Developers care about getting started quickly and it\u2019s on the project maintainer to remove as many obstacles as possible to make that happen."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"How can you reduce the time from when a developer finds your project to when they submit their first PR?"}),"\n",(0,i.jsxs)(t.p,{children:["To get started, contributors need to find an issue to work on. Make sure you have open issues ready that are tagged to cater to all potential contributors. If a junior developer wants to learn a new language through your project make sure ",(0,i.jsx)(t.code,{children:"good first issues"})," are easy to find. If more ambitious, senior types, are ready to make an impact, make sure it\u2019s clear which issues you would like them to consider, pointing them to a ",(0,i.jsx)(t.a,{href:"https://github.com/glasskube/glasskube/milestones",children:"current milestone"})," or GitHub ",(0,i.jsx)(t.a,{href:"https://docs.github.com/en/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects",children:"project"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"define-contribution-paths",children:"Define contribution paths"}),"\n",(0,i.jsxs)(t.p,{children:["Make clear what kind of paths there are to contribute to. Which areas of the project need help? Leverage GitHub tags to segment each project domain. In our case, Glasskube has different components such as a ",(0,i.jsx)(t.code,{children:"GUI"}),", a ",(0,i.jsx)(t.code,{children:"CLI"})," and ",(0,i.jsx)(t.code,{children:"Package Controller"}),", ",(0,i.jsx)(t.code,{children:"Docs"}),", a ",(0,i.jsx)(t.code,{children:"UI"})," and the repo itself."]}),"\n",(0,i.jsx)(t.h2,{id:"community-engagement",children:"Community engagement"}),"\n",(0,i.jsxs)(t.p,{children:["Ok, so the contributor knows that there are open issues ranging in different levels of complexity and they understand the different areas they can contribute to. How can they let you know they are ready to contribute to the project? What if they have additional questions?\r\nMake it clear how you prefer them to communicate with you, through GitHub, ",(0,i.jsx)(t.a,{href:"https://discord.gg/SxH6KUCGH7",children:"Discord"}),", or Slack."]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"Try to not only limit communication to the GitHub issue itself. For many Open Source contributors the fun is meeting other like minded people to collaborate and share. Not to say they everybody want that, but make sure you invite contributors to a community, since they are not part of it."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://github.com/glasskube/glasskube/assets/38757612/a582fac4-1bd9-4db2-b3c3-61c677befa72",alt:"Community engagement"})}),"\n",(0,i.jsx)(t.h2,{id:"contribution-workflow",children:"Contribution workflow"}),"\n",(0,i.jsx)(t.p,{children:"Probably one of the most important parts of the Contributor guidelines is for contributors to have clear instructions and answers to the following questions"}),"\n",(0,i.jsx)(t.p,{children:"Detailing the step-by-step process for contributing code changes: \ud83e\ude9c"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Issue selection and assignment."}),"\n",(0,i.jsx)(t.li,{children:"Forking the repository."}),"\n",(0,i.jsx)(t.li,{children:"Branching, coding, and committing conventions."}),"\n",(0,i.jsx)(t.li,{children:"Pull request submission and review."}),"\n",(0,i.jsx)(t.li,{children:"Handling feedback and iteration."}),"\n",(0,i.jsx)(t.li,{children:"Merging contributions into the main codebase."}),"\n",(0,i.jsx)(t.li,{children:"Addressing best practices for commit messages and keeping forks up-to-date."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"development-guidelines",children:"Development guidelines"}),"\n",(0,i.jsx)(t.p,{children:"Each open-source project aims to solve a different problem and build on a certain stack that might be new to some contributors. Assume they know nothing about your tool and precisely explain the project\u2019s building blocks."}),"\n",(0,i.jsx)(t.p,{children:"Focus on informing how the code base is built, how each component fits together and describing setup environments.  Ideally, contributors should be able to build local versions of the components they contribute to and validate their work."}),"\n",(0,i.jsx)(t.p,{children:"If you only find out during the PR review process that it wasn\u2019t clear to the developer, it's a sign that either the guidelines or collaboration process could be improved."}),"\n",(0,i.jsx)(t.h2,{id:"testing",children:"Testing"}),"\n",(0,i.jsxs)(t.p,{children:["I can\u2019t stress the importance of providing clear instructions for ",(0,i.jsx)(t.code,{children:"testing code contributions"})," \ud83e\uddea. For example, Glasskube operates within ",(0,i.jsx)(t.a,{href:"https://minikube.sigs.k8s.io/docs/start/",children:"Kubernetes"})," clusters, every contributor must have access to one for local testing before submitting a PR. While imposing testing criteria might be challenging, it's essential to remind contributors that PR reviews shouldn't be the moment where issues with functionality are discovered."]}),"\n",(0,i.jsx)(t.h2,{id:"documentation-and-best-practices",children:"Documentation and best practices"}),"\n",(0,i.jsx)(t.p,{children:"Leverage your documentation heavily, the contributor guidelines as mentioned are reference material aimed at giving guidance by pointing the contributor in the direction of the answer they are looking for. \ud83d\udd0d"}),"\n",(0,i.jsxs)(t.p,{children:["Keep the file structure ",(0,i.jsx)(t.code,{children:"very clear"}),". Most people skim through this sort of material looking directly for what they need at the time. Make your guidelines ",(0,i.jsx)(t.code,{children:"skimmable"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Also, it\u2019s safe to assume some contributors will never make it to your CONTRIBUTING.md page, and those who do will spend a limited amount of time there. Share a TL;DR that gives the main points you would like contributors to remember. Also, add the TL;DR to other places outside of the GitHub repo. I\u2019ve added it to the #help-forum on our Discord server"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://github.com/glasskube/glasskube/assets/38757612/f617c591-2b51-44b7-8b19-c337a2b34f5d",alt:"Best practices"})}),"\n",(0,i.jsxs)(t.p,{children:["I\u2019m really happy you have a killer ",(0,i.jsx)(t.strong,{children:"README.md"})," file, you have a bunch of ",(0,i.jsx)(t.code,{children:"well-tagged issues"})," and are ready to welcome as many contributors as possible. But to retain and build trust within your community make sure to nail the CONTRIBUTING.md too."]}),"\n",(0,i.jsxs)(t.p,{children:["To understand the value of the ",(0,i.jsx)(t.strong,{children:"CONTRIBUTING.md"})," file. I feel a restaurant analogy might be useful."]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["\ud83d\udca1 We've all been drawn to a restaurant by it\u2019s food menu, only to return for the exceptional service. Similarly, in the realm of Open Source projects, the README.md acts as the initial attraction, the enticing menu. However, it's the CONTRIBUTING.md file and how it enhances the overall developer experience that makes them ",(0,i.jsx)(t.strong,{children:"return for more"}),"."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6540);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);