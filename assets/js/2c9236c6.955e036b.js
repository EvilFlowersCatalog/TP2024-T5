"use strict";(self.webpackChunkglasskube_docs=self.webpackChunkglasskube_docs||[]).push([[3631],{6128:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var a=s(4848),i=s(8453);const n={slug:"gitops-template",title:"Glasskube GitOps template",description:"A GitOps starter template to get started with ArgoCD & Glasskube in seconds instead of hours",authors:["christophenne","jpage","pmig"],tags:["glasskube","argocd","gitops","template"],image:"https://github.com/user-attachments/assets/7ad482a7-c0a2-4081-8654-670f3cccb7cd"},r=void 0,o={permalink:"/TP2024-T5/blog/gitops-template",source:"@site/blog/2024-08-07-gitops-template/index.mdx",title:"Glasskube GitOps template",description:"A GitOps starter template to get started with ArgoCD & Glasskube in seconds instead of hours",date:"2024-08-07T00:00:00.000Z",tags:[{inline:!0,label:"glasskube",permalink:"/TP2024-T5/blog/tags/glasskube"},{inline:!0,label:"argocd",permalink:"/TP2024-T5/blog/tags/argocd"},{inline:!0,label:"gitops",permalink:"/TP2024-T5/blog/tags/gitops"},{inline:!0,label:"template",permalink:"/TP2024-T5/blog/tags/template"}],readingTime:9.905,hasTruncateMarker:!0,authors:[{name:"Christoph Enne",title:"Software Engineer",url:"https://github.com/christophenne/",imageURL:"https://avatars.githubusercontent.com/christophenne",key:"christophenne",page:null},{name:"Jake Page",title:"Developer Relations Engineer",url:"https://github.com/jakepage91",imageURL:"https://avatars.githubusercontent.com/jakepage91",key:"jpage",page:null},{name:"Philip Miglinci",title:"Co-Founder",url:"https://www.linkedin.com/in/pmigat/",imageURL:"https://avatars.githubusercontent.com/pmig",key:"pmig",page:null}],frontMatter:{slug:"gitops-template",title:"Glasskube GitOps template",description:"A GitOps starter template to get started with ArgoCD & Glasskube in seconds instead of hours",authors:["christophenne","jpage","pmig"],tags:["glasskube","argocd","gitops","template"],image:"https://github.com/user-attachments/assets/7ad482a7-c0a2-4081-8654-670f3cccb7cd"},unlisted:!1,prevItem:{title:"Launch week 2 - A new frontier of Kubernetes package management",permalink:"/TP2024-T5/blog/launch-week-number-2"},nextItem:{title:"Why integrating an IDP for Series A companies doesn't make\xa0sense",permalink:"/TP2024-T5/blog/series-a-idp"}},l={authorsImageUrls:[void 0,void 0,void 0]},c=[{value:"The next logical extension for infrastructure IaC",id:"the-next-logical-extension-for-infrastructure-iac",level:3},{value:"What is a Glasskube package?",id:"what-is-a-glasskube-package",level:3},{value:"Use ArgoCD to deploy Glasskube packages",id:"use-argocd-to-deploy-glasskube-packages",level:3},{value:"Template structure",id:"template-structure",level:3},{value:"Cluster setup",id:"cluster-setup",level:3},{value:"Prerequisites",id:"prerequisites",level:4},{value:"Install the Glasskube CLI",id:"install-the-glasskube-cli",level:3},{value:"How to use the\xa0template",id:"how-to-use-thetemplate",level:3},{value:"The result",id:"the-result",level:3},{value:"Managing your\xa0cluster",id:"managing-yourcluster",level:3},{value:"Using the\xa0CLI",id:"using-thecli",level:4},{value:"Through the\xa0UI",id:"through-theui",level:4},{value:"Installing packages",id:"installing-packages",level:3},{value:"Updating packages",id:"updating-packages",level:3},{value:"Manually",id:"manually",level:4},{value:"Automatically with Renovate",id:"automatically-with-renovate",level:4},{value:"Uninstalling packages",id:"uninstalling-packages",level:3},{value:"Updating Glasskube",id:"updating-glasskube",level:3},{value:"Working with Apps",id:"working-with-apps",level:3},{value:"Monitoring with <code>kube-prometheus-stack</code>",id:"monitoring-with-kube-prometheus-stack",level:3},{value:"Setting up a postgres dashboard",id:"setting-up-a-postgres-dashboard",level:4},{value:"Template setup walkthrough",id:"template-setup-walkthrough",level:3},{value:"Upcoming Features",id:"upcoming-features",level:3},{value:"Private Repo\xa0Support",id:"private-reposupport",level:4},{value:"Improved Renovate Integration",id:"improved-renovate-integration",level:4},{value:"Improved Dependency Resolution",id:"improved-dependency-resolution",level:4},{value:"Summary",id:"summary",level:2},{value:"Feedback",id:"feedback",level:3}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://github.com/user-attachments/assets/7ad482a7-c0a2-4081-8654-670f3cccb7cd",alt:"thumbnail"})}),"\n",(0,a.jsx)(t.p,{children:"We have all heard of writers looking at a blank page for hours trying to get over writer's block. For Kubernetes admins, setting up a brand new Kubernetes cluster can be just as daunting.\xa0\r\nEspecially when it involves configuring multiple elements like ArgoCD, a PostgreSQL database, monitoring tooling, and custom web apps."}),"\n",(0,a.jsx)(t.p,{children:"However, what if there was an easier way? Our new GitOps template is designed to make this process straightforward and hassle-free. It offers an easy to set up solution that requires almost no manual steps for a basic yet highly extensible GitOps setup. With this template, you can have your cluster up and running quickly and efficiently, allowing you to focus on what matters most, building and scaling your applications."}),"\n",(0,a.jsx)(t.p,{children:"If you\u2019re reading this, you likely already appreciate the benefits of GitOps and have a solid understanding of Kubernetes. However, until recently, there hasn\u2019t been an elegant, standardized process for managing the packages installed in your Kubernetes clusters. That\u2019s why we built one."}),"\n",(0,a.jsxs)(t.p,{children:["Let\u2019s put it to the test. With this template, ArgoCD, CloudNativePG and a simple bookmarking web app will be installed using the ",(0,a.jsx)(t.a,{href:"https://glasskube.dev/",children:"Glasskube"})," Package Manager and they\u2019ll receive upgrades through a Renovate integration via pull requests. This future-proof setup is easy to maintain and ensures your clusters stay up-to-date effortlessly."]}),"\n",(0,a.jsx)(t.h3,{id:"the-next-logical-extension-for-infrastructure-iac",children:"The next logical extension for infrastructure IaC"}),"\n",(0,a.jsx)(t.p,{children:"There are clear frameworks, templates, and standards for provisioning infrastructure across almost all cloud providers, and even templates for provisioning Kubernetes clusters themselves. However, this is often where the smooth, paved Infrastructure as Code (IaC) road turns to gravel. Kubernetes admins are frequently left to their own devices to install, configure, and manage the packages within the Kubernetes cluster due to a lack of standardized and simple package management tooling."}),"\n",(0,a.jsx)(t.p,{children:"Converting package configurations to code and managing them through GitOps, as you would with internal applications, has proven difficult. We believe the Glasskube package is a significant step toward the much-needed standardization in this area."}),"\n",(0,a.jsx)(t.h3,{id:"what-is-a-glasskube-package",children:"What is a Glasskube package?"}),"\n",(0,a.jsxs)(t.p,{children:["A Glasskube package is a standardized unit for managing software deployments within Kubernetes clusters using the Glasskube Package Manager. It is defined by a ",(0,a.jsx)(t.code,{children:"PackageManifest"}),", which contains all necessary information for identifying, configuring and installing a package. This manifest can include a Helm resource or a link to a manifest. Dependencies between packages can be declared, ensuring all required components are present before installation."]}),"\n",(0,a.jsx)(t.h3,{id:"use-argocd-to-deploy-glasskube-packages",children:"Use ArgoCD to deploy Glasskube packages"}),"\n",(0,a.jsx)(t.p,{children:"Helm charts or plain Kubernetes manifests lack the comprehensive framework that Glasskube packages offer for deploying resources declaratively in a reliable, consistent, and easily maintained way. In this demo, we\u2019ll use the GitOps template to bootstrap a fresh Kubernetes cluster with an instance of ArgoCD, which will then be used to deploy all subsequent packages."}),"\n",(0,a.jsx)(t.p,{children:"Here\u2019s what the cluster will look like."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://github.com/user-attachments/assets/4cbd8f2e-fd08-4380-80b7-1ebdb0a44860",alt:"diagram-gif"})}),"\n",(0,a.jsx)(t.p,{children:"Template diagram"}),"\n",(0,a.jsx)(t.h3,{id:"template-structure",children:"Template structure"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.em,{children:"\ud83d\udd17 Link to"})," ",(0,a.jsx)(t.a,{href:"https://github.com/glasskube/gitops-template",children:(0,a.jsx)(t.em,{children:"template"})})]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"The repository contains:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["a ",(0,a.jsx)(t.code,{children:"bootstrap"})," directory containing the initial/parent Argo Application, and the necessary Glasskube manifests."]}),"\n",(0,a.jsxs)(t.li,{children:["a ",(0,a.jsx)(t.code,{children:"packages"})," directory containing the ",(0,a.jsx)(t.code,{children:"ArgoCD"}),"\xa0,",(0,a.jsx)(t.code,{children:"cloudnative-pg"})," and ",(0,a.jsx)(t.code,{children:"kube-prometheus-stack"})," cluster packages."]}),"\n",(0,a.jsxs)(t.li,{children:["an ",(0,a.jsx)(t.code,{children:"apps"})," folder containing a simple ",(0,a.jsx)(t.code,{children:"shiori"})," bookmarking web app.\xa0"]}),"\n",(0,a.jsxs)(t.li,{children:["the ",(0,a.jsx)(t.code,{children:"renovate"})," configuration file."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["Glasskube custom resources will only be picked up by ArgoCD after placing the package definition files inside the ",(0,a.jsx)(t.code,{children:"packages"})," directory."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"\u26a0\ufe0f Please do not delete/uninstall the argo-cd package, as this will also remove everything else!"})}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Note that the parent application used to bootstrap (bootstrap/glasskube-application.yaml) will not be synced after the initial setup. If you want to change something about it, you will have to change the application via argo directly."}),"\n",(0,a.jsx)(t.h3,{id:"cluster-setup",children:"Cluster setup"}),"\n",(0,a.jsx)(t.h4,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(t.p,{children:"You will have to have access to an empty Kubernetes cluster."}),"\n",(0,a.jsx)(t.p,{children:"The easiest would be creating a new Minikube cluster with:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"minikube start -p glasskube\n"})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.em,{children:"\u26a0\ufe0f Glasskube should"})," ",(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.em,{children:"not yet be bootstrapped"})})," ",(0,a.jsx)(t.em,{children:"in the cluster."})]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"install-the-glasskube-cli",children:"Install the Glasskube CLI"}),"\n",(0,a.jsxs)(t.p,{children:["Make sure to have at least Glasskube version 0.16.0 ",(0,a.jsx)(t.a,{href:"https://glasskube.dev/docs/getting-started/install/",children:"installed"})," locally. If you don\u2019t, you can simply run:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"brew install glasskube/tap/glasskube\n"})}),"\n",(0,a.jsx)(t.h3,{id:"how-to-use-thetemplate",children:"How to use the\xa0template"}),"\n",(0,a.jsxs)(t.p,{children:["Use ",(0,a.jsx)(t.a,{href:"https://github.com/glasskube/gitops-template",children:"this"})," repository as your GitOps template"]}),"\n",(0,a.jsx)(t.p,{children:"Create a public GitHub repository based on this starter template by clicking \u201cUse this template\u201c. You can move it and/or make it private afterward."}),"\n",(0,a.jsxs)(t.p,{children:["Replace the placeholder ",(0,a.jsx)(t.strong,{children:"repoURL"})," in your local GitOps repository"]}),"\n",(0,a.jsxs)(t.p,{children:["Replace the default value of ",(0,a.jsx)(t.code,{children:"repoURL"})," to your repository url:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Line 12 in: ",(0,a.jsx)(t.code,{children:"bootstrap/glasskube-application.yaml"})]}),"\n",(0,a.jsxs)(t.li,{children:["Lines 11, 16 and 26 in: ",(0,a.jsx)(t.code,{children:"bootstrap/glasskube/applicationset.yaml"})]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Bootstrap ArgoCD and Glasskube for your Kubernetes cluster:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"glasskube bootstrap git --url <your-repo>\n"})}),"\n",(0,a.jsx)(t.h3,{id:"the-result",children:"The result"}),"\n",(0,a.jsx)(t.p,{children:"As a result, your cluster will be powered with GitOps capabilities by ArgoCD, as well as package management features by Glasskube. Argo manages itself, the Glasskube installation, as well as Glasskube packages\u200a\u2014\u200aall of which you can now manage GitOps-style with this repo."}),"\n",(0,a.jsxs)(t.p,{children:["Run ",(0,a.jsx)(t.code,{children:"glasskube serve"})," to open the Glasskube UI and either open the ArgoCD UI there, or with the command glasskube open argo-cd \u2013 but of course you can also use the Argo CLI. Follow the ",(0,a.jsx)(t.a,{href:"https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli",children:"ArgoCD docs"})," to get and reset the password to log in."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"\ud83d\udca1 Note that it might take a couple of minutes to start up ArgoCD, and for the initial GitOps sync to happen."})}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["In this template, for demonstration purposes we\u2019ve also installed the ",(0,a.jsx)(t.code,{children:"cloudnative-pg"})," and ",(0,a.jsx)(t.code,{children:"kube-prometheus-stack"}),"clusterpackages and a bookmarking application (",(0,a.jsx)(t.a,{href:"https://github.com/go-shiori/shiori",children:"shiori"}),"), which is making use of cloudnative-pg."]}),"\n",(0,a.jsx)(t.h3,{id:"managing-yourcluster",children:"Managing your\xa0cluster"}),"\n",(0,a.jsx)(t.p,{children:"Both CLI and UI offer features to manage your cluster following GitOps best practices."}),"\n",(0,a.jsx)(t.h4,{id:"using-thecli",children:"Using the\xa0CLI"}),"\n",(0,a.jsxs)(t.p,{children:["The relevant CLI commands offer the flags ",(0,a.jsx)(t.code,{children:"--dry-run"})," and ",(0,a.jsx)(t.code,{children:"-o yaml"})," which output the yaml object code which should then be pushed to your repository to be deployed."]}),"\n",(0,a.jsx)(t.h4,{id:"through-theui",children:"Through the\xa0UI"}),"\n",(0,a.jsxs)(t.p,{children:["The UI, when installed with the above ",(0,a.jsx)(t.code,{children:"glasskube bootstrap git"})," command, will also output the ",(0,a.jsx)(t.code,{children:"yaml"})," objects which you can copy to use in your git repo, instead of applying your changes directly."]}),"\n",(0,a.jsx)(t.h3,{id:"installing-packages",children:"Installing packages"}),"\n",(0,a.jsx)(t.p,{children:"To install a ClusterPackage, e.g. cert-manager, use the install command like this:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"glasskube install cert-manager --dry-run -o yaml --yes > cert-manager.yaml\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Instead of directly installing the ",(0,a.jsx)(t.code,{children:"ClusterPackage"}),", this will write the ",(0,a.jsx)(t.code,{children:"ClusterPackage"})," custom resource to the ",(0,a.jsx)(t.code,{children:"cert-manager.yaml file"}),", which can now be put into a new directory ",(0,a.jsx)(t.code,{children:"packages/cert-manager/"})," in the git repository. Once pushed to the repo, ArgoCD will pick up the changes after at most 5 minutes, create the ArgoCD Application wrapping the Glasskube ",(0,a.jsx)(t.code,{children:"ClusterPackage"}),". After that, the Glasskube operator will pick up the ",(0,a.jsx)(t.code,{children:"ClusterPackage"})," and finally install it in the cluster."]}),"\n",(0,a.jsx)(t.p,{children:"Similarly, when using the Glasskube UI, one can generate the ClusterPackage resource by using the \u201cShow YAML\u201d button on the page of the ClusterPackage."}),"\n",(0,a.jsx)(t.h3,{id:"updating-packages",children:"Updating packages"}),"\n",(0,a.jsx)(t.p,{children:"There are two options handling package version updates:"}),"\n",(0,a.jsx)(t.h4,{id:"manually",children:"Manually"}),"\n",(0,a.jsxs)(t.p,{children:["Using the ",(0,a.jsx)(t.code,{children:"glasskube update --dry-run -o yaml"})," command, or the corresponding button on the Glasskube UI. And then pushing to your repo as seen before.\xa0\r\nThe downside of doing it that way, is that someone has to manually execute the command, even though checking for updates and preparing the updates to the git repository as an automatable task."]}),"\n",(0,a.jsx)(t.h4,{id:"automatically-with-renovate",children:"Automatically with Renovate"}),"\n",(0,a.jsxs)(t.p,{children:["Once Renovate is ",(0,a.jsx)(t.a,{href:"https://github.com/renovatebot/renovate",children:"integrated"})," to track your GitOps repo, it will look for Glasskube packages and compare their versions to the official package repositories. When new versions are available, it will automatically open a PR. Once merged, you\u2019ll be running the latest versions of your packages."]}),"\n",(0,a.jsx)(t.h3,{id:"uninstalling-packages",children:"Uninstalling packages"}),"\n",(0,a.jsxs)(t.p,{children:["To uninstall a package or a ",(0,a.jsx)(t.code,{children:"ClusterPackage"}),", simply remove the custom resource from the git repository."]}),"\n",(0,a.jsx)(t.h3,{id:"updating-glasskube",children:"Updating Glasskube"}),"\n",(0,a.jsx)(t.p,{children:"When a new Glasskube version is available, the manifests have to be updated. To update the Glasskube manifests in your git repo, run the following command:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"glasskube bootstrap --dry-run -o yaml --force > bootstrap/glasskube/glasskube.yaml\n"})}),"\n",(0,a.jsxs)(t.p,{children:["After reviewing and merging those changes the update will be picked up by ArgoCD. The ",(0,a.jsx)(t.code,{children:"--force"})," flag is necessary for the command to continue manifest validation, even though failures occur."]}),"\n",(0,a.jsx)(t.h3,{id:"working-with-apps",children:"Working with Apps"}),"\n",(0,a.jsxs)(t.p,{children:["This template also contains a demo application: a bookmark manager called ",(0,a.jsx)(t.a,{href:"https://github.com/go-shiori/shiori",children:"shiori"}),".\r\nIts manifests are defined in ",(0,a.jsx)(t.code,{children:"apps/shiori"}),", which is a pattern you can follow for your own custom applications."]}),"\n",(0,a.jsxs)(t.p,{children:["In a minikube environment, two manual steps are required to access the application (for more information consult the\r\n",(0,a.jsx)(t.a,{href:"https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/",children:"minikube docs"}),"):"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Run ",(0,a.jsx)(t.code,{children:"minikube addons enable ingress -p gitops"}),"."]}),"\n",(0,a.jsxs)(t.li,{children:["Run ",(0,a.jsx)(t.code,{children:"minikube ip -p gitops"})," and add the line ",(0,a.jsx)(t.code,{children:"<your-IP> my-shiori.example"})," to your ",(0,a.jsx)(t.code,{children:"/etc/hosts"})," file."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["After that you will be able to access the application via ",(0,a.jsx)(t.a,{href:"http://my-shiori.example",children:"http://my-shiori.example"})," in your browser.\r\nThe default login credentials are ",(0,a.jsx)(t.code,{children:"shiori"})," / ",(0,a.jsx)(t.code,{children:"gopher"})," \u2013 for more information check the ",(0,a.jsx)(t.a,{href:"https://github.com/go-shiori/shiori/tree/master/docs",children:"shiori docs"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["In general, you can use the ",(0,a.jsx)(t.code,{children:"apps"})," directory to deploy such custom applications into your cluster. Any subdirectory will be\r\npicked up by ArgoCD and grouped as an ",(0,a.jsx)(t.code,{children:"Application"}),"."]}),"\n",(0,a.jsxs)(t.h3,{id:"monitoring-with-kube-prometheus-stack",children:["Monitoring with ",(0,a.jsx)(t.code,{children:"kube-prometheus-stack"})]}),"\n",(0,a.jsxs)(t.p,{children:["This template also installs the ",(0,a.jsx)(t.code,{children:"kube-prometheus-stack"})," clusterpackage, which is an easy way to get started with monitoring your cluster. You can open Grafana with ",(0,a.jsx)(t.code,{children:"glasskube open kube-prometheus-stack"}),". It does not come preconfigured in this example, but you can easily add a nice postgres dashboard and observe the metrics of the database while you are working with the bookmarking application."]}),"\n",(0,a.jsx)(t.h4,{id:"setting-up-a-postgres-dashboard",children:"Setting up a postgres dashboard"}),"\n",(0,a.jsxs)(t.p,{children:["We are going to make use of the ",(0,a.jsx)(t.a,{href:"https://grafana.com/grafana/dashboards/20417-cloudnativepg/",children:"cloudnativepg dashboard"}),".\r\nImport it by opening the ",(0,a.jsx)(t.a,{href:"http://localhost:8888/dashboard/import",children:"dashboard-import page"}),", pasting\r\n",(0,a.jsx)(t.a,{href:"https://grafana.com/grafana/dashboards/20417-cloudnativepg/",children:"https://grafana.com/grafana/dashboards/20417-cloudnativepg/"}),'\r\ninto the first textfield, and pressing "Load". Use the "Prometheus" data source on the following screen and finish the import process.']}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://github.com/user-attachments/assets/d54dcefe-535c-4812-bd80-486558f6caa4",alt:"CloudNativePG dashboard"})}),"\n",(0,a.jsx)(t.p,{children:"Of course monitoring your experimental minikube cluster is a bit of an overkill, but this is simply to demonstrate how these kind of cluster administration tasks can be integrated into this gitops stack."}),"\n",(0,a.jsx)(t.h3,{id:"template-setup-walkthrough",children:"Template setup walkthrough"}),"\n",(0,a.jsx)("div",{style:{display:"flex",justifyContent:"center",alignItems:"center"},children:(0,a.jsx)("iframe",{width:"100%",height:"460",src:"https://www.youtube-nocookie.com/embed/Xbs2Tq-dgbI?si=PfrhS5g0ZVq-YDCi",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0})}),"\n",(0,a.jsx)(t.h3,{id:"upcoming-features",children:"Upcoming Features"}),"\n",(0,a.jsx)(t.h4,{id:"private-reposupport",children:"Private Repo\xa0Support"}),"\n",(0,a.jsxs)(t.p,{children:["We are aware that GitOps repositories should not be public, but for simplicity we omitted this feature in the first version of the new GitOps-bootstrap command. Supporting private repos with authentication of course has high priority for the upcoming releases. We will also replace the ",(0,a.jsx)(t.code,{children:"repoURL"})," automatically, such that you don\u2019t need to this step manually when setting up the repo."]}),"\n",(0,a.jsx)(t.h4,{id:"improved-renovate-integration",children:"Improved Renovate Integration"}),"\n",(0,a.jsx)(t.p,{children:"As described above, the renovate integration currently is regex-based, and it does not consider dependencies yet. However, we don\u2019t see these shortcomings as a blocker and recommend to try out the renovate integration in the Glasskube/Argo Gitops setup."}),"\n",(0,a.jsx)(t.h4,{id:"improved-dependency-resolution",children:"Improved Dependency Resolution"}),"\n",(0,a.jsxs)(t.p,{children:["Installing packages with dependencies is not 100% GitOps-compatible yet, as the dependencies will be created by the operator. Consider this: To install a ",(0,a.jsx)(t.code,{children:"ClusterPackage <P>"})," that has a dependency on ",(0,a.jsx)(t.code,{children:"D"}),", one would do ",(0,a.jsx)(t.code,{children:"glasskube install <P> --dry-run -o yaml"}),", which would output the ",(0,a.jsx)(t.code,{children:"ClusterPackage"})," custom resource for ",(0,a.jsx)(t.code,{children:"<P>"}),". However, the dependency ",(0,a.jsx)(t.code,{children:"D"})," will only be resolved at reconciliation time by the package operator, and will therefore not be represented in the git repository at all."]}),"\n",(0,a.jsxs)(t.p,{children:["A temporary workaround would be to have a closer look at the output of the install command, which also shows the dependencies which will be installed and in which version. One could then manually add the required packages custom resources to the git repo as well. However, this will be tackled in a future version to make the user experience better, see this ",(0,a.jsx)(t.a,{href:"https://github.com/glasskube/glasskube/issues/430",children:"issue"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(t.p,{children:"With this template repository and guide we show how Glasskube can easily be set up in a ArgoCD powered Gitops environment,\r\nand how efficient package management is possible with this stack. Additionally we install a web application to show how\r\ncustom applications can make use of the Gitops setup and Glasskube packages."}),"\n",(0,a.jsx)(t.p,{children:"This is a first concept with some minor shortcomings, but we will continue to improve GitOps support."}),"\n",(0,a.jsx)(t.h3,{id:"feedback",children:"Feedback"}),"\n",(0,a.jsxs)(t.p,{children:["We love feedback! Whether you are just starting out or you are a seasoned professional, we'd like to hear your thoughts, inputs and questions\r\nregarding this starter template and corresponding guide here, in the ",(0,a.jsx)(t.a,{href:"https://github.com/glasskube/glasskube",children:"glasskube/glasskube repo"})," or on\r\nour ",(0,a.jsx)(t.a,{href:"https://discord.gg/SxH6KUCGH7",children:"Discord"}),". Thanks!"]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var a=s(6540);const i={},n=a.createContext(i);function r(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);