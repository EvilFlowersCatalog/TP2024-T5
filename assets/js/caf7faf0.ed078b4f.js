"use strict";(self.webpackChunkglasskube_docs=self.webpackChunkglasskube_docs||[]).push([[6255],{9561:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"second-record","metadata":{"permalink":"/TP2024-T5/blog/second-record","source":"@site/blog/2024-10-08-second-record/index.mdx","title":"Z\xe1pisnica zo stretnutia \u010d. 2","description":"cover-image-launch-week","date":"2024-10-08T00:00:00.000Z","tags":[{"inline":true,"label":"zimny-semester","permalink":"/TP2024-T5/blog/tags/zimny-semester"}],"readingTime":1.13,"hasTruncateMarker":true,"authors":[{"name":"Bc. Darina Dvoreck\xe1","title":"UX Team","key":"darina","page":null}],"frontMatter":{"slug":"second-record","title":"Z\xe1pisnica zo stretnutia \u010d. 2","authors":["darina"],"tags":["zimny-semester"],"image":"https://github.com/user-attachments/assets/3d4d0bee-fa39-4d52-8873-09d9226c1b18"},"unlisted":false,"nextItem":{"title":"Z\xe1pisnica zo stretnutia \u010d. 1","permalink":"/TP2024-T5/blog/first-record"}},"content":"![cover-image-launch-week](https://github.com/user-attachments/assets/3d4d0bee-fa39-4d52-8873-09d9226c1b18)\\r\\n\\r\\n\x3c!-- \u274c\u2705 --\x3e\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Podrobnosti\\r\\n\\r\\n**D\xe1tum:** Utorok 8.10. 2024  \\r\\n**Typ stretnutia:** Stretnutie ved\xfaceho t\xedmu a \u010dlenov t\xedmu  \\r\\n**Ved\xfaci t\xedmu:** Ing. Jakub Dubec  \\r\\n**\u010cas stretnutia:** 8:00  \\r\\n**Miesto stretnutia:** FIIT STU zasadacia miestnos\u0165 v kni\u017enici   \\r\\n**Zapisovate\u013e:** Darina Dvoreck\xe1\\r\\n\\r\\n\\r\\n## Pr\xedtomnos\u0165\\r\\n\\r\\n \u2705 Ing. Jakub Dubec  \\r\\n \u2705 Bc. Alexander \u010cerepan  \\r\\n \u2705 Bc. Darina Dvoreck\xe1  \\r\\n \u2705 Bc. Patrik Kozl\xedk  \\r\\n \u2705 Bc. Laura Kraj\u010dovi\u010dov\xe1  \\r\\n \u274c Bc. Robert Prikryl - nepr\xedtomn\xfd zo zdravotn\xfdch d\xf4vodov  \\r\\n \u2705 Bc. Mat\xfa\u0161 Makay\\r\\n\\r\\n## Priebeh stretnutia\\r\\n\\r\\nDruh\xe9 stretnutie prebiehalo v rovnakom duchu ako to prv\xe9, kedy sme si po\u010das stretnutia pre\u0161li nasledovn\xfa agendu:\\r\\n- **JIRA a projekt mana\u017ement** - pre\u0161li sme si setup pre projekt v JIRA s podmienkou doplnenia ch\xfdbaj\xfacich \xfaloh\\r\\n\\r\\n- **webov\xe1 str\xe1nka** - pre\u0161li sme si setup webovej str\xe1nky a upresnili si jej obsah, ktor\xfd bude potrebn\xfd doplni\u0165\\r\\n- **pl\xe1n pr\xe1ce pre jednotliv\xe9 t\xedmy na najbli\u017e\u0161ie dva t\xfd\u017edne** - s ka\u017ed\xfdm t\xedmom bol prekonzultovan\xfd pl\xe1n pr\xe1ce na nasleduj\xface dva t\xfd\u017edne\\r\\n- **vo\u013en\xe1 diskusia** - po\u010das vo\u013enej diskusie sme si rozkreslili architekt\xfaru, prebrali postup pri microservices, prebrali mo\u017en\xe9 rie\u0161enia a v\xfdzvy pre AI, upresnili postup pre UX testovanie a dohodli si stretnutie pre UX anal\xfdzu syst\xe9mu *ELVIRA*\\r\\n\\r\\n\\r\\n\\r\\n## To Do List\\r\\n\\r\\n- dokon\u010di\u0165 webov\xfa str\xe1nku\\r\\n- doplni\u0165 \xfalohy do JIRA\\r\\n- pripoji\u0165 sa na virtu\xe1lne stroje\\r\\n- rozbehn\xfa\u0165 infra\u0161trukt\xfaru a zozn\xe1mi\u0165 sa so syst\xe9mom\\r\\n- ka\u017ed\xe1 pracovn\xe1 skupina si vytvor\xed road mapu"},{"id":"first-record","metadata":{"permalink":"/TP2024-T5/blog/first-record","source":"@site/blog/2024-10-01-first-record/index.mdx","title":"Z\xe1pisnica zo stretnutia \u010d. 1","description":"cover-image-launch-week","date":"2024-10-01T00:00:00.000Z","tags":[{"inline":true,"label":"zimny-semester","permalink":"/TP2024-T5/blog/tags/zimny-semester"}],"readingTime":1.445,"hasTruncateMarker":true,"authors":[{"name":"Bc. Darina Dvoreck\xe1","title":"UX Team","key":"darina","page":null}],"frontMatter":{"slug":"first-record","title":"Z\xe1pisnica zo stretnutia \u010d. 1","authors":["darina"],"tags":["zimny-semester"],"image":"https://github.com/user-attachments/assets/3d4d0bee-fa39-4d52-8873-09d9226c1b18"},"unlisted":false,"prevItem":{"title":"Z\xe1pisnica zo stretnutia \u010d. 2","permalink":"/TP2024-T5/blog/second-record"},"nextItem":{"title":"Launch week 2 - A new frontier of Kubernetes package management","permalink":"/TP2024-T5/blog/launch-week-number-2"}},"content":"![cover-image-launch-week](https://github.com/user-attachments/assets/3d4d0bee-fa39-4d52-8873-09d9226c1b18)\\r\\n\\r\\n\x3c!-- \u274c\u2705 --\x3e\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Podrobnosti\\r\\n\\r\\n**D\xe1tum:** Utorok 1.10. 2024  \\r\\n**Typ stretnutia:** Stretnutie ved\xfaceho t\xedmu a \u010dlenov t\xedmu  \\r\\n**Ved\xfaci t\xedmu:** Ing. Jakub Dubec  \\r\\n**\u010cas stretnutia:** 8:00  \\r\\n**Miesto stretnutia:** FIIT STU zasadacia miestnos\u0165 v kni\u017enici   \\r\\n**Zapisovate\u013e:** Darina Dvoreck\xe1\\r\\n\\r\\n\\r\\n## Pr\xedtomnos\u0165\\r\\n\\r\\n \u2705 Ing. Jakub Dubec  \\r\\n \u2705 Bc. Alexander \u010cerepan  \\r\\n \u2705 Bc. Darina Dvoreck\xe1  \\r\\n \u2705 Bc. Patrik Kozl\xedk  \\r\\n \u2705 Bc. Laura Kraj\u010dovi\u010dov\xe1  \\r\\n \u2705 Bc. Robert Prikryl  \\r\\n \u2705 Bc. Mat\xfa\u0161 Makay\\r\\n\\r\\n## Priebeh stretnutia\\r\\n\\r\\nPrv\xe9 ofici\xe1lne stretnutie ved\xfaceho t\xedmu s \u010dlenmi t\xedmu prebehlo pod\u013ea pl\xe1nu v zasadacej miestnosti v kni\u017enici.\\r\\nPo kr\xe1tkom \xfavode a zozn\xe1men\xed sa sme si pre\u0161li nasledovn\xfa agendu stretnutia:\\r\\n- **organiza\u010dn\xe9 inform\xe1cie** - ako prv\xe9 sme boli obozn\xe1men\xed s organiza\u010dn\xfdmi inform\xe1ciami oh\u013eadom predmetu *T\xedmov\xfd projekt 1* a samotn\xe9ho projektu *NEMAL*\\r\\n\\r\\n- **aktu\xe1lny stav projektu, dlhodob\xe9 smerovanie a ciele** - n\xe1sledne n\xe1m bol predstaven\xfd s\xfa\u010dasn\xfd stav projektu a jeho dlhob\xe9 smerovanie, ciele a predstavy oh\u013eadom rie\u0161en\xed konkr\xe9tnych probl\xe9mov\\r\\n- **definovanie cie\u013eov** - po\u010das diskusie sme si zadali ciele, ktor\xe9 ako t\xedm chceme splni\u0165 po\u010das rie\u0161enia projektu\\r\\n- **person\xe1lne obsadenie pracovn\xfdch skup\xedn a ur\u010denie ved\xfaceho t\xedmu** - na prvom stretnut\xed sme si predbe\u017ene ur\u010dili person\xe1lne obsadenie do \\r\\npracovn\xfdch skup\xedn (Microservices t\xedm, AI t\xedm, UX t\xedm) a demokraticky sme si zvolili Darinu Dvoreck\xfa ako ved\xfaceho t\xedmu (z\xe1rove\u0148 aj Scrum mastera)\\r\\n- **GitHub** - vytvorenie repozit\xe1ra pre webov\xfa str\xe1nku\\r\\n- **webov\xe1 str\xe1nka** - prebrali sme mo\u017en\xe9 rie\u0161enia pre vytvorenie webovej str\xe1nky t\xedmu a jej obsahu, ktor\xfd by sa mal na nej nach\xe1dza\u0165 (z\xe1pisnice, dokument\xe1cia, \u0161printy, ...)\\r\\n- **diskusia** - po\u010das vo\u013enej diskusie sme si viac pribl\xed\u017eili na\u0161e ciele, probl\xe9mov\xe9 oblasti a dostupn\xe9 technol\xf3gie\\r\\n\\r\\n## To Do List\\r\\n\\r\\n- vytvori\u0165 t\xedmov\xfa JIRU\\r\\n- rozdeli\u0165 sa do t\xedmov\\r\\n- ka\u017ed\xfd t\xedm vytvor\xed re\xe1lie pre projekt\\r\\n- vytvori\u0165 webov\xfa str\xe1nku (odpor\xfa\u010dan\xe9 pomocou GitHub Pages)"},{"id":"launch-week-number-2","metadata":{"permalink":"/TP2024-T5/blog/launch-week-number-2","source":"@site/blog/2024-09-09-launch-week-2/index.mdx","title":"Launch week 2 - A new frontier of Kubernetes package management","description":"We are happy to announce the second official Glasskube Launch week, full of updates, fun and a whole lot of Kubernetes package management.","date":"2024-09-09T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"},{"inline":true,"label":"gitops","permalink":"/TP2024-T5/blog/tags/gitops"},{"inline":true,"label":"launch-week","permalink":"/TP2024-T5/blog/tags/launch-week"}],"readingTime":4.36,"hasTruncateMarker":true,"authors":[{"name":"Jake Page","title":"Developer Relations Engineer","url":"https://github.com/jakepage91","imageURL":"https://avatars.githubusercontent.com/jakepage91","key":"jpage","page":null},{"name":"Philip Miglinci","title":"Co-Founder","url":"https://www.linkedin.com/in/pmigat/","imageURL":"https://avatars.githubusercontent.com/pmig","key":"pmig","page":null}],"frontMatter":{"slug":"launch-week-number-2","title":"Launch week 2 - A new frontier of Kubernetes package management","description":"We are happy to announce the second official Glasskube Launch week, full of updates, fun and a whole lot of Kubernetes package management.","authors":["jpage","pmig"],"tags":["glasskube","gitops","launch-week"],"image":"https://github.com/user-attachments/assets/3d4d0bee-fa39-4d52-8873-09d9226c1b18"},"unlisted":false,"prevItem":{"title":"Z\xe1pisnica zo stretnutia \u010d. 1","permalink":"/TP2024-T5/blog/first-record"},"nextItem":{"title":"Glasskube GitOps template","permalink":"/TP2024-T5/blog/gitops-template"}},"content":"![cover-image-launch-week](https://github.com/user-attachments/assets/3d4d0bee-fa39-4d52-8873-09d9226c1b18)\\r\\n\\r\\nHowdy there Kubernetes package managers! \ud83e\udd20\\r\\n\\r\\nIn case you\u2019re new around these parts.\\r\\nA lot has been going on in the wild world of Kubernetes package management lately, so we thought it was high time to put a launch week together to announce a few features, share some exciting news and keep you up to date on what\'s going on with the most exciting Kubernetes package manager around these parts.\\r\\n\\r\\nYeehaw!\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n> Ok I\u2019ll stop talking like a cowboy now \ud83d\ude05\\r\\n\\r\\nI hope it goes without saying that all are welcome, so don\u2019t be a stranger, join us on Monday the 9th of September for our launch week kickoff party. **Reserve your spot** [here](https://discord.gg/Jswn2Vqz?event=1274009068884721725).\\r\\n\\r\\n![Discord Launch Party](https://github.com/user-attachments/assets/b9773cf0-03bf-4fa4-9dbd-b2bf2a887e38)\\r\\n\\r\\nMake sure to mark \u201c**interested**\u201c to be notified on the day of the event.\\r\\n\\r\\nSo you might be thinking to yourself, what does the Glasskube team have up their sleeve? Let\u2019s have a look, shall we?\\r\\n\\r\\n## 1\\\\. Glasskube is Gitops Ready with ArgoCD\\r\\n\\r\\nDay one of launch week will be about celebrating the fact that it\u2019s safe to consider Glasskube \u201c[GitOps ready](https://glasskube.dev/docs/integration/gitops/)\u201c.\\r\\nGitOps has became the standard for Kubernetes configuration file revision, utilizing Git as the single source of truth.\\r\\nGlasskube can not only directly modify the resources in your cluster, but now also output your Glasskube packages as yaml to put them into Git.\\r\\n\\r\\n![GitOps ready](https://github.com/user-attachments/assets/491b146a-63a0-4585-93ee-aac8b7013f53)\\r\\n\\r\\nDuring the rest of the launch week, we will showcase more new features of Glasskube daily.\\r\\n\\r\\n## 2\\\\. What\u2019s so good about GitOps anyway?\\r\\n\\r\\nImagine if I told you you could bootstrap an ArgoCD setup with just one command and keep it up-to-date.\\r\\nThe Glasskube bootstrap command now also supports bootstrapping from git.\\r\\n\\r\\n![Glasskube GitOps command](https://github.com/user-attachments/assets/3dab678a-1ff7-4167-82b6-975070c70a0d)\\r\\n\\r\\nThe Glasskube GitOps template is [officially here](https://glasskube.dev/blog/gitops-template/).\\r\\nYou can now define every single component of your cluster package stack, [now supporting both public and private GitHub repositories](https://github.com/glasskube/gitops-template?tab=readme-ov-file#private-repositories), push it to a Git repository, and let ArgoCD handle the deployment.\\r\\n\\r\\nAnd it\u2019s no exaggeration to say that deploying your packages to Kubernetes now takes seconds instead of hours. Who wouldn\u2019t want that?\\r\\n\\r\\n![GitOps template diagram](https://github.com/user-attachments/assets/31237e57-c924-42f6-8f9b-ec737226014a)\\r\\n\\r\\n## 3\\\\. Hear that? \u2026silence! But your packages are still up-to-date\\r\\n\\r\\nYou might be wondering, \\"Wait, so I don\u2019t have to update the packages myself?\\"\\r\\n\\r\\nThat\'s right! The public Glasskube package repository, the GitHub repo setup similar to Homebrews public tap, is the source for our [Renovate](https://docs.renovatebot.com/) integration.\\r\\nSo if new versions of supported Glasskube packages are available, we test and add them to the list of versions you can choose from.\\r\\nAlso the Renovate automation picks up the latest version and creates a pull request in your GitOps repository.\\r\\n\\r\\n![Renovate integration](https://github.com/user-attachments/assets/09c6a01a-1f21-4acd-bedb-33e8390886d4)\\r\\n\\r\\nWe\'ll dive deeper into [how this works](https://glasskube.dev/docs/integration/renovate/) and discuss how you can opt in or out of the auto-updating feature.\\r\\n\\r\\n## 4\\\\. Everybody needs a home, and so do packages\\r\\n\\r\\nIntroducing [Glasskube Hub](https://glasskube.dev/products/hub/), think of it as the equivalent to Docker Hub or Artifact Hub, but for Glasskube packages.\\r\\nAll available Glasskube packages are conveniently gathered in one place and can be consumed on demand.\\r\\n\\r\\n![Glasskube hub](https://github.com/user-attachments/assets/74dd15b1-ebdc-4071-b02e-00d802e8a71b)\\r\\n\\r\\nIn addition to storing freely available Open Source Packages, the Glasskube Hub will also host private packages.\\r\\n\\r\\nWait, what are private packages exactly?\\r\\n\\r\\nIf your organization excels at what you do, so much so that customers are clamoring to self-host your solution, yet you lack the time, resources, or inclination to make it happen - Private Packages are the answer.\\r\\nWe partner with you to build and host a Glasskube native package around your offering, making it incredibly simple to customize, configure, install, and update your tool within your customers\' infrastructure.\\r\\nIf you\u2019d like to learn more, [schedule a call today](https://cal.glasskube.eu/team/founder/demo).\\r\\n\\r\\nThroughout the launch week, we\'ll dive into the best ways to use Glasskube Hub, including how to work with private packages stored there.\\r\\n\\r\\n## 5\\\\. Introducing Package Scopes\\r\\n\\r\\nEven though the feature was introduced a couple of minor versions ago. We will explore the use cases for differently [scoped packages](/docs/design/package-scopes/).\\r\\n\\r\\n![Package scopes](https://github.com/user-attachments/assets/e42b98e5-35d2-4c90-a3eb-b37f1550a456)\\r\\n\\r\\nHere is a sneak preview:\\r\\n\\r\\n - **Cluster-scoped:** These are packages that provide cluster-wide functionality or manage shared resources, such as networking, monitoring, or security tools.\\r\\n - **Namespaced:** These are usually packages that can be specific to a particular application or team, or when you need multiple isolated instances of the same package.\\r\\n\\r\\nPackage scopes give package authors the ability to control the scope of the installation.\\r\\n\\r\\n## Wait there\u2019s more?\\r\\n\\r\\nThere sure is, during the whole week we are both launching [Glasskube](https://glasskube.dev/) on [DevHunt](https://devhunt.org/), if you could be so kind as to support us over there, we\'d be mighty grateful!\\r\\n\\r\\n## Animals are our friends, we are planning a different type of hunt\\r\\n\\r\\nNo launch week can be complete without an actual product launch! We are exploring new platforms to be able to find new Kubernetes admins who want to join the party! We will give you more information during the kickoff party.\\r\\n\\r\\n![DevHunt Launch](https://github.com/user-attachments/assets/96b267f7-e82d-4539-9d67-2468bd2ba636)\\r\\n\\r\\n## Launch video\\r\\n\\r\\n<div style={{display: \'flex\', justifyContent: \'center\', alignItems: \'center\'}}>\\r\\n  <iframe width=\\"100%\\" height=\\"460\\" src=\\"https://www.youtube.com/embed/Hec22fEDTgM?si=rGEYEOvyvFSbcLBR\\"\\r\\n          title=\\"YouTube video player\\" frameborder=\\"0\\"\\r\\n          allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>\\r\\n</div>\\r\\n\\r\\n## Don\u2019t miss a thing\\r\\n\\r\\nFollow us on [Discord](https://discord.gg/e89NzZerVu?event=1274009068884721725), [Twitter](https://x.com/glasskube), and [LinkedIn](https://www.linkedin.com/company/glasskube) because we\u2019ll be sharing announcements events every day. I hope you are as excited as we are!"},{"id":"gitops-template","metadata":{"permalink":"/TP2024-T5/blog/gitops-template","source":"@site/blog/2024-08-07-gitops-template/index.mdx","title":"Glasskube GitOps template","description":"A GitOps starter template to get started with ArgoCD & Glasskube in seconds instead of hours","date":"2024-08-07T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"},{"inline":true,"label":"argocd","permalink":"/TP2024-T5/blog/tags/argocd"},{"inline":true,"label":"gitops","permalink":"/TP2024-T5/blog/tags/gitops"},{"inline":true,"label":"template","permalink":"/TP2024-T5/blog/tags/template"}],"readingTime":9.905,"hasTruncateMarker":true,"authors":[{"name":"Christoph Enne","title":"Software Engineer","url":"https://github.com/christophenne/","imageURL":"https://avatars.githubusercontent.com/christophenne","key":"christophenne","page":null},{"name":"Jake Page","title":"Developer Relations Engineer","url":"https://github.com/jakepage91","imageURL":"https://avatars.githubusercontent.com/jakepage91","key":"jpage","page":null},{"name":"Philip Miglinci","title":"Co-Founder","url":"https://www.linkedin.com/in/pmigat/","imageURL":"https://avatars.githubusercontent.com/pmig","key":"pmig","page":null}],"frontMatter":{"slug":"gitops-template","title":"Glasskube GitOps template","description":"A GitOps starter template to get started with ArgoCD & Glasskube in seconds instead of hours","authors":["christophenne","jpage","pmig"],"tags":["glasskube","argocd","gitops","template"],"image":"https://github.com/user-attachments/assets/7ad482a7-c0a2-4081-8654-670f3cccb7cd"},"unlisted":false,"prevItem":{"title":"Launch week 2 - A new frontier of Kubernetes package management","permalink":"/TP2024-T5/blog/launch-week-number-2"},"nextItem":{"title":"Why integrating an IDP for Series A companies doesn\'t make\xa0sense","permalink":"/TP2024-T5/blog/series-a-idp"}},"content":"![thumbnail](https://github.com/user-attachments/assets/7ad482a7-c0a2-4081-8654-670f3cccb7cd)\\r\\n\\r\\nWe have all heard of writers looking at a blank page for hours trying to get over writer\'s block. For Kubernetes admins, setting up a brand new Kubernetes cluster can be just as daunting.\xa0\\r\\nEspecially when it involves configuring multiple elements like ArgoCD, a PostgreSQL database, monitoring tooling, and custom web apps.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nHowever, what if there was an easier way? Our new GitOps template is designed to make this process straightforward and hassle-free. It offers an easy to set up solution that requires almost no manual steps for a basic yet highly extensible GitOps setup. With this template, you can have your cluster up and running quickly and efficiently, allowing you to focus on what matters most, building and scaling your applications.\\r\\n\\r\\nIf you\u2019re reading this, you likely already appreciate the benefits of GitOps and have a solid understanding of Kubernetes. However, until recently, there hasn\u2019t been an elegant, standardized process for managing the packages installed in your Kubernetes clusters. That\u2019s why we built one.\\r\\n\\r\\nLet\u2019s put it to the test. With this template, ArgoCD, CloudNativePG and a simple bookmarking web app will be installed using the [Glasskube](https://glasskube.dev/) Package Manager and they\u2019ll receive upgrades through a Renovate integration via pull requests. This future-proof setup is easy to maintain and ensures your clusters stay up-to-date effortlessly.\\r\\n\\r\\n### The next logical extension for infrastructure IaC\\r\\n\\r\\nThere are clear frameworks, templates, and standards for provisioning infrastructure across almost all cloud providers, and even templates for provisioning Kubernetes clusters themselves. However, this is often where the smooth, paved Infrastructure as Code (IaC) road turns to gravel. Kubernetes admins are frequently left to their own devices to install, configure, and manage the packages within the Kubernetes cluster due to a lack of standardized and simple package management tooling.\\r\\n\\r\\nConverting package configurations to code and managing them through GitOps, as you would with internal applications, has proven difficult. We believe the Glasskube package is a significant step toward the much-needed standardization in this area.\\r\\n\\r\\n### What is a Glasskube package?\\r\\n\\r\\nA Glasskube package is a standardized unit for managing software deployments within Kubernetes clusters using the Glasskube Package Manager. It is defined by a `PackageManifest`, which contains all necessary information for identifying, configuring and installing a package. This manifest can include a Helm resource or a link to a manifest. Dependencies between packages can be declared, ensuring all required components are present before installation.\\r\\n\\r\\n### Use ArgoCD to deploy Glasskube packages\\r\\n\\r\\nHelm charts or plain Kubernetes manifests lack the comprehensive framework that Glasskube packages offer for deploying resources declaratively in a reliable, consistent, and easily maintained way. In this demo, we\u2019ll use the GitOps template to bootstrap a fresh Kubernetes cluster with an instance of ArgoCD, which will then be used to deploy all subsequent packages.\\r\\n\\r\\nHere\u2019s what the cluster will look like.\\r\\n\\r\\n![diagram-gif](https://github.com/user-attachments/assets/4cbd8f2e-fd08-4380-80b7-1ebdb0a44860)\\r\\n\\r\\nTemplate diagram\\r\\n\\r\\n### Template structure\\r\\n\\r\\n> _\ud83d\udd17 Link to_ [_template_](https://github.com/glasskube/gitops-template)\\r\\n\\r\\nThe repository contains:\\r\\n\\r\\n-   a `bootstrap` directory containing the initial/parent Argo Application, and the necessary Glasskube manifests.\\r\\n-   a `packages` directory containing the `ArgoCD`\xa0,`cloudnative-pg` and `kube-prometheus-stack` cluster packages.\\r\\n-   an `apps` folder containing a simple `shiori` bookmarking web app.\xa0\\r\\n-   the `renovate` configuration file.\\r\\n\\r\\nGlasskube custom resources will only be picked up by ArgoCD after placing the package definition files inside the `packages` directory.\\r\\n\\r\\n> _\u26a0\ufe0f Please do not delete/uninstall the argo-cd package, as this will also remove everything else!_\\r\\n\\r\\nNote that the parent application used to bootstrap (bootstrap/glasskube-application.yaml) will not be synced after the initial setup. If you want to change something about it, you will have to change the application via argo directly.\\r\\n\\r\\n### Cluster setup\\r\\n\\r\\n#### Prerequisites\\r\\n\\r\\nYou will have to have access to an empty Kubernetes cluster.\\r\\n\\r\\nThe easiest would be creating a new Minikube cluster with:\\r\\n\\r\\n```\\r\\nminikube start -p glasskube\\r\\n```\\r\\n\\r\\n> _\u26a0\ufe0f Glasskube should_ **_not yet be bootstrapped_** _in the cluster._\\r\\n\\r\\n### Install the Glasskube CLI\\r\\n\\r\\nMake sure to have at least Glasskube version 0.16.0 [installed](https://glasskube.dev/docs/getting-started/install/) locally. If you don\u2019t, you can simply run:\\r\\n\\r\\n```\\r\\nbrew install glasskube/tap/glasskube\\r\\n```\\r\\n\\r\\n### How to use the\xa0template\\r\\n\\r\\nUse [this](https://github.com/glasskube/gitops-template) repository as your GitOps template\\r\\n\\r\\nCreate a public GitHub repository based on this starter template by clicking \u201cUse this template\u201c. You can move it and/or make it private afterward.\\r\\n\\r\\nReplace the placeholder **repoURL** in your local GitOps repository\\r\\n\\r\\nReplace the default value of `repoURL` to your repository url:\\r\\n\\r\\n-   Line 12 in: `bootstrap/glasskube-application.yaml`\\r\\n-   Lines 11, 16 and 26 in: `bootstrap/glasskube/applicationset.yaml`\\r\\n\\r\\nBootstrap ArgoCD and Glasskube for your Kubernetes cluster:\\r\\n\\r\\n```\\r\\nglasskube bootstrap git --url <your-repo>\\r\\n```\\r\\n\\r\\n### The result\\r\\n\\r\\nAs a result, your cluster will be powered with GitOps capabilities by ArgoCD, as well as package management features by Glasskube. Argo manages itself, the Glasskube installation, as well as Glasskube packages\u200a\u2014\u200aall of which you can now manage GitOps-style with this repo.\\r\\n\\r\\nRun `glasskube serve` to open the Glasskube UI and either open the ArgoCD UI there, or with the command glasskube open argo-cd \u2013 but of course you can also use the Argo CLI. Follow the [ArgoCD docs](https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli) to get and reset the password to log in.\\r\\n\\r\\n> _\ud83d\udca1 Note that it might take a couple of minutes to start up ArgoCD, and for the initial GitOps sync to happen._\\r\\n\\r\\nIn this template, for demonstration purposes we\u2019ve also installed the `cloudnative-pg` and `kube-prometheus-stack`clusterpackages and a bookmarking application ([shiori](https://github.com/go-shiori/shiori)), which is making use of cloudnative-pg.\\r\\n\\r\\n### Managing your\xa0cluster\\r\\n\\r\\nBoth CLI and UI offer features to manage your cluster following GitOps best practices.\\r\\n\\r\\n#### Using the\xa0CLI\\r\\n\\r\\nThe relevant CLI commands offer the flags `--dry-run` and `-o yaml` which output the yaml object code which should then be pushed to your repository to be deployed.\\r\\n\\r\\n#### Through the\xa0UI\\r\\n\\r\\nThe UI, when installed with the above `glasskube bootstrap git` command, will also output the `yaml` objects which you can copy to use in your git repo, instead of applying your changes directly.\\r\\n\\r\\n### Installing packages\\r\\n\\r\\nTo install a ClusterPackage, e.g. cert-manager, use the install command like this:\\r\\n\\r\\n```\\r\\nglasskube install cert-manager --dry-run -o yaml --yes > cert-manager.yaml\\r\\n```\\r\\n\\r\\nInstead of directly installing the `ClusterPackage`, this will write the `ClusterPackage` custom resource to the `cert-manager.yaml file`, which can now be put into a new directory `packages/cert-manager/` in the git repository. Once pushed to the repo, ArgoCD will pick up the changes after at most 5 minutes, create the ArgoCD Application wrapping the Glasskube `ClusterPackage`. After that, the Glasskube operator will pick up the `ClusterPackage` and finally install it in the cluster.\\r\\n\\r\\nSimilarly, when using the Glasskube UI, one can generate the ClusterPackage resource by using the \u201cShow YAML\u201d button on the page of the ClusterPackage.\\r\\n\\r\\n### Updating packages\\r\\n\\r\\nThere are two options handling package version updates:\\r\\n\\r\\n#### Manually\\r\\n\\r\\nUsing the `glasskube update --dry-run -o yaml` command, or the corresponding button on the Glasskube UI. And then pushing to your repo as seen before.\xa0\\r\\nThe downside of doing it that way, is that someone has to manually execute the command, even though checking for updates and preparing the updates to the git repository as an automatable task.\\r\\n\\r\\n#### Automatically with Renovate\\r\\n\\r\\nOnce Renovate is [integrated](https://github.com/renovatebot/renovate) to track your GitOps repo, it will look for Glasskube packages and compare their versions to the official package repositories. When new versions are available, it will automatically open a PR. Once merged, you\u2019ll be running the latest versions of your packages.\\r\\n\\r\\n### Uninstalling packages\\r\\n\\r\\nTo uninstall a package or a `ClusterPackage`, simply remove the custom resource from the git repository.\\r\\n\\r\\n### Updating Glasskube\\r\\n\\r\\nWhen a new Glasskube version is available, the manifests have to be updated. To update the Glasskube manifests in your git repo, run the following command:\\r\\n\\r\\n```\\r\\nglasskube bootstrap --dry-run -o yaml --force > bootstrap/glasskube/glasskube.yaml\\r\\n```\\r\\n\\r\\nAfter reviewing and merging those changes the update will be picked up by ArgoCD. The `--force` flag is necessary for the command to continue manifest validation, even though failures occur.\\r\\n\\r\\n### Working with Apps\\r\\n\\r\\nThis template also contains a demo application: a bookmark manager called [shiori](https://github.com/go-shiori/shiori).\\r\\nIts manifests are defined in `apps/shiori`, which is a pattern you can follow for your own custom applications.\\r\\n\\r\\nIn a minikube environment, two manual steps are required to access the application (for more information consult the\\r\\n[minikube docs](https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/)):\\r\\n* Run `minikube addons enable ingress -p gitops`.\\r\\n* Run `minikube ip -p gitops` and add the line `<your-IP> my-shiori.example` to your `/etc/hosts` file.\\r\\n\\r\\nAfter that you will be able to access the application via [http://my-shiori.example](http://my-shiori.example) in your browser.\\r\\nThe default login credentials are `shiori` / `gopher` \u2013 for more information check the [shiori docs](https://github.com/go-shiori/shiori/tree/master/docs).\\r\\n\\r\\nIn general, you can use the `apps` directory to deploy such custom applications into your cluster. Any subdirectory will be\\r\\npicked up by ArgoCD and grouped as an `Application`.\\r\\n\\r\\n### Monitoring with `kube-prometheus-stack`\\r\\n\\r\\nThis template also installs the `kube-prometheus-stack` clusterpackage, which is an easy way to get started with monitoring your cluster. You can open Grafana with `glasskube open kube-prometheus-stack`. It does not come preconfigured in this example, but you can easily add a nice postgres dashboard and observe the metrics of the database while you are working with the bookmarking application.\\r\\n\\r\\n#### Setting up a postgres dashboard\\r\\n\\r\\nWe are going to make use of the [cloudnativepg dashboard](https://grafana.com/grafana/dashboards/20417-cloudnativepg/).\\r\\nImport it by opening the [dashboard-import page](http://localhost:8888/dashboard/import), pasting\\r\\n[https://grafana.com/grafana/dashboards/20417-cloudnativepg/](https://grafana.com/grafana/dashboards/20417-cloudnativepg/)\\r\\ninto the first textfield, and pressing \\"Load\\". Use the \\"Prometheus\\" data source on the following screen and finish the import process.\\r\\n\\r\\n![CloudNativePG dashboard](https://github.com/user-attachments/assets/d54dcefe-535c-4812-bd80-486558f6caa4)\\r\\n\\r\\nOf course monitoring your experimental minikube cluster is a bit of an overkill, but this is simply to demonstrate how these kind of cluster administration tasks can be integrated into this gitops stack.\\r\\n\\r\\n### Template setup walkthrough\\r\\n\\r\\n<div style={{display: \'flex\', justifyContent: \'center\', alignItems: \'center\'}}>\\r\\n  <iframe width=\\"100%\\" height=\\"460\\" src=\\"https://www.youtube-nocookie.com/embed/Xbs2Tq-dgbI?si=PfrhS5g0ZVq-YDCi\\"\\r\\n          title=\\"YouTube video player\\" frameborder=\\"0\\"\\r\\n          allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>\\r\\n</div>\\r\\n\\r\\n### Upcoming Features\\r\\n\\r\\n#### Private Repo\xa0Support\\r\\n\\r\\nWe are aware that GitOps repositories should not be public, but for simplicity we omitted this feature in the first version of the new GitOps-bootstrap command. Supporting private repos with authentication of course has high priority for the upcoming releases. We will also replace the `repoURL` automatically, such that you don\u2019t need to this step manually when setting up the repo.\\r\\n\\r\\n#### Improved Renovate Integration\\r\\n\\r\\nAs described above, the renovate integration currently is regex-based, and it does not consider dependencies yet. However, we don\u2019t see these shortcomings as a blocker and recommend to try out the renovate integration in the Glasskube/Argo Gitops setup.\\r\\n\\r\\n#### Improved Dependency Resolution\\r\\n\\r\\nInstalling packages with dependencies is not 100% GitOps-compatible yet, as the dependencies will be created by the operator. Consider this: To install a `ClusterPackage <P>` that has a dependency on `D`, one would do `glasskube install <P> --dry-run -o yaml`, which would output the `ClusterPackage` custom resource for `<P>`. However, the dependency `D` will only be resolved at reconciliation time by the package operator, and will therefore not be represented in the git repository at all.\\r\\n\\r\\nA temporary workaround would be to have a closer look at the output of the install command, which also shows the dependencies which will be installed and in which version. One could then manually add the required packages custom resources to the git repo as well. However, this will be tackled in a future version to make the user experience better, see this [issue](https://github.com/glasskube/glasskube/issues/430).\\r\\n\\r\\n## Summary\\r\\n\\r\\nWith this template repository and guide we show how Glasskube can easily be set up in a ArgoCD powered Gitops environment,\\r\\nand how efficient package management is possible with this stack. Additionally we install a web application to show how\\r\\ncustom applications can make use of the Gitops setup and Glasskube packages.\\r\\n\\r\\nThis is a first concept with some minor shortcomings, but we will continue to improve GitOps support.\\r\\n\\r\\n### Feedback\\r\\n\\r\\nWe love feedback! Whether you are just starting out or you are a seasoned professional, we\'d like to hear your thoughts, inputs and questions\\r\\nregarding this starter template and corresponding guide here, in the [glasskube/glasskube repo](https://github.com/glasskube/glasskube) or on\\r\\nour [Discord](https://discord.gg/SxH6KUCGH7). Thanks!"},{"id":"series-a-idp","metadata":{"permalink":"/TP2024-T5/blog/series-a-idp","source":"@site/blog/2024-08-06-IDP/index.mdx","title":"Why integrating an IDP for Series A companies doesn\'t make\xa0sense","description":"A blog post exploring why Series A startup should avoid the internal developer platform (IDP) hype train","date":"2024-08-06T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"},{"inline":true,"label":"idp","permalink":"/TP2024-T5/blog/tags/idp"}],"readingTime":6.78,"hasTruncateMarker":true,"authors":[{"name":"Philip Miglinci","title":"Co-Founder","url":"https://www.linkedin.com/in/pmigat/","imageURL":"https://avatars.githubusercontent.com/pmig","key":"pmig","page":null},{"name":"Jake Page","title":"Developer Relations Engineer","url":"https://github.com/jakepage91","imageURL":"https://avatars.githubusercontent.com/jakepage91","key":"jpage","page":null}],"frontMatter":{"slug":"series-a-idp","title":"Why integrating an IDP for Series A companies doesn\'t make\xa0sense","description":"A blog post exploring why Series A startup should avoid the internal developer platform (IDP) hype train","authors":["pmig","jpage"],"tags":["glasskube","idp"],"image":"https://github.com/user-attachments/assets/0a3696b1-3367-422b-bdee-fb6272389535"},"unlisted":false,"prevItem":{"title":"Glasskube GitOps template","permalink":"/TP2024-T5/blog/gitops-template"},"nextItem":{"title":"Log and trace management made easy. Quickwit Integration via Glasskube","permalink":"/TP2024-T5/blog/quickwit"}},"content":"import CustomGitHubButton from \'@site/src/components/buttons/CustomGitHubButton.tsx\';\\r\\nimport Install from \'../../src/partials/_install.mdx\';\\r\\nimport Tabs from \'@theme/Tabs\';\\r\\nimport TabItem from \'@theme/TabItem\';\\r\\n\\r\\n![thumbnail](https://github.com/user-attachments/assets/0a3696b1-3367-422b-bdee-fb6272389535)\\r\\n\\r\\nCTO of a Series A company? Before reading on, just give yourself a quick pat on the back. What you and your team have done so far is no easy task, so fair play to you.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nRealistically though, the work is far from done. Many scaling and growth decisions lay ahead and probably more questions than clear convictions.\\r\\n\\r\\nYou might be tempted to preemptively adopt tooling and processes, positioning your engineering team for the potential growth to come. In this piece we\u2019ll explain why you are more likely to succeed by doubling down on what brought you to this point over adopting new processes or fancy Internal Developer platforms.\\r\\n\\r\\n### Setting the right foundations\\r\\n\\r\\nSeries A companies are exciting environments to be in, usually a reasonable influx of new faces join the company, processes are increasingly standardised and overall, there is a progressive company-wide maturity that is starting to take hold. The instinct to mature the engineering org is understandable but nonetheless ill placed.\\r\\n\\r\\nNo level of maturity or sophisticated tooling can compensate for a lack of Product Market Fit (PMF). Validating PMF across markets should be top of mind at this stage above all else. Elusive as it may be, your best chance of achieving it is staying agile, delivering rapidly and maintaining tight feedback loops.\\r\\n\\r\\nThe idea of planning for future scalability might be appealing, especially with the buzz around platform engineering and the availability of ready-made internal developer platform (IDP) solutions. However, it\u2019s crucial to understand why these options might not be the right choice for you right now. Let\u2019s delve into the reasons why an IDP isn\u2019t the change you think you need.\\r\\n\\r\\n![platform-engineering](https://github.com/user-attachments/assets/887ad190-4e37-4b8e-afb2-bce58039695c)\\r\\n\\r\\n### What is an\xa0IDP?\\r\\n\\r\\nAn IDP is a self-service layer build on top of your organisation\u2019s infrastructure, that enables your developer teams to deploy and manage applications without the need to have in-depth infrastructure knowledge or relying on the help of traditional infrastructure engineers. It aims to provide consistency, automation, and speed by standardizing workflows and environments as the organization grows.\\r\\n\\r\\nThink of an IDP as an internal product maintained by DevOps or Platform engineers, who essentially serve their own customer base, your development teams. To understand why adopting an IDP might be counterproductive for a Series A company, it\u2019s essential to understand why IDPs emerged in the first place.\\r\\n\\r\\nAs companies expand, so do their engineering teams. In large enterprises, maintaining code quality, keeping up with infrastructure requirements and sustaining deployment velocity is hard if operations teams can\u2019t keep up. IDPs were designed to remove reliance on traditional operations teams, to rely on a platform that actively evolves to fit their needs.\\r\\n\\r\\n> _A few assumptions are important to point out here:_\\r\\n\\r\\n> You have the resources to maintain a completely new product (the IDP). **_You probably don\u2019t._**\\r\\n\\r\\n> You have already scaled the engineering org and now need to optimise it. **_You probably haven\u2019t and don\u2019t need to._**\\r\\n\\r\\n![graph-1](https://github.com/user-attachments/assets/c5bad338-9087-4641-a100-65193962b3e4)\\r\\n\\r\\nstartup priorities\\r\\n\\r\\n### What should Series A companies care\xa0about?\\r\\n\\r\\nBefore going on about the types of tools and processes your shouldn\u2019t care about, let\u2019s take a more proactive approach and focus on things that will actually move the needle.\\r\\n\\r\\n#### The right\xa0team\\r\\n\\r\\nYou need a group of people who can run themselves, have the expertise to automate infrastructure related tasks and are open to working in flexible and not overly standardised structures. They should be the ones who propose changes and implement them as needed.\\r\\n\\r\\n#### Finding and validating PMF\\r\\n\\r\\nBy the time you are at a Series A level you have surely caught the scent of where you might find PMF. Do not let up, ship fast and communicate intensely with your target audience to validate your market assumptions. There is no reward in finding a gap in the market alone, you have to occupy it. Maintain development velocity to increasingly occupy the gap you have identified.\\r\\n\\r\\n#### Staying agile and\xa0flexible\\r\\n\\r\\nThe engineering team, like all teams within the company, should be unequivocally aligned with one primary objective: enabling the business. The engineering team sits at the centre of a short but tightly knit feedback loop which includes sales, feature ideation, feature development, deployment, and gathering feedback. Ideally, the sales team is working flat out, and customer service is maintaining close contact with customer. For the engineering team to keep it\u2019s end of the bargain, it has to stay flexible and agile, ready to respond quickly the other teams inputs.\\r\\n\\r\\n![graph-2](https://github.com/user-attachments/assets/72e461f2-fa49-4b44-88d5-313eb239a0c9)\\r\\n\\r\\n#### Focusing on customer facing products\xa0only\\r\\n\\r\\nEven though we\u2019ve mentioned this before, it\u2019s important to emphasise that an IDP is a fully-fledged product that needs to be created, maintained, and evolved to meet the changing needs of internal developers over time. Focusing on an internal product like this can detract from the attention and resources needed for your customer-facing products, which ultimately bring you in closer contact with PMF and customer satisfaction.\\r\\n\\r\\n#### Building the right\xa0culture\\r\\n\\r\\nThis is a point that should not be overlooked. Regardless of your company\u2019s stage, evolution is always and ongoing dynamic. A culture of alignment, healthy communication principles, and a focus on shared goals is the bedrock that must serve as a base for the discussions about architecture, tooling, and process definitions which enable said evolution. Collective buy-in can only happen if a meaningful shared culture exists.\\r\\n\\r\\n### What should a Series A CTO not be thinking\xa0about?\\r\\n\\r\\nIt\u2019s not un-common to hear people report having learned more from their bad managers than from their good ones. Why might that be? Because knowing what not to do can sometimes be more important the the opposite.\\r\\n\\r\\n#### Don\u2019t maintaining internal\xa0products\\r\\n\\r\\nAny time spend not addressing requests from your product and sales teams and hopefully your customers is time wasted.\\r\\n\\r\\nAny time spend that doesn\u2019t involve delivering a better experience than your competitors is a mistake.\\r\\n\\r\\n#### Avoid large engineering teams\\r\\n\\r\\nJust because the rest of the company is growing doesn\u2019t mean the engineering team has to expand at the same rate. Those who praise the magic that can be harnessed by keeping [engineering teams small](https://medium.com/r/?url=https%3A%2F%2Fposthog.com%2Fnewsletter%2Fsmall-teams) are on to something.\\r\\n\\r\\nAt this stage, as you may be bringing on your first DevOps engineers, ensure they integrate into a compact, developer-focused team with a single leader to avoid unnecessary managerial layers, allowing for open communication and quick decisions to be made.\\r\\n\\r\\n#### Forget about perfection\\r\\n\\r\\nIt\u2019s not news to you that shipping quickly and continuously improving over time is the best way to build a product that eventually wins market share and meets customer expectations. Why would scaling engineering teams be any different? Trying to implement an Internal Developer Platform too soon runs contrary to those principles. There will be a time when you will build one out but let that process happen iteratively in a gradual manner. You have others things to worry about in the meantime.\\r\\n\\r\\n### You are on the right\xa0track\\r\\n\\r\\nReaching a Series A funding round is not the end goal for anybody, you have a lot of room for growth. PMF is more than likely not locked down and occasional engineering bottlenecks should be dealt with on a case by case basis. Now is the time to double down on the strengths and keep on improving you capacity to identify your customer and increase user satisfaction.\\r\\n\\r\\nThere will be a time to look inwards and improve internal engineering processes, and IDP might make sense in the future, but at this moment in time your limited engineering output should be laser focused on staying lean.\\r\\n\\r\\nImplementing internal products that don\u2019t directly enable the business too soon have the potential for dire consequences. Approximately 35% of series A funded startups [fail](https://medium.com/r/?url=https%3A%2F%2Fluisazhou.com%2Fblog%2Fstartup-failure-statistics%2F%23%3A~%3Atext%3DIf%2520a%2520startup%2520makes%2520it%2Cof%252012%2520to%252018%2520months.) before Series B, a lot is at stake.\\r\\n\\r\\nNo need to worry though, you have made it this far, don\u2019t give into platform engineering FOMO, put you head down and keep doing what you\u2019ve been doing, because it\u2019s working.\\r\\n\\r\\n> We would love to hear from you, what are your thoughts? when is an organization really ready for an IDP?"},{"id":"quickwit","metadata":{"permalink":"/TP2024-T5/blog/quickwit","source":"@site/blog/2024-07-02-quickwit/index.mdx","title":"Log and trace management made easy. Quickwit Integration via Glasskube","description":"A blog post on what Quickwit is and how it can help your data search efforts","date":"2024-07-02T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"}],"readingTime":4.9,"hasTruncateMarker":true,"authors":[{"name":"Jake Page","title":"Developer Relations Engineer","url":"https://github.com/jakepage91","imageURL":"https://avatars.githubusercontent.com/jakepage91","key":"jpage","page":null}],"frontMatter":{"slug":"quickwit","title":"Log and trace management made easy. Quickwit Integration via Glasskube","description":"A blog post on what Quickwit is and how it can help your data search efforts","authors":["jpage"],"tags":["glasskube"],"image":"https://github.com/glasskube/glasskube/assets/38757612/03478d89-1d11-4263-93ca-f80d1607cef9"},"unlisted":false,"prevItem":{"title":"Why integrating an IDP for Series A companies doesn\'t make\xa0sense","permalink":"/TP2024-T5/blog/series-a-idp"},"nextItem":{"title":"Why nobody grows up wanting to be a DevOps engineer","permalink":"/TP2024-T5/blog/future-of-devops"}},"content":"import CustomGitHubButton from \'@site/src/components/buttons/CustomGitHubButton.tsx\';\\r\\nimport Install from \'../../src/partials/_install.mdx\';\\r\\nimport Tabs from \'@theme/Tabs\';\\r\\nimport TabItem from \'@theme/TabItem\';\\r\\n\\r\\n![quickwit-thumbnail](https://github.com/glasskube/glasskube/assets/38757612/03478d89-1d11-4263-93ca-f80d1607cef9)\\r\\n\\r\\nDistributed application troubleshooting can be a nightmare. Unless you have the budget for expensive proprietary monitoring SaaS solutions or the expertise to run and maintain an complex ELK stack you might feel as if you are stuck in a cave without a flashlight.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nLuckily, viable open-source alternatives like [Quickwit](https://quickwit.io/) are here to come to the rescue. By weaving together existing tooling for log and trace ingesting as well as pairing well with dashboard and visualisation tools such as Grafana and Jaeger. And sandwiching powerful indexing storage and search capabilities in between. Even if the tool sounds new, it won\u2019t be for long.\\r\\n\\r\\nWe recently integrated Quickwit with [Glasskube](https://github.com/glasskube/glasskube) and it\u2019s available to be easily deployed to your cluster. I spoke directly with Quickwit co-founder [Fran\xe7ois Massot](https://www.linkedin.com/in/fran%C3%A7ois-massot-473006b/) to get the insider scoop, and to learn how the tool works. Let\'s dive in!\\r\\n\\r\\n## But what is Quickwit exactly? \ud83e\udd37\\r\\n\\r\\nQuickwit is a cloud-native search engine that emerged with the goal of creating an open-source alternative to expensive monitoring software like Datadog and Splunk. Along the way, they\u2019ve also developed and open-sourced several components, including ChitChat (cluster membership protocol), mrecordlog (WAL), Whichlang (fast language detection), witty actors (actor framework), and bitpacking (SIMD algorithms for integer compression).\\r\\n\\r\\n![quickmit-diagram](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/154x37vzjunqayriczlx.png)\\r\\n\\r\\nQuickwit, with its robust Elasticsearch-compatible API, integrates well with tooling from the OSS ecosystem, such as Grafana, Jaeger, and OpenTelemetry. Users are successfully deploying Quickwit at scale, with hundreds of nodes and hundreds of terabytes of data ingested daily, all while enjoying significant cost reductions and how thanks to Glasskube to can get up and running in no time.\\r\\n\\r\\nQuickwit excels in handling logs, traces, security data, and append-only datasets, with plans to support metrics soon. A key feature is the usage of object storage for the indexed data, which simplifies cluster management, cuts infrastructure costs, and enhances reliability. Multiple storage options are available such as local disk, Amazon S3, Azure Blob storage or Garage, an OSS distributed object storage, are available.\\r\\n\\r\\n## Questions for the co-founder Fran\xe7ois Massot \ud83d\ude4b\\r\\n\\r\\n### What are the benefits of using external Object Storage as opposed to node attached storage?\\r\\n\\r\\nThere are a lot of benefits! From the beginning, we chose to decouple compute and storage to make our search engine scalable, reliable, and very cost-efficient. If you want to remember one thing distinguishing Quickwit from traditional search engines, this is decoupled storage and computing.\\r\\n\\r\\nFirstly, it provides elasticity, allowing us to scale storage and compute resources independently, which is ideal for cloud environments. Secondly, it\u2019s cost-efficient, as object storage like S3 is cheaper than traditional disk storage, especially for large volumes of log data. And you don\u2019t need to replicate your index data; this is done by the object storage layer. Additionally, it ensures high durability and availability, reducing the risk of data loss. Last, but not least, it simplifies cluster management as most of Quickiwt\u2019s components are stateless.\\r\\n\\r\\n### Performance Comparison: Is Quickwit Faster than Elasticsearch?\\r\\n\\r\\nIt depends!\\r\\n\\r\\nOn indexing, Quickwit is generally twice as fast as Elasticsearch and uses less CPU. Our users, like Binance, report a reduction of 80% of CPU usage at indexing!\\r\\n\\r\\nThe story is different regarding querying, as Elasticsearch has all its data on a local disk, typically SSD, and Quickwit has its indexed data in very slow object storage. In this case, you can expect query time to be lower. But Quickwit\'s main goal is to be sub-second queries, which is perfectly fine in the observability/security domains. If we look at this indicator, Quickwit is on par with Elasticsearch and is even faster for demanding analytics queries, whereas the data is stored on object storage!\\r\\n\\r\\n### What\'s in store for quickwit in the future?\\r\\n\\r\\nWe have a very ambitious roadmap! Here are the key features that will be added in the following 12 months:\\r\\n\\r\\n- **Distributed ingest (July 2024)**: High-throughput indexing on tens of thousands of indexes.\\r\\n\\r\\n- **OpenSearch Dashboard support (Q3 2024)**: This will enable OpenSearch users to migrate seamlessly to Quickwit with their existing dashboards.\\r\\n\\r\\n- **Metrics support (Q4 2024)**: New storage engine optimized for time series data.\\r\\n\\r\\n- **Distributed SQL engine (Q1 2025)**: Distributed SQL engine for analytics on top of Apache Arrow, Datafusion, and Ballista.\\r\\n\\r\\n- **Pipe-based query language (Q2 2025)**: Introduction of a flexible and powerful query language similar to SPL (Splunk Query Language)\\r\\n\\r\\n## Use cases\\r\\n\\r\\n### Log management \ud83e\udeb5\\r\\n\\r\\nQuickwit is built from the ground up to efficiently index unstructured data, and search it effortlessly on cloud storage. Moreover, Quickwit supports OpenTelemetry gRPC and HTTP (protobuf only) protocols out of the box and provides a REST API ready to ingest any JSON formatted logs. This makes Quickwit a perfect fit for logs!\\r\\n\\r\\n### Distributed tracing \ud83d\udcca\\r\\n\\r\\nDistributed Tracing involves monitoring application requests as they traverse various services like frontend, backend, and databases. It\'s instrumental for understanding application behavior and diagnosing performance issues.\\r\\n\\r\\nAdditionally, Quickwit seamlessly integrates with OpenTelemetry using gRPC and HTTP protocols (protobuf only), as well as Jaeger\'s gRPC API (SpanReader only). This means you can store traces in Quickwit and effortlessly query them using Jaeger\'s UI.\\r\\n\\r\\n## Key features \ud83d\udd11\\r\\n\\r\\n- Full-text _search_ and _aggregation_ queries\\r\\n- _Elasticsearch_ query language support\\r\\n- _Sub-second search_ on cloud storage (Amazon S3, Azure Blob Storage, \u2026)\\r\\n- _Decoupled compute_ and _storage_, stateless _indexers & searchers_\\r\\n- _Schemaless_ or _strict_ schema _indexing_\\r\\n- _Schemaless analytics_\\r\\n- _Grafana_ data source\\r\\n- _Jaeger-native_\\r\\n- _OTEL-native_ for logs and traces\\r\\n- _Kubernetes ready_ via Glasskube\\r\\n- _RESTful API_\\r\\n\\r\\n## Want to install Quickwit via Glasskube?\\r\\nFollow the [installation guide](https://glasskube.dev/guides/quickwit/).\\r\\n\\r\\n---\\r\\n\\r\\nIf you like this sort of content and would like to see more of it, please consider supporting us by giving us a Star on [GitHub](https://github.com/glasskube/glasskube) \ud83d\ude4f\\r\\n[![cats-like--github-stars](https://github.com/glasskube/glasskube/assets/38757612/05a03edf-7d6a-48fd-9b24-598abcfd1e9a)](https://github.com/glasskube/glasskube)\\r\\n\\r\\n\\r\\n<div style={{ display: \'flex\', justifyContent: \'right\' }}>\\r\\n  <CustomGitHubButton\\r\\n    href=\\"https://github.com/glasskube/glasskube\\"\\r\\n  />\\r\\n</div>"},{"id":"future-of-devops","metadata":{"permalink":"/TP2024-T5/blog/future-of-devops","source":"@site/blog/2024-05-20-devops/index.mdx","title":"Why nobody grows up wanting to be a DevOps engineer","description":"How did DevOps start, what were it\'s initial promises and where are we going?","date":"2024-05-20T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"}],"readingTime":12.09,"hasTruncateMarker":true,"authors":[{"name":"Jake Page","title":"Developer Relations Engineer","url":"https://github.com/jakepage91","imageURL":"https://avatars.githubusercontent.com/jakepage91","key":"jpage","page":null}],"frontMatter":{"slug":"future-of-devops","title":"Why nobody grows up wanting to be a DevOps engineer","description":"How did DevOps start, what were it\'s initial promises and where are we going?","image":"https://github.com/glasskube/glasskube/assets/38757612/54324401-9b0f-4faf-a7c1-beea346057de","authors":["jpage"],"tags":["glasskube"]},"unlisted":false,"prevItem":{"title":"Log and trace management made easy. Quickwit Integration via Glasskube","permalink":"/TP2024-T5/blog/quickwit"},"nextItem":{"title":"Glasskube Beta is live.","permalink":"/TP2024-T5/blog/beta-launch"}},"content":"import CustomGitHubButton from \'@site/src/components/buttons/CustomGitHubButton.tsx\';\\r\\nimport Install from \'../../src/partials/_install.mdx\';\\r\\nimport Tabs from \'@theme/Tabs\';\\r\\nimport TabItem from \'@theme/TabItem\';\\r\\n\\r\\n![article-thumbnail](https://github.com/glasskube/glasskube/assets/38757612/54324401-9b0f-4faf-a7c1-beea346057de)\\r\\n\\r\\nWhen I look at younger generations that didn\u2019t grow up largely offline like I did, I feel slightly sorry for them. I\u2019m in my mid-thirties, so I know what it was like to grow up tapping into [dial-up](https://en.wikipedia.org/wiki/Dial-up_Internet_access) internet as quickly as possible (to avoid blocking the phone line for too long) to access a couple of Wikipedia pages to do my homework and not feel like anything was missing. By personally living through the ascendence of the personal computer we all have in our pockets I feel, not immune, but better equipped to use it to my advantage and not fall victim to its false promises of limitless bliss and fulfillment simply for being more \u201c[connected](https://www.newyorker.com/news/the-new-yorker-interview/jonathan-haidt-wants-you-to-take-away-your-kids-phone)\u201d.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nOn the other hand, there is another revolution that **I was not directly a part of**, the revolution that happened in the IT departments worldwide across the 00s in the aftermath of the now-legendary [Flickr](https://www.youtube.com/watch?v=LdOe18KhtT4) talk at the O\u2019Reilly Velocity conference in 2009. An event that put `DevOps` on the map and showed a future that could pivot from the siloed, slow-moving [ITIL](https://en.wikipedia.org/wiki/ITIL)-based organization to something better.\\r\\n\\r\\nSince I recently switched careers from teaching to tech less than 5 years ago. I don\u2019t know what it\u2019s like to work in any other professional environment that doesn\u2019t live and breathe the practices imparted in that seminal Flickr talk. Agile methodologies and the still [difficult-to-pin-down](https://www.reddit.com/r/devops/comments/812527/can_someone_explain_what_devops_is/) definition of \u201cDevOps\u201c is a status quo I\u2019ve never had to question.\\r\\n\\r\\n**But I question it now**. If I argue that up-and-coming generations are missing fundamental perspective and have a lot to gain from knowing what it was like to live without smartphones. **I have to apply the same logic to myself and make a concerted effort to understand what DevOps really is? What did it emerge as a response to? What were its initial promises and have those promises been delivered? How and why do people end up being DevOps engineers? And what will it mean to be a DevOps engineer in the future?**\\r\\n\\r\\n## How DevOps Started and it\u2019s original Promise\\r\\n\\r\\nI sometimes wonder what it must have been like back in the days when devs had to put in infrastructure provisioning request forms and wait days or weeks to be served. I\u2019ve heard the stories of what stereotypical Ops people of that culture were like, finger-pointing grumps whose favorite words were `\u201cNO\u201c` and `\u201cWhere\u2019s my pager?\u201c` .\\r\\n\\r\\nJohn Allspaw and Paul Hammond, as well as many attendees of their famous velocity talk, [\u201c10+ Deploys Per Day: Dev and Ops Cooperation at Flickr,\\"](https://www.youtube.com/watch?v=LdOe18KhtT4) didn\u2019t have to wonder, the common friction between devs and ops teams must have been all too vivid to them.\\r\\n\\r\\nAfter watching the talk a handful of times over the years, a few things stand out to me. The first, is that I was unaware that talks back then contained **so much swearing** or maybe it\u2019s just Mr. Allspaw. Another was the key message the speakers put forth, that both Dev and Ops teams effectively shared the same objective. **To enable the business.**\\r\\n\\r\\nThey go on to talk about the tools and cultural traits organizations might want to adopt to achieve multiple deployments to production a day. They spoke of automated infrastructure, feature flagging, shared alerting and monitoring, all coalescing around a renewed collaborative culture that valued trust and a healthier attitude towards system failures and blame avoidance above all else.\\r\\n\\r\\nThe shape of what DevOps would come to mean in the following years was further crystalized in large part by the hugely influential [DevOps Handbook](https://itrevolution.com/product/the-devops-handbook-second-edition/) and [Site Reliebility Engineering](https://sre.google/sre-book/table-of-contents/) books.\\r\\n\\r\\n![the-main-books](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yb33ik288tctk2v22jf6.png)\\r\\n\\r\\nThe opening chapter of the former describes in few words what a DevOps way of doing things aspired to unlock\\r\\n\\r\\n> _\u201c[Multiple team working together to] enable the fast flow of planned work into production (e.g., performing tens, hundreds, or even thousands of code deploys per day), while achieving world-class stability, availability, and security.\u201d_\\r\\n\\r\\n## Have we delivered on the promise?\\r\\n\\r\\nThe feeling of walking on the shoulders of giants comes to mind when I think of the ideas presented in that Flickr talk. Those ideas that must have been so revolutionary to many are the only professional reality I\'ve ever known. So regardless if improvements could be made to current DevOps methodologies, best practices and tooling, I for one am grateful for all the progress that has been achieved so far. Anyone I ask who was configuring servers or hacking before 2009 corroborates that **things are better now than they were back then.**\\r\\n\\r\\nHaving said that, are most companies shipping like crazy, while achieving world-class stability, availability, and security? **Largely no.**\\r\\nThe DevOps world even with a massive [toolbox full of modern tooling](https://landscape.cncf.io/) available, still runs off of the exact same framework that was proposed in that talk.\\r\\n\\r\\nIn the words of [Adam Jacob](https://twitter.com/adamhjk)\\r\\n\\r\\n> \u201cThe problem isn\u2019t that we haven\u2019t optimized each individual part of the system enough. We\u2019ve built more efficient tooling at every step. But the way the whole system is put together? The experience of using it? That\u2019s basically identical to how it was in 2009, and it\u2019s the reason we\u2019re stuck.\u201c.\\r\\n\\r\\n**Siloes still exist, handoffs are error-prone and collaboration on many occasions is quite forced and rigid.** Anybody who has worked as a DevOps engineer for any length of time will have a long list of things they think their organization gets wrong and will often have equally low amount of faith in their organization\u2019s capacity to do anything about it.\\r\\nAdam, a veteran DevOps practitioner, has even called for [a second wave DevOps](https://www.systeminit.com/blog-second-wave-devops) which goes further than trivially improving tools and invites us to think outside of the box, challenge the established rules, and see what\u2019s on the other side.\\r\\n\\r\\nSpeaking of DevOps practitioners, who are these people? How and why does one become one?\\r\\n\\r\\n## How do people end up in DevOps in the first place?\\r\\n\\r\\nIn just 15 years, the technology industry has evolved significantly. Job titles like **DevOps engineers, SREs, and Platform engineers** are now common on job boards and are hot items for tech recruiters. However, outside the IT world, these terms are still largely unknown. Despite its rapid growth, DevOps isn\u2019t yet a profession people aspire to join; instead, it\u2019s something many simply **\\"fall into\\"**.\\r\\n\\r\\nI stumbled into DevOps after a conversation with my cousin, who suggested it following my decision against a strict network engineering path after earning a CCNA certificate. Curious about who ends up in DevOps and if future engineers might choose it as their first career option, I asked the [/devops](https://www.reddit.com/r/devops/comments/1c24rbg/will_people_ever_grow_up_wanting_to_be_a_devops/) subreddit and was surprised by the variety of opinions.\\r\\n\\r\\n**I found some fellow \u201cI just fell into it\u201c people:**\\r\\n\\r\\n![fell-into-it](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zaafmdejwi6k9aus874r.png)\\r\\n\\r\\n**Others are moderately bullish on newer generations:**\\r\\n\\r\\n![optimistic-devops](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ouj4w92mly7j2jbi20m2.png)\\r\\n\\r\\n![DevOps-chooses-you](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/px309e69lvjygl8vnobz.png)\\r\\n\\r\\n**Others not so optimistic:**\\r\\n\\r\\n![I-hope-not](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lnzjwtczbg9zl8wh9zru.png)\\r\\n\\r\\n![kids-aspire](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3z44eoh0yqgsaqyh8mf.png)\\r\\n\\r\\nEven though the definition of DevOps is still highly [disputed](https://www.reddit.com/r/devops/comments/vfxmxv/what_exactly_is_devops/), it seems unlikely to ever position itself as a profession students hear about at job fairs or see permanently added to university curriculums. This might be because we tend to imagine ourselves excelling in specific areas, believing that specialization increases our chances of success.\\r\\n\\r\\nWhen I was growing up, I fantasized about being the lead guitarist in a famous band, with god-level shredding abilities. I wasn\'t dreaming about being reasonably good at playing all the instruments.\\r\\n\\r\\n**In DevOps, there are no guitar solos.** To excel, you need to be familiar with a long list of tools, languages, frameworks, hyperscalers, and processes. The best DevOps engineers are generalists at heart. This modular, Lego-like nature of the work and experience might make DevOps less popular outside of IT departments.\\r\\n\\r\\n## The case for generalists, tinkerers, and the concept of glue\\r\\n\\r\\nIt\u2019s impossible to attempt to form a non-subjective profile of what traits a DevOps practitioner should have but in my short experience and what I\u2019ve learned from conversations with more experience individuals than I, a few traits emerge.\\r\\n\\r\\n### Generalists\\r\\n\\r\\nHave you ever read a \u201c[How to land a job in DevOps](https://www.simplilearn.com/tutorials/devops-tutorial/how-to-become-devops-engineer)\u201c guide? Remember the knowledge requirements section? Linux, Docker, CI/CD, Git, Hypersclaer of choice, Networking etc. The list goes on usually in the desired experience section of DevOps job requirements.\\r\\n\\r\\nIf you\u2019ve interviewed for roles such as developer or product design roles you will more than likely have to show a portfolio at some stage of the process. This is rarely the case in DevOps interviews. I can\u2019t think of one person who has assembled and updated a DevOps portfolio on a regular basis? The modular and distributed systems-building nature of DevOps roles just doesn\u2019t lend itself well well-curated displays in a portfolio.\\r\\n\\r\\nAs someone who was bored out of his brain teaching high school-level English for seven years, I naturally gravitated towards DevOps, a field requiring me to learn many tools and concepts and piece them together collaboratively. Not specializing deeply in any one concept but refining the skill of quickly learning new things is the callus I developed. Generalists who thrive in such environments fit right in.\\r\\n\\r\\n### Tinkerers\\r\\n\\r\\nPeople who do well in DevOps might think of themselves as [tinkerers](https://www.reddit.com/r/devops/comments/1cr1ho6/hot_take_were_all_just_tinkerers/).\\r\\n\\r\\n![tinkerer](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odqy1j4yuwc1anaioe69.png)\\r\\n\\r\\nI love this idea, and it fits many DevOps engineers I\'ve met. Being interested in learning how things work simply for the knowledge of it is a common trait among the DevOps mentors I\u2019ve had. Sure, spending the weekend installing a beefier switch in your home lab or rendering new mini figurines on your 3D printer doesn\'t directly show DevOps skills, but this background knowledge can indicate potential success in DevOps more than certificates can.\\r\\n\\r\\n### Glue\\r\\n\\r\\nMuch of the work in complex systems can go under the radar since it\u2019s hard to plan or predict. Since DevOps involves weaving tools together to build a platform or delivery system, **a lot of glue is needed**.\\r\\n\\r\\nProcesses must be put in place and automated to keep up with technical debt and maintenance work that accompanies every tool in a tech stack. Individuals who can naturally and often thanklessly act as the glue, connecting disparate parts of the system through automation, communication, or improving repetitive processes, are instrumental to organizational success. This skill isn\'t something you list on your CV, but combined with the curiosity of a tinkerer and the openness of a generalist, it\'s a potent combination.\\r\\n\\r\\n## The current state: Platforms vs DevOps\\r\\n\\r\\nA [false dichotomy](https://www.reddit.com/r/devops/comments/17lz167/devops_vs_platform_engineering_i_still_struggle/) often arises in these discussions usually for marketing reasons: that DevOps is dead and platforms are the future. Platform engineers aim to give developers autonomy over traditionally Ops-related components (k8s, IaC components, IAM) without direct interaction, allowing developers to self-serve and be independent.\\r\\n\\r\\nA well-designed, context-specific platform can increase developer velocity. According to the [2023 Puppet State of DevOps report](https://www.puppet.com/resources/state-of-platform-engineering), over two-thirds (68%) of respondents saw improved development **velocity** after adopting platform engineering. However, velocity shouldn\'t be the only metric. As [georgouslyhumble](https://www.reddit.com/r/devops/comments/16ipm9h/comment/k0ly9uq/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button) points out on Reddit, **sometimes the goal is to maintain existing velocity while meeting new organizational requirements**. For instance, a logging sidecar can standardize log collection without changing developer velocity, enhancing the platform to meet increased company requests.\\r\\n\\r\\nOps work remains complex and dynamic, and skilled Ops personnel are essential above a certain threshold of complexity. Platforms enable developers but notice that they don\'t necessarily reduce silos or integrate Dev and Ops teams more closely.\\r\\n\\r\\nTeams are rightly cautious when adding new tools to their stack because new tools often introduce introduce maintenance and upkeep overhead that quickly stacks up. Tools like [Glasskube](https://github.com/glasskube/glasskube), which **reduce operational overhead, are essential**. These are the tools we need more of to create robust and efficient DevOps platforms for the future.\\r\\n\\r\\n## Future predictions\\r\\n### A certain type of platform will win out\\r\\n\\r\\nThe systems, platforms or methods of working that **will win out will not have to \u201cteach\u201c its users how to work and collaborate together.** A future system that delivers the incredible possibilities of endless software shipping without compromising security and stability will only be possible if it makes team collaboration and cooperation the easiest, most intuitive, and most natural way of working while abstracting the work that neither devs nor ops are excited to do.\\r\\n\\r\\nTo create it though we are going to have to think outside of the box.\\r\\n\\r\\n### A second wave of DevOps might be one the way\\r\\n\\r\\nThankfully there are many restless and nonconforming people who contribute to the constant improvement of methodologies, processes, and tooling in the DevOps space.\\r\\nSome might say that a formal [movement](https://www.systeminit.com/blog-second-wave-devops) of rethinking what DevOps could be is already emerging and that\u2019s pretty exciting.\\r\\n\\r\\n### The more generalists and tinkerers, the better\\r\\n\\r\\nThe best-equipped individuals to keep connecting the puzzle pieces, close feedback loops, and rethink lousy ideas are those who are not afraid to trade deep specialization for professional genaralization. Those who dare to venture out and learn on the fly by tinkering, testing, and asking questions along the way are the ones who will keep the figurative ship afloat as it moves faster and faster towards engineering excellence.\\r\\n\\r\\nHow to find enough of these people is another question.\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nIt looks like I\'m no closer to knowing why people don\'t grow up wanting to be DevOps engineers, perhaps it\'s a blend of still being a relatively new field coupled with the fact that generalists aren\'t usually know as the coolest kids on the block.\\r\\n\\r\\nLooking ahead to the next wave of talent, whether they consciously choose or stumble into DevOps roles, one thing is certain: understanding the field\'s history is key. It\'s the only way future engineers can develop the ability to identity the gulf between the current state and the aspirational future of what could be. By neglecting this gap, the status quo will prevail and we will be destined to stagnant mediocrity.\\r\\n\\r\\nWhile it\'s undeniable that the tech landscape has vastly improved since the pre-DevOps era, it\'s equally evident that **DevOps is still finding its footing 15 years in.**\\r\\n\\r\\nSeasoned professionals need to keep a keen eye to identify and encourage the young tinkerers, generalists, and \\"glue people\\" around them to not worry about chasing certain titles but rather help redefine and **evolve DevOps into something that delivers on the original aspirations of 2009.\\r\\n\\r\\n---\\r\\n\\r\\nIf you like this sort of content and would like to see more of it, please consider supporting us by giving us a Star on [GitHub](https://github.com/glasskube/glasskube) \ud83d\ude4f\\r\\n[![cats-like--github-stars](https://github.com/glasskube/glasskube/assets/38757612/05a03edf-7d6a-48fd-9b24-598abcfd1e9a)](https://github.com/glasskube/glasskube)\\r\\n\\r\\n\\r\\n<div style={{ display: \'flex\', justifyContent: \'right\' }}>\\r\\n  <CustomGitHubButton\\r\\n    href=\\"https://github.com/glasskube/glasskube\\"\\r\\n  />\\r\\n</div>"},{"id":"beta-launch","metadata":{"permalink":"/TP2024-T5/blog/beta-launch","source":"@site/blog/2024-04-26-beta-launch-blog/index.mdx","title":"Glasskube Beta is live.","description":"Introducing the Beta release of Glasskube","date":"2024-04-26T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"}],"readingTime":4.74,"hasTruncateMarker":true,"authors":[{"name":"Jake Page","title":"Developer Relations Engineer","url":"https://github.com/jakepage91","imageURL":"https://avatars.githubusercontent.com/jakepage91","key":"jpage","page":null}],"frontMatter":{"slug":"beta-launch","title":"Glasskube Beta is live.","description":"Introducing the Beta release of Glasskube","image":"https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F0ziuc1lh9dg05idh5d9s.png","authors":["jpage"],"tags":["glasskube"]},"unlisted":false,"prevItem":{"title":"Why nobody grows up wanting to be a DevOps engineer","permalink":"/TP2024-T5/blog/future-of-devops"},"nextItem":{"title":"Why contributor guidelines matter.","permalink":"/TP2024-T5/blog/contributor-guidelines"}},"content":"![Product hunt upvote](https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F0ziuc1lh9dg05idh5d9s.png)\\r\\n\\r\\n[Glasskube](https://github.com/glasskube/glasskube) has been on a tear lately. \ud83d\ude80\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nHaving only just launched officially last February and having been received incredibly positively by the cloud native and Kubernetes community we are happy to announce that Glasskube Beta is upon us. \\r\\nThe Glasskube team as well as the growing community of Glasskube open source contributors have rallied and combined forces to bring the **Beta release** sooner than expected. Everybody involved deserves a huge round of applause. \ud83d\udc4f\\r\\n\\r\\nAs we [release Glasskube Beta](https://github.com/glasskube/glasskube/releases) we aim to bring to Kubernetes engineers tasked with maintaining the lifecycle of the packages that make up their clusters with an expanded and more mature version of Glasskube that delivers on the early promises of on app package configuration, automated updates and an ever growing package catalogue. The Beta release is still not intended to be run in production environments, in order to become production ready in the upcoming releases we hope to get valuable feedback from the Glasskube community. \\r\\n\\r\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube-nocookie.com/embed/ONNUP7l7WJM?si=y3tJVPcbyn6O7epl\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" referrerpolicy=\\"strict-origin-when-cross-origin\\" allowfullscreen></iframe>\\r\\n\\r\\nWe are so excited to get this release in the hands of all of you and see what you think. Here as some of the features and updated shipped: \\r\\n\\r\\n- \ud83d\udc4d Easy package configuration options\\r\\n- \ud83c\udfd7\ufe0f Added dependancy management\\r\\n- \ud83d\udcca Shipped graph-based dependency validation\\r\\n- \ud83c\udd95 Supported three new packages\\r\\n- \u2728 Many CLI and UI upgrades\\r\\n\\r\\n## Easy package configuration \ud83d\udce6\\r\\n\\r\\nOne of the main issues we see with traditional Kubernetes package managers is the inability to configure packages without having to depend on third party configuration tools to get the job done. Now with Glasskube if your package depends on additional configuration steps it can be done right in the UI or CLI. \\r\\nLet\u2019s take the example of the k8sgpt-operator, you can decide on which language you want the operators output to be in as well as being able to add the OpenAI API key upon installation to make sure k8sGPT runs right out of the gate. \\r\\n\\r\\n![Package configuration feature](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xuy43ksbkjknlcxzoyih.png)\\r\\n\\r\\n## New package integrations \ud83c\udd95\\r\\n\\r\\nWe added to the package catalogue, actively supporting 10 packages. Check out to see both the supported and upcoming packages we will support next right here. \\r\\n\\r\\n\\r\\n![New packages supported](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmlonkj77na7kff8t5iq.png)\\r\\n\\r\\n### Grafana \\r\\n\\r\\n[Grafana](https://grafana.com/) open source software enables you to query, visualize, alert on, and explore your metrics, logs, and traces wherever they are stored. Grafana OSS provides you with tools to turn your time-series database (TSDB) data into insightful graphs and visualizations. The Grafana OSS plugin framework also enables you to connect other data sources like NoSQL/SQL databases, ticketing tools like Jira or ServiceNow, and CI/CD tooling like GitLab.\\r\\n\\r\\n### K8sGPT\\r\\n\\r\\n[K8sGPT](https://k8sgpt.ai/) is a tool for scanning your kubernetes clusters, diagnosing and triaging issues in simple english. It has SRE experience codified into its analyzers and helps to pull out the most relevant information to enrich it with AI.\\r\\n\\r\\n### Kube Prometheus stack\\r\\n\\r\\nA [collection](https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack) of Kubernetes manifests, Grafana dashboards, and Prometheus rules combined with documentation and scripts to provide easy to operate end-to-end Kubernetes cluster monitoring with Prometheus using the Prometheus Operator.\\r\\n\\r\\n## Next packaged to be supported \u23ed\ufe0f\\r\\n\\r\\n### Litmus\\r\\n\\r\\n[Litmus](https://litmuschaos.io/) is an open source Chaos Engineering platform that enables teams to identify weaknesses & potential outages in infrastructures by inducing chaos tests in a controlled way.\\r\\n\\r\\n### Kubeflow\\r\\n\\r\\nThe [Kubeflow](https://www.kubeflow.org/) project is dedicated to making deployments of machine learning (ML) workflows on Kubernetes simple, portable and scalable. Their goal is not to recreate other services, but to provide a straightforward way to deploy best-of-breed open-source systems for ML to diverse infrastructures. Anywhere you are running Kubernetes, you should be able to run Kubeflow.\\r\\n\\r\\n### Robusta\\r\\n\\r\\n[Robusta](https://home.robusta.dev/) is an open source observability tool for Kubernetes, which extends Prometheus. Using automation rules, Robusta automatically fetches the data you need to investigate, and attaches it to your alerts.\\r\\n\\r\\n### Check our of webinar last Tuesday with Kunal Kushwaha \ud83c\udf10\\r\\n\\r\\nHere Glasskube co-founder [Philip Miglinci](https://www.linkedin.com/in/pmigat/) walked us through the new Glasskube features, improvements and gave a greate demo that included how to install and manage kubernetes packages using a GitOps framework by leveraging ArgoCD and a super simple process to seemlessly manage your cluster package stack. Really cool talk!\\r\\n\\r\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube-nocookie.com/embed/cphFMYivSyU?si=ZUK4H-zbiCq_um39\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" referrerpolicy=\\"strict-origin-when-cross-origin\\" allowfullscreen></iframe>\\r\\n\\r\\n## We launched on Product Hunt \ud83d\ude3c\\r\\n\\r\\nWe launched the project on [Product Hunt](https://www.producthunt.com/) on April 24th.\\r\\n\\r\\nIt was a great exercise to get Glasskube in front of an audience that we might not have known about the project. Product Hunt isn\u2019t best know for showcasing developer tools but he got a great reception from the community and some stellar feedback too. Well worth the effort. \\r\\n\\r\\n![Product Hunt profile](https://github.com/glasskube/glasskube/assets/38757612/df679365-4740-4018-9528-f461f68391a2)\\r\\n\\r\\nBy getting a sizable amount of upvotes for a niche DevTool, we are extremely happy to see those upvotes translating over to many users visiting the GitHub repo and leaving their support and even picking up open issues. \\r\\n\\r\\n## Feedback wanted \ud83d\ude4f\\r\\n\\r\\nGlasskube is a tool designed for **Kubernetes enthusiasts** and **engineers** alike. As we\'re currently in the early stages of development, your feedback could be pivotal in shaping the direction and features of our upcoming product roadmap. We invite you to explore **Glasskube Beta**, integrate it into a non-production Kubernetes cluster, and experience a streamlined approach to managing your third-party cloud-native packages. Share your experience with us, and help us refine Glasskube for optimal usability and effectiveness.\\r\\n\\r\\n### Support is always welcome \u2b50\\r\\n\\r\\nDo you like the project and want to help us out? Giving us a star on GitHub will really make our day!\\r\\n\\r\\n[![Screenshot 2024-04-26 at 10 54 54](https://github.com/glasskube/glasskube/assets/38757612/05a03edf-7d6a-48fd-9b24-598abcfd1e9a)](https://github.com/glasskube/glasskube)"},{"id":"contributor-guidelines","metadata":{"permalink":"/TP2024-T5/blog/contributor-guidelines","source":"@site/blog/2024-04-04-contributor-guidelines/index.mdx","title":"Why contributor guidelines matter.","description":"Contributor guidelines are the missing piece needed to the best Developer Experience","date":"2024-04-04T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"}],"readingTime":4.775,"hasTruncateMarker":true,"authors":[{"name":"Jake Page","title":"Developer Relations Engineer","url":"https://github.com/jakepage91","imageURL":"https://avatars.githubusercontent.com/jakepage91","key":"jpage","page":null}],"frontMatter":{"slug":"contributor-guidelines","title":"Why contributor guidelines matter.","description":"Contributor guidelines are the missing piece needed to the best Developer Experience","authors":["jpage"],"tags":["glasskube"],"image":"https://github.com/user-attachments/assets/a6209ab4-b4dd-42f8-b0be-fc30ea55d7cf"},"unlisted":false,"prevItem":{"title":"Glasskube Beta is live.","permalink":"/TP2024-T5/blog/beta-launch"},"nextItem":{"title":"10 Steps to Build a Top-Tier Discord Server for Your Open Source Community. \u2728","permalink":"/TP2024-T5/blog/discord-setup"}},"content":"![Contributor guidelines thumbnail](https://github.com/user-attachments/assets/a6209ab4-b4dd-42f8-b0be-fc30ea55d7cf)\\r\\n\\r\\n## TL;DR\\r\\n\\r\\nAs an open-source project maintainer, you should be obsessed with **Developer Experience**. I don\u2019t need to convince you that the [README.md](https://github.com/glasskube/glasskube/tree/main) needs to be clear and informative. Everybody knows how great documentation can elevate a project. Having a top-notch [CONTRIBUTING.md](https://github.com/glasskube/glasskube/blob/main/CONTRIBUTING.md) file is the missing piece to retain the open-source contributors you attract. \\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nThe CONTRIBUTING.md file should not be confused with a tutorial or a project guide, it\u2019s `reference material` for developers who want to understand what work is available and how to get involved quickly. \\r\\n\\r\\nMake sure your guidelines are: \\r\\n\\r\\n- Clear and actionable \\r\\n- Use precise language\\r\\n- Easy to skim through\\r\\n- Point to additional resources\\r\\n\\r\\n## Understand your audience\\r\\n\\r\\nDevelopers are not a monolithic group of internet dwellers who all care about the same problems, have the same experience, or work the same way. Having said that, there are a few things that are broadly applicable. They want to read less and build more. \ud83c\udfd7\ufe0f\\r\\n\\r\\n> Developers care about getting started quickly and it\u2019s on the project maintainer to remove as many obstacles as possible to make that happen. \\r\\n\\r\\nHow can you reduce the time from when a developer finds your project to when they submit their first PR? \\r\\n\\r\\nTo get started, contributors need to find an issue to work on. Make sure you have open issues ready that are tagged to cater to all potential contributors. If a junior developer wants to learn a new language through your project make sure `good first issues` are easy to find. If more ambitious, senior types, are ready to make an impact, make sure it\u2019s clear which issues you would like them to consider, pointing them to a [current milestone](https://github.com/glasskube/glasskube/milestones) or GitHub [project](https://docs.github.com/en/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects). \\r\\n\\r\\n## Define contribution paths\\r\\n\\r\\nMake clear what kind of paths there are to contribute to. Which areas of the project need help? Leverage GitHub tags to segment each project domain. In our case, Glasskube has different components such as a `GUI`, a `CLI` and `Package Controller`, `Docs`, a `UI` and the repo itself. \\r\\n\\r\\n## Community engagement\\r\\n\\r\\nOk, so the contributor knows that there are open issues ranging in different levels of complexity and they understand the different areas they can contribute to. How can they let you know they are ready to contribute to the project? What if they have additional questions?\\r\\nMake it clear how you prefer them to communicate with you, through GitHub, [Discord](https://discord.gg/SxH6KUCGH7), or Slack. \\r\\n\\r\\n> Try to not only limit communication to the GitHub issue itself. For many Open Source contributors the fun is meeting other like minded people to collaborate and share. Not to say they everybody want that, but make sure you invite contributors to a community, since they are not part of it. \\r\\n\\r\\n![Community engagement](https://github.com/glasskube/glasskube/assets/38757612/a582fac4-1bd9-4db2-b3c3-61c677befa72)\\r\\n\\r\\n## Contribution workflow\\r\\n\\r\\nProbably one of the most important parts of the Contributor guidelines is for contributors to have clear instructions and answers to the following questions\\r\\n\\r\\nDetailing the step-by-step process for contributing code changes: \ud83e\ude9c\\r\\n\\r\\n- Issue selection and assignment.\\r\\n- Forking the repository.\\r\\n- Branching, coding, and committing conventions.\\r\\n- Pull request submission and review.\\r\\n- Handling feedback and iteration.\\r\\n- Merging contributions into the main codebase.\\r\\n- Addressing best practices for commit messages and keeping forks up-to-date.\\r\\n\\r\\n\\r\\n## Development guidelines\\r\\n\\r\\nEach open-source project aims to solve a different problem and build on a certain stack that might be new to some contributors. Assume they know nothing about your tool and precisely explain the project\u2019s building blocks.\\r\\n\\r\\nFocus on informing how the code base is built, how each component fits together and describing setup environments.  Ideally, contributors should be able to build local versions of the components they contribute to and validate their work. \\r\\n\\r\\nIf you only find out during the PR review process that it wasn\u2019t clear to the developer, it\'s a sign that either the guidelines or collaboration process could be improved.\\r\\n\\r\\n## Testing\\r\\n\\r\\nI can\u2019t stress the importance of providing clear instructions for `testing code contributions` \ud83e\uddea. For example, Glasskube operates within [Kubernetes](https://minikube.sigs.k8s.io/docs/start/) clusters, every contributor must have access to one for local testing before submitting a PR. While imposing testing criteria might be challenging, it\'s essential to remind contributors that PR reviews shouldn\'t be the moment where issues with functionality are discovered. \\r\\n\\r\\n## Documentation and best practices\\r\\n\\r\\nLeverage your documentation heavily, the contributor guidelines as mentioned are reference material aimed at giving guidance by pointing the contributor in the direction of the answer they are looking for. \ud83d\udd0d\\r\\n\\r\\nKeep the file structure `very clear`. Most people skim through this sort of material looking directly for what they need at the time. Make your guidelines `skimmable`. \\r\\n\\r\\nAlso, it\u2019s safe to assume some contributors will never make it to your CONTRIBUTING.md page, and those who do will spend a limited amount of time there. Share a TL;DR that gives the main points you would like contributors to remember. Also, add the TL;DR to other places outside of the GitHub repo. I\u2019ve added it to the #help-forum on our Discord server\\r\\n\\r\\n![Best practices](https://github.com/glasskube/glasskube/assets/38757612/f617c591-2b51-44b7-8b19-c337a2b34f5d)\\r\\n\\r\\nI\u2019m really happy you have a killer **README.md** file, you have a bunch of `well-tagged issues` and are ready to welcome as many contributors as possible. But to retain and build trust within your community make sure to nail the CONTRIBUTING.md too.\\r\\n\\r\\nTo understand the value of the **CONTRIBUTING.md** file. I feel a restaurant analogy might be useful.\\r\\n\\r\\n> \ud83d\udca1 We\'ve all been drawn to a restaurant by it\u2019s food menu, only to return for the exceptional service. Similarly, in the realm of Open Source projects, the README.md acts as the initial attraction, the enticing menu. However, it\'s the CONTRIBUTING.md file and how it enhances the overall developer experience that makes them **return for more**."},{"id":"discord-setup","metadata":{"permalink":"/TP2024-T5/blog/discord-setup","source":"@site/blog/2024-03-26-discord-setup/index.mdx","title":"10 Steps to Build a Top-Tier Discord Server for Your Open Source Community. \u2728","description":"The definitive guide to set up a Discord server your community members will really enjoy","date":"2024-03-26T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"},{"inline":true,"label":"discord","permalink":"/TP2024-T5/blog/tags/discord"}],"readingTime":9.64,"hasTruncateMarker":true,"authors":[{"name":"Jake Page","title":"Developer Relations Engineer","url":"https://github.com/jakepage91","imageURL":"https://avatars.githubusercontent.com/jakepage91","key":"jpage","page":null}],"frontMatter":{"slug":"discord-setup","title":"10 Steps to Build a Top-Tier Discord Server for Your Open Source Community. \u2728","description":"The definitive guide to set up a Discord server your community members will really enjoy","authors":["jpage"],"tags":["glasskube","discord"],"image":"https://github.com/user-attachments/assets/62307c6b-5eb4-43bb-8726-3e9330622f71"},"unlisted":false,"prevItem":{"title":"Why contributor guidelines matter.","permalink":"/TP2024-T5/blog/contributor-guidelines"},"nextItem":{"title":"Glasskube v0.1.0 \u2014 Introducing Dependency Management","permalink":"/TP2024-T5/blog/release-v0.1.0"}},"content":"import Install from \'../../src/partials/_install.mdx\';\\r\\n\\r\\n![Discord server thumbnail](https://github.com/user-attachments/assets/62307c6b-5eb4-43bb-8726-3e9330622f71)\\r\\n\\r\\nIt\u2019s well-established that [Discord](https://discord.gg/SxH6KUCGH7) is a great platform for Developer communities. What\u2019s less established are clear, best practices on how to configure a server from scratch to best serve a community of devs. If you are a community manager or Discord moderator, this blog post aims to give you the **definitive guide** to getting a working server that will feel welcoming, resourceful, and intuitive for all your community members. \\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nConfiguring a **top-tier server** is not difficult at all, the [Glasskube server](https://discord.gg/SxH6KUCGH7) is an example of a **\u201cless is more\u201d** approach. Having said that, we will explore some additional intermediate and advanced practices that might make sense for some use cases. Let\u2019s not waste any more time and jump straight in. \\r\\n\\r\\n## 1. Don\'t Reinvent the Wheel \ud83d\udede\\r\\n\\r\\nAs developers we spend a large amount of time working on challenging tasks and solving hard problems, Discord can be complex and a bit daunting as a beginner to the platform, but if you take away anything from this blog post it should be that you **do not need to over-engineer your server** for it to be highly effective. \\r\\n\\r\\nAny community platform should have the following ingredients: \\r\\n\\r\\n- Clear lines of communication\\r\\n- Clearly document known or past bugs\\r\\n- Easy to navigate\\r\\n- Relevant and customizable to each community member\\r\\n- Safe from Bot attacks or raids\\r\\n- And if it\u2019s fun, even better\\r\\n\\r\\nDiscord as a product has evolved immensely in the last few years allowing community managers to easily adapt the platform to the needs of their ecosystem. \\r\\n\\r\\nFocus on applying some of the tips in this blog post to build an **MVS (minimum viable server)**, there will always be time to pivot and add fancy features down the road. Let\u2019s take each point one by one.\\r\\n\\r\\n## 2. Establish Clear Lines of Communication \ud83d\udde3\ufe0f\\r\\n\\r\\nBefore creating your first channel, think to yourself, what brings a user to your server? Whether it\u2019s product updates, open-source development, or job searching. Make sure those as the main channel lanes. \\r\\n\\r\\nIt\u2019s always good to have a `#general`, catch-all channel and then a handful of other channels that might guide server members to more targeted conversations around troubleshooting bugs, asking for help, or even having off-topic conversations. If you see the need, consider dividing your channels into categories to give further context. \\r\\n\\r\\nWhen a new member joins an overly complicated and cluttered server, it can be daunting to engage and integrate into the community. **\u201cWhere do I even start?\u201d** - Me on most servers. \\r\\n\\r\\nSimplifying the structure by focusing solely on essential channels, categories, roles, and resources is crucial. This approach creates a welcoming environment where newcomers can easily navigate and become active participants in the community.\\r\\n\\r\\n## 3. Are you Into Role-Play? \ud83d\udcdb\\r\\n\\r\\nNah, me neither, but they are useful on Discord. [Roles](https://support.discord.com/hc/en-us/articles/214836687-Role-Management-101) are a great way to understand the different user profiles that make up your community and to assign custom permissions.\\r\\n\\r\\nMost new members are shy and you might not want to force them to introduce themselves when they join. A good way around this is by assigning roles by asking **onboarding questions**. We will see how to do that in a bit.\\r\\n\\r\\nAlso, not every community member might have the same interests, roles can be used as a filtering system to direct the right people to the appropriate channels. \\r\\n\\r\\nOn the [Glasskube Discord server](https://discord.gg/SxH6KUCGH7), all members have access to all channels but in the _intermediate steps_, I\u2019ll show you how to unlock channels based on different roles.\\r\\n\\r\\n\\r\\n![Glasskube roles](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8hyhez82yywysbqb14n.png)\\r\\n\\r\\n>\ud83d\udca1 Each Discord server has the default `@everyone` role. Use the principle of least privilege when configuring this role. Allow `@everyone` to view and interact in text channels and voice channels, but make sure no actions can be taken upon other members nor any management permission given either. \\r\\nTo add permissions to users, create roles and attach the roles to the user directly.\\r\\n\\r\\n## 4. Enable the Community Feature \u2705\\r\\n\\r\\nIf you\u2019ve set up Discord servers in the past you more than likely used bots like \u201ccarl\u201d bot for onboarding, role assignments, and moderation. No need for that now, let the Community feature take care of that for you.\\r\\nThis feature does 80% of the heavy lifting for you as a Discord Community Manager by combining security, member verification, and onboarding all in one. Just follow the instructions to set up: \\r\\n\\r\\n1\ufe0f\u20e3 Onboarding questions\\r\\n2\ufe0f\u20e3 Server guide\\r\\n3\ufe0f\u20e3 Safety guidelines\\r\\n\\r\\n> \ud83d\udca1 To enable the community server feature, click on your Server name at the top right > Server settings > Community Overview > Activate.\\r\\n\\r\\nBy enabling the Community feature you unblock additional channel types such as forums, stages, and announcements.\\r\\n\\r\\n## 5. Have a Short but Effective Onboarding Process \ud83d\udc4b\\r\\n\\r\\nAn onboarding process should serve two major functions, first of all, to get to know new members better, and second to let members know what they can find on your server. \\r\\nCustomize the onboarding questions and answers to your liking, and assign roles or even channels to the user depending on the answer given. \\r\\nHere are the two questions we ask new Glasskube community members. \\r\\n\\r\\n![Onboarding questions](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq771j3clc7v65rtra2m.png)\\r\\n\\r\\n## 6. Structured Help and Support Forums \ud83c\udd98\\r\\n\\r\\nDon\u2019t let questions asked in your community go to waste. Persist them in a centralized place so newcomers can learn from others\u2019 past questions. The best way to do so is by using channel Forums. \\r\\n\\r\\n\\r\\n![Forum channel](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kv69ag7y83tfjjt7x8xz.png)\\r\\n\\r\\nThey act as a useful supplement to the official project documentation. Many OSS software projects struggle to keep their documentation up to date and here is where the forums can lend a hand, by documenting and persisting conversations revolving around troubleshooting efforts. If new members pose questions that have already been answered in a forum, send the forum thread instead of resolving the same issue twice. \\r\\n\\r\\nCheck out the questions forum on the [Wasp discord server](https://wasp-lang.dev/), they are a great example of neatly, well-tagged questions that are a huge help to community members old and new. \\r\\n\\r\\n\\r\\n![Wasp Discord help forum](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0pwwdtkqnw651cca9uo4.png)\\r\\n\\r\\n> \ud83d\udca1 When setting up your forum section create useful and relevant tags and enforce their usage on each question so they can be easily filtered and contextualized when needed.\\r\\n\\r\\n## 7. Keep the Announcements Coming \ud83c\udf89\\r\\n\\r\\nAs a vibrant OSS project, you are probably releasing as much as possible and sharing community-relevant topics regularly. Make sure to have at least one `Announcement` channel and keep it up to date. \\r\\n\\r\\n>\ud83d\udca1 Announcement channels, different from other channels can be subscribed to and viewed from outside your server. If you want to push updates to your channel followers make sure to click the \u201cShare with followers! Publish\u201d button once an announcement is shared.\\r\\n\\r\\nAnnouncement channels accept webhook integrations making [YouTube](https://www.youtube.com/watch?v=4LxMjo0Ov90) videos, live [Twitch](https://techwiser.com/get-twitch-live-notifications-discord/) streams or [Canny](https://help.canny.io/en/articles/5807464-discord-integration) roadmap updates appear automatically.\\r\\n\\r\\n## 8. How to Avoid Raiding, Spam, and Nukes \u26a0\ufe0f\\r\\n\\r\\nWe have all seen spam and sometimes inappropriate messages and links to crypto scams on Discord servers before. Hopefully none of you will ever have to see a fully wiped server that suffered from a nuke attack. \\r\\nIn the past, you would lean on the healthy ecosystem of Discord bots which many of them had a generous free tier that would secure your server to a pretty high level. \\r\\nNow, those third-party safety bots are just not needed, since Discord add many layers of Raid and Spam protection as well as some AutoModerator functions and easy to congure setting which you can set once and forget. \\r\\nOnce configured, Discord in the background with scan and vet each message, attachment, and new member as they join. \\r\\n\\r\\n![Safety setup](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky666exkx6ltw0y4lcwu.png)\\r\\n\\r\\n>\ud83d\udca1 In DM and Spam protection, you can choose the verification level. I like to set it to Medium which will only verify a member once they are part of the server for over 5 minutes. Therefore, weeding out potential bot traffic.\\r\\n\\r\\n## 9. Adding Fun with Emojis and Stickers \ud83e\udd23\\r\\n\\r\\nIt\u2019s important to not be so serious and enjoy yourself too. Make sure to provide some inbuilt stickers and emojis that your community can relate to and use to express themselves.\\r\\n\\r\\nFind some cool stickers here: https://stickers.gg/\\r\\nDownload enojis here: https://emoji.gg/\\r\\n\\r\\nYou can find the emoji and sticker settings in the `Server settings` section also.\\r\\n\\r\\n\\r\\n![Sticker settings](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljtz7dvq47adpr5c2q99.png)\\r\\n\\r\\n## What the Glasskube server looks like now, join us! \ud83e\uddca\\r\\n\\r\\nHaving put all the tips mentioned above in practice this is what our Discord server looks like. If you feel like checking it out or becoming part of the community [join us here](https://discord.gg/Bdn9Jq3GzH).\\r\\n\\r\\n\\r\\n![Current server](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtui7zl4x1zkop8whqyx.png)\\r\\n\\r\\n## 10. Let\u2019s Talk Intermediate and Advanced features \ud83e\udd13\\r\\n\\r\\nAll of that seemed pretty straightforward, right? In case you are looking to get fancy, let\u2019s explore a couple of intermediate and advanced features. \\r\\n\\r\\n>\ud83d\udca1 Discord has a subscription plan which uses `Nitro` as currency, Nitro can be bought with fiat currency. By buying boosts you can unlock many features and add-ons, mainly cosmetic and image quality-related, but feel free to check them out.\\r\\n\\r\\n![Discord boosts](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/em78bznbkl4e0q5z2niw.png)\\r\\n\\r\\n### **Intermediate**\\r\\n\\r\\nIt might be the case that over time your server grows and so do the number of channels. Since a large number of available channels can be disorientating for new members you can allow members to opt-in through additional onboarding questions. \\r\\n\\r\\n> \ud83d\udca1 Note that even if you don\u2019t answer the questions during onboarding you can always click on `Channels and Roles` in the top left-hand corner of the server to answer any onboarding questions to gain access to any locked channels.\\r\\n\\r\\nTo get started, navigate to `Server Settings> Community Onboarding > Default channels`, and only select the channels you want all members to see.\\r\\n\\r\\n\\r\\n![Intermediate onboarding](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2e85wi3frunfqlkgqihl.png)\\r\\n\\r\\nThen edit the onboarding questions and unlock channels depending on the answer by adding the channel to part 2 `Assign channels and/or roles` \\r\\n\\r\\n\\r\\n![Unlock channels](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/35ybhzbplzubgyy4x9ds.png)\\r\\n\\r\\n### **Advanced**\\r\\n\\r\\nSimilarly, if you have a growing server with multiple announcement channels that you want to give granular access to. For example, if a user with the `@contributor` role only wants `Glasskubee updates` and not `general Kubernetes updates` you can gain this level of granularity by switching to `Advanced mode` in the Onboarding section of the `Server settings` page. \\r\\n\\r\\n![Slowmode](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g67x4vqcsqxvtsrwiewq.png)\\r\\n\\r\\nYou can also be granular about the amount of time is needed for a new member to send a message in a particular channel by editing the `Slowmode` setting, under channel settings.\\r\\n\\r\\n## Let\u2019s Wrap It Up\\r\\n\\r\\nA community platform is a place that should be conducive to creativity, comradery, and collaboration. Of course, some rules and guidelines should be in place to keep the place welcoming and inclusive to all, but all in all the key takeaway is to not overthink or over-engineer your server. \\r\\nDecide on some key roles, and key channels and resolve people\'s issues in a centralized way with answers to questions easy to find and hopefully don\u2019t always depend on your input. \\r\\n\\r\\nA community is made up of individual connections to try to focus more on initiatives that will lead to open conversation and always try to acknowledge key community members when they deserve it.\\r\\n\\r\\n## Get involved\\r\\n\\r\\nThe easiest way to get involved is to tackle one of our [open issues](https://github.com/glasskube/glasskube/issues).\\r\\nYou are also welcome to join our [Discord](https://discord.gg/SxH6KUCGH7).\\r\\n\\r\\n> **If you are a cloud native developer, please [submit your package](https://github.com/glasskube/glasskube/discussions/90)**.\\r\\n\\r\\nAs Glasskube is still in its very early days, your feedback is highly appreciated.\\r\\nLet us know what you think, we would love to hear from you or support us by leaving a star on GitHub:\\r\\n\\r\\n[\u2b50 `glasskube/glasskube` \u2b50](https://github.com/glasskube/glasskube/)"},{"id":"release-v0.1.0","metadata":{"permalink":"/TP2024-T5/blog/release-v0.1.0","source":"@site/blog/2024-03-22-release-0.1.0/index.mdx","title":"Glasskube v0.1.0 \u2014 Introducing Dependency Management","description":"Version 0.1.0, launched on March 21st: 10 contributors, 53 commits, introducing Dark Mode and Dependency Management.","date":"2024-03-22T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"},{"inline":true,"label":"release","permalink":"/TP2024-T5/blog/tags/release"},{"inline":true,"label":"kubernetes","permalink":"/TP2024-T5/blog/tags/kubernetes"}],"readingTime":2.715,"hasTruncateMarker":true,"authors":[{"name":"Jake Page","title":"Developer Relations Engineer","url":"https://github.com/jakepage91","imageURL":"https://avatars.githubusercontent.com/jakepage91","key":"jpage","page":null}],"frontMatter":{"slug":"release-v0.1.0","title":"Glasskube v0.1.0 \u2014 Introducing Dependency Management","description":"Version 0.1.0, launched on March 21st: 10 contributors, 53 commits, introducing Dark Mode and Dependency Management.","authors":["jpage"],"tags":["glasskube","release","kubernetes"],"image":"https://github.com/user-attachments/assets/d37f9f1b-13d2-42bb-9264-a96bd4852a0b"},"unlisted":false,"prevItem":{"title":"10 Steps to Build a Top-Tier Discord Server for Your Open Source Community. \u2728","permalink":"/TP2024-T5/blog/discord-setup"},"nextItem":{"title":"Glasskube v0.0.3 \u2014 Introducing Package Updates","permalink":"/TP2024-T5/blog/package-updates"}},"content":"![Glasskube v0.1.0 thumbnail](https://github.com/user-attachments/assets/d37f9f1b-13d2-42bb-9264-a96bd4852a0b)\\r\\n\\r\\nimport Install from \'../../src/partials/_install.mdx\';\\r\\n\\r\\n*Glasskube v0.1.0 was released on March 21st, introducing new features like Dependency Management and Dark Mode as well as many useful features for an improved CLI and GUI experience.*\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nGlasskube is fully open-source. Support us by leaving a star: [\u2b50 `glasskube/glasskube` \u2b50](https://github.com/glasskube/glasskube/)\\r\\n\\r\\n## \ud83d\ude4f Special thanks to all our contributors \ud83e\udd70\\r\\n\\r\\nOnce again, we can\'t thank our community enough for their valuable input and exciting contributions to Glasskube.\\r\\nWe are happy you choose to be part of our journey in making Kubernetes package management easier for everyone.\\r\\n\\r\\n**This release includes:**\\r\\n\\r\\n- \ud83d\udc65 a total of 10 contributors\\r\\n- \ud83d\udee0\ufe0f 53 commits\\r\\n- \ud83d\udca5 no breaking changes\\r\\n\\r\\nWatch our release video to get an overview of what has changed:\\r\\n\\r\\n<iframe width=\\"100%\\" height=\\"460\\" src=\\"https://www.youtube-nocookie.com/embed/Ea7-LfzRr8E?si=umTT-bbMuuYwM7lm\\"\\r\\n        title=\\"YouTube video player\\" frameborder=\\"0\\"\\r\\n        allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>\\r\\n\\r\\n## Most notable changes\\r\\n\\r\\n### Dependency management \ud83d\udd17\\r\\n\\r\\nBuilding on the package installation features shipped in the previous weeks, we now offer an in-built way of managing \\r\\nand installing the dependencies used by your desired package. Now package maintainers can define the appropriate dependencies, for \\r\\neach Glasskube supported package as well as recommending the range of suitable dependency versions, this way ensuring that packages are always\\r\\ncompatible to accompanying dependency.\\r\\n\\r\\nPackage dependencies will show on the installation drop down in the GUI. They will also be shown when installing a package via the CLI.\\r\\n\\r\\n### Dark Mode \ud83d\udd76\ufe0f\\r\\n\\r\\nGreat news, we shipped the \\"must-have\\" feature any OSS project can\'t survive without, `Dark Mode`. Glasskube\'s dark mode is linked to the display mode\\r\\ndefined on your local system. Access your system preferences menu and try it out! \\r\\n\\r\\n![Dark Mode](https://github.com/glasskube/glasskube/assets/38757612/60320d36-6790-47b2-840c-c56beb3e9c41)\\r\\n\\r\\n### Further improvements\\r\\n\\r\\nWe also worked hard on improving existing commands and our GUI. Here\'s a list of further notable changes:\\r\\n\\r\\n* The `--latest` flag was added to the `glasskube bootstrap` command to ensure the latest version of the package controller is being used.\\r\\n* The GUI now reflects the available dependencies for selected packages.\\r\\n* We expanded the `describe` command to include the installed dependencies.\\r\\n* You will now be greeted by a notification pop-up if \\"open\\" fails.\\r\\n* Version mismatch detection was added to the package controller.\\r\\n\\r\\n### BREAKING changes\\r\\n\\r\\n*This release does not contain any breaking changes*.\\r\\n\\r\\n## All Release Notes\\r\\n\\r\\nThe release notes can be found here: [v0.1.0 release on GitHub](https://github.com/glasskube/glasskube/releases/tag/v0.1.0)\\r\\n\\r\\nAll changes can be found here: [Comparing v0.0.4 to v0.1.0](https://github.com/glasskube/glasskube/compare/v0.0.4...v0.1.0)\\r\\n\\r\\n## How to upgrade\\r\\n\\r\\nFollow the installation instructions below to download the latest version of the Glasskube client.\\r\\nAfter that you need to upgrade the server component ([Package Operator](/docs/components/package-operator/)) by bootstrapping Glasskube again:\\r\\n\\r\\n```bash\\r\\nglasskube bootstrap --latest\\r\\n```\\r\\n\\r\\n## Getting started\\r\\n\\r\\nFollow our [Getting Started guide](https://glasskube.dev/docs/getting-started/install) if you want to try Glasskube for yourself and install your first package.\\r\\n\\r\\n<Install/>\\r\\n\\r\\n\\r\\n## Get involved\\r\\n\\r\\nThe easiest way to get involved is to tackle one of our [open issues](https://github.com/glasskube/glasskube/issues).\\r\\nYou are also welcome to join our [Discord](https://discord.gg/SxH6KUCGH7).\\r\\n\\r\\n> **If you are a cloud native developer, please [submit your package](https://github.com/glasskube/glasskube/discussions/90)**.\\r\\n\\r\\nAs Glasskube is still in its very early days, your feedback is highly appreciated.\\r\\nLet us know what you think, we would love to hear from you or support us by leaving a star on GitHub:\\r\\n\\r\\n[\u2b50 `glasskube/glasskube` \u2b50](https://github.com/glasskube/glasskube/)"},{"id":"package-updates","metadata":{"permalink":"/TP2024-T5/blog/package-updates","source":"@site/blog/2024-02-27-release-package-updates/index.mdx","title":"Glasskube v0.0.3 \u2014 Introducing Package Updates","description":"Version 0.0.3, launched on February 27th: 10 contributors, 64 commits, introducing package update management.","date":"2024-02-27T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"},{"inline":true,"label":"release","permalink":"/TP2024-T5/blog/tags/release"},{"inline":true,"label":"kubernetes","permalink":"/TP2024-T5/blog/tags/kubernetes"}],"readingTime":3.13,"hasTruncateMarker":true,"authors":[{"name":"Philip Miglinci","title":"Co-Founder","url":"https://www.linkedin.com/in/pmigat/","imageURL":"https://avatars.githubusercontent.com/pmig","key":"pmig","page":null}],"frontMatter":{"slug":"package-updates","title":"Glasskube v0.0.3 \u2014 Introducing Package Updates","description":"Version 0.0.3, launched on February 27th: 10 contributors, 64 commits, introducing package update management.","authors":["pmig"],"tags":["glasskube","release","kubernetes"],"image":"https://github.com/user-attachments/assets/6bfd0894-fa64-40e0-a2e0-87dc9114d28b"},"unlisted":false,"prevItem":{"title":"Glasskube v0.1.0 \u2014 Introducing Dependency Management","permalink":"/TP2024-T5/blog/release-v0.1.0"},"nextItem":{"title":"The Inner Workings of Kubernetes Management Frontends \u2014 A Software Engineer\u2019s Perspective","permalink":"/TP2024-T5/blog/kubernetes-frontends"}},"content":"import Install from \'../../src/partials/_install.mdx\';\\r\\n\\r\\n![Glasskube v0.0.3 thumbnail](https://github.com/user-attachments/assets/6bfd0894-fa64-40e0-a2e0-87dc9114d28b)\\r\\n\\r\\n*Glasskube v0.0.3 was released on February 27th, introducing package updates and many useful features for improved CLI and GUI experience.*\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nGlasskube is fully open-source. Support us by leaving a star: [\u2b50 `glasskube/glasskube` \u2b50](https://github.com/glasskube/glasskube/)\\r\\n\\r\\n## \ud83d\ude4f Special thanks to all our contributors \ud83e\udd70\\r\\n\\r\\nOnce again, we can\'t thank our community enough for their valuable input and exciting contributions to Glasskube.\\r\\nWe are happy you choose to be part of our journey in making Kubernetes package management easier for everyone.\\r\\n\\r\\n**This release includes:**\\r\\n\\r\\n- \ud83d\udc65 a total of 10 contributors\\r\\n- \ud83d\udee0\ufe0f 64 commits\\r\\n- \ud83d\udca5 no breaking changes\\r\\n\\r\\nWatch our release video to get an overview of what has changed:\\r\\n\\r\\n<iframe width=\\"100%\\" height=\\"460\\" src=\\"https://www.youtube-nocookie.com/embed/lw4omvY2i1A?si=8oFNIs336JC3zlBU\\"\\r\\n        title=\\"YouTube video player\\" frameborder=\\"0\\"\\r\\n        allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>\\r\\n\\r\\n## Most notable changes\\r\\n\\r\\n### Package Updates\\r\\n\\r\\nUpdating packages is one of the most essential features of any package manager. That\'s why most of our efforts in the past two weeks\\r\\nhave gone into the support for such updates via CLI and GUI. It\'s as easy as typing `glasskube update` into the command line,\\r\\nor a button click in the GUI.\\r\\n\\r\\nDuring package installation you now can decide whether you want automatic updates for the package, in which case the\\r\\nGlasskube package operator will take care of keeping you up to date at all times. You can of course opt out of this feature\\r\\nif you prefer to handle updates manually. Apart from that, with the `--version` flag you can choose which version of a package is to be installed,\\r\\nif your use case requires a specific version.\\r\\n\\r\\n![Package Updates](https://github.com/glasskube/glasskube/assets/3041752/1b2e14c6-d9e9-446c-b7e3-29c567db38f2)\\r\\n\\r\\nFor technical details, please have a look at the [package operator documentation](/docs/components/package-operator/#handling-package-updates).\\r\\n\\r\\n### Further improvements\\r\\n\\r\\nWe also worked hard on improving existing commands and our GUI. Here\'s a list of further notable changes:\\r\\n\\r\\n* The `glasskube describe` command \u2013 and its GUI-complement, the package detail page \u2013 have been implemented for you to have a more detailed\\r\\nview on each of the packages available in Glasskube.\\r\\n* `glasskube list` has been extended with the new flags `--outdated` \u2013 listing only outdated packages, and `--show-latest` \u2013 showing the\\r\\nlatest available version for each package.\\r\\n* All commands check for a newer version of Glasskube, and notify you if you are not up to date anymore.\\r\\n* Glasskube is now even easier to set up: The GUI comes with handy pages for selecting a kubeconfig and for bootstrapping Glasskube in a cluster.\\r\\nAll CLI commands will also support you in setting up Glasskube in your cluster.\\r\\n* Streaming any kind of package status change directly into the GUI, making it easier for you to recognize when something is happening in the background.\\r\\n\\r\\n### BREAKING changes\\r\\n\\r\\n*This release does not contain any breaking changes*.\\r\\n\\r\\n## All Release Notes\\r\\n\\r\\nThe release notes can be found here: [v0.0.3 release on GitHub](https://github.com/glasskube/glasskube/releases/tag/v0.0.3)\\r\\n\\r\\nAll changes can be found here: [Comparing v0.0.2 to v0.0.3](https://github.com/glasskube/glasskube/compare/v0.0.2...v0.0.3)\\r\\n\\r\\n## How to upgrade\\r\\n\\r\\nFollow the installation instructions below to download the latest version of the Glasskube client.\\r\\nAfter that you need to upgrade the server component ([Package Operator](/docs/components/package-operator/)) by bootstrapping Glasskube again:\\r\\n\\r\\n```bash\\r\\nglasskube bootstrap\\r\\n```\\r\\n\\r\\n## Getting started\\r\\n\\r\\nFollow our [Getting Started guide](https://glasskube.dev/docs/getting-started/install) if you want to try Glasskube for yourself and install your first package.\\r\\n\\r\\n<Install/>\\r\\n\\r\\n\\r\\n## Get involved\\r\\n\\r\\nThe easiest way to get involved is to tackle one of our [open issues](https://github.com/glasskube/glasskube/issues).\\r\\nYou are also welcome to join our [Discord](https://discord.gg/SxH6KUCGH7).\\r\\n\\r\\n> **If you are a cloud native developer, please [submit your package](https://github.com/glasskube/glasskube/discussions/90)**.\\r\\n\\r\\nAs Glasskube is still in its very early days, your feedback is highly appreciated.\\r\\nLet us know what you think, we would love to hear from you or support us by leaving a star on GitHub:\\r\\n\\r\\n[\u2b50 `glasskube/glasskube` \u2b50](https://github.com/glasskube/glasskube/)"},{"id":"kubernetes-frontends","metadata":{"permalink":"/TP2024-T5/blog/kubernetes-frontends","source":"@site/blog/2024-02-14-kubernetes-frontends/index.mdx","title":"The Inner Workings of Kubernetes Management Frontends \u2014 A Software Engineer\u2019s Perspective","description":"Analyzing Code and Architecture of Kubernetes Management Frontends \u2014 How to build and deploy tools like ArgoCD and glasskube.","date":"2024-02-14T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"},{"inline":true,"label":"kubernetes","permalink":"/TP2024-T5/blog/tags/kubernetes"},{"inline":true,"label":"frontends","permalink":"/TP2024-T5/blog/tags/frontends"}],"readingTime":10.035,"hasTruncateMarker":true,"authors":[{"name":"Christoph Enne","title":"Software Engineer","url":"https://github.com/christophenne/","imageURL":"https://avatars.githubusercontent.com/christophenne","key":"christophenne","page":null}],"frontMatter":{"slug":"kubernetes-frontends","title":"The Inner Workings of Kubernetes Management Frontends \u2014 A Software Engineer\u2019s Perspective","description":"Analyzing Code and Architecture of Kubernetes Management Frontends \u2014 How to build and deploy tools like ArgoCD and glasskube.","authors":["christophenne"],"tags":["glasskube","kubernetes","frontends"],"image":"https://github.com/user-attachments/assets/e6836ba6-6201-4f34-b7ba-981dfbd13dcc"},"unlisted":false,"prevItem":{"title":"Glasskube v0.0.3 \u2014 Introducing Package Updates","permalink":"/TP2024-T5/blog/package-updates"},"nextItem":{"title":"Glasskube v0.0.2 \u2014 Open Command","permalink":"/TP2024-T5/blog/open-command"}},"content":"![Inner workings thumbnail](https://github.com/user-attachments/assets/e6836ba6-6201-4f34-b7ba-981dfbd13dcc)\\r\\n\\r\\n*In this blogpost we are reviewing Kubernetes Management Frontends and discuss how these tools are being built.*\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n# The Inner Workings of Kubernetes Management Frontends \u2014 A Software Engineer\u2019s Perspective\\r\\n\\r\\nThe rise of Kubernetes in recent years has led to an astonishing number of open-source Kubernetes management tools seemingly appearing out of nowhere.\\r\\nThe goal of the research leading to this article was to merely understand the architecture of some of these tools and to subsequently provide a brief overview\\r\\nand options for developers trying to get started with their own Kubernetes frontend.\\r\\nWe will not dive deep into the actual tools and what problems they are trying to solve, but instead focus on the software engineering aspect.\\r\\nWe are also exclusively exploring open-source and self-hosted tools and leaving the PaaS/IaaS platforms of cloud providers aside \u2014 that would be a whole different article.\\r\\n\\r\\nSetting up and interacting with your first cluster can be overwhelming. Just like me, you might have come across the infamous [`kubernetes/dashboard`](https://github.com/kubernetes/dashboard),\\r\\nfollowed the installation instructions, and asked yourself: \\"What did I just do and why exactly does this work the way it works?\\"\\r\\nAnd after some tinkering with your cluster, you might have installed even more external tools that help you with some specific aspects of cluster management,\\r\\nproviding you with either a CLI or a Web UI.\\r\\n\\r\\nAs a software engineer mostly engaged in web development in recent years, I was curious about how these kinds of tools are built and deployed.\\r\\n\\r\\nLet\'s first clarify some of the basics needed for the following exploration of different Kubernetes UIs. After that, we will see what they have in common and what makes this kind of software special, to finally form a recommendation of how one could build a Kubernetes Web UI themselves.\\r\\n\\r\\n## Kubernetes Basics\\r\\n\\r\\nThe [official documentation](https://kubernetes.io/docs/concepts/overview/components/) is more than helpful anyway; there is just one important thing to remember:\\r\\nWhenever and wherever you interact with your cluster, you do it via the Kubernetes API \u2014 this holds true at least for the scope of this article,\\r\\nthough there might be other use cases.\\r\\n\\r\\nAs a consumer of this API, one needs to know where it is hosted and how to authenticate against it.\\r\\nThe Kubernetes API can be accessed both from inside a cluster (i.e., from an application running on a pod) and outside a cluster (e.g., from your command line). In some cases however, the API is only available from within a VPN. \\r\\n\\r\\nSince we are looking at tools with a web UI, this UI and its backend need to be exposed such that a user can access it. The options are:\\r\\n\\r\\n- using `kubectl proxy` to open a proxy from the local machine to the cluster (see [Accessing Clusters](https://kubernetes.io/docs/tasks/access-application-cluster/access-cluster/)),\\r\\n- using `kubectl port-forward` to forward a local port to a specific pod of the cluster (see [Use Port Forwarding to Access Applications in a Cluster](https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/)),\\r\\n- using a Kubernetes service of the type `LoadBalancer` to access an application of the cluster (see [Use a Service to Access an Application in a Cluster](https://kubernetes.io/docs/tasks/access-application-cluster/service-access-application-cluster/)).\\r\\n\\r\\nAlternatively, the web server could be running on the local machine of a user as well, in which case one doesn\'t need to worry about these options.\\r\\nHowever, a user needs to have a valid kube config on their machine for any of these approaches to work.\\r\\n\\r\\n## Management Frontends\\r\\n\\r\\nNow, let\'s take a look at some commonly used frontends and how they are built.\\r\\n\\r\\n### [kubernetes-dashboard](https://github.com/kubernetes/dashboard)\\r\\n\\r\\nThe Kubernetes Dashboard is a popular Web UI used to view and manage all kinds of Kubernetes resources within a cluster.\\r\\nIn the latest stable version 2.7, both the backend and frontend are part of the same container. The Go backend serves both the API and the Angular UI assets.\\r\\nThis deployment strategy requires users to use `kubectl proxy` to access the web application.\\r\\n\\r\\nIn the newer 3.0 version, which is still in alpha, the deployment strategy has changed: both the backend and frontend are each running in a dedicated container.\\r\\nTherefore, accessing it via `kubectl proxy` no longer works because the UI needs to access the backend, which is running on a different pod and port.\\r\\nThe port-forwarding approach described [here](https://github.com/kubernetes/dashboard/blob/master/docs/user/accessing-dashboard/README.md) should be used instead.\\r\\n\\r\\n### [ArgoCD](https://github.com/argoproj/argo-cd)\\r\\n\\r\\nArgoCD is a GitOps continuous delivery tool for Kubernetes. It comes with several components, including its own API server and a web UI.\\r\\nAll the backend components are written in Go, and the UI is a React application.\\r\\n\\r\\nAs with the Kubernetes Dashboard, the server (including the UI assets) is deployed inside the cluster, making it necessary for the user to perform port-forwarding or use a LoadBalancer.\\r\\nThis is described in their [documentation](https://argo-cd.readthedocs.io/en/stable/getting_started/#3-access-the-argo-cd-api-server).\\r\\n\\r\\n### [Lens](https://github.com/lensapp/lens)\\r\\n\\r\\nLens is a Desktop UI, but still interesting for our exploration. It is being developed with Electron, React, and Typescript.\\r\\nThe Lens App uses the Typescript Kubernetes client to connect to a cluster, and since the Desktop app is clearly running outside a cluster,\\r\\nit uses a locally provided kubeconfig to connect to it.\\r\\n\\r\\n### [glasskube](https://github.com/glasskube/glasskube)\\r\\n\\r\\nYes, a pretty shameless plug (I work there), but it\'s also an interesting alternative to consider. For the UI of the Glasskube package manager, we spin up the web server\\r\\nlocally via a CLI command and serve the UI assets from there. We decided to go this route because it simply makes more sense in our use case.\\r\\nWhenever the user needs the Glasskube UI, they host it themselves for as long or as short as they want \u2014 there is no need to have it running 24/7 inside the cluster.\\r\\n\\r\\n## Findings\\r\\n\\r\\nMany open-source Kubernetes management UIs are coded in a similar way \u2014 with a Go backend utilizing the powerful Kubernetes-go client, and a Single Page Application in JavaScript as the frontend.\\r\\nIn most cases, the web assets (e.g., JS files) are served together with the backend, meaning one container serves both the backend and frontend.\\r\\nIt was actually difficult to find something that is not built like that.\\r\\n\\r\\n### Inside cluster vs. Out of cluster\\r\\n\\r\\nWhen it comes to deploying such a web tool, there are only two options:\\r\\n\\r\\n- The webserver is deployed on a pod inside the cluster and is accessible either via proxy, port-forwarding, or ingress.\\r\\n- The webserver is deployed outside the cluster, directly (locally) on the users\' machine.\\r\\n\\r\\nThe Kubernetes clients (e.g., [Go client](https://github.com/kubernetes/client-go)) support developers with both methods to connect to a cluster, as we can see in the following examples.\\r\\n\\r\\n**The piece of code it all comes down to:**\\r\\n\\r\\nThese simplified examples are heavily based on the official examples seen [here](https://github.com/kubernetes/client-go/blob/v0.29.0/examples/in-cluster-client-configuration/README.md) and [here](https://github.com/kubernetes/client-go/blob/v0.29.0/examples/out-of-cluster-client-configuration/README.md).\\r\\n\\r\\nLet\'s have a look at how to connect to the Kubernetes API when running the application inside the cluster:\\r\\n\\r\\n```Go\\r\\nimport (\\r\\n\\t\\"context\\"\\r\\n\\r\\n\\tmetav1 \\"k8s.io/apimachinery/pkg/apis/meta/v1\\"\\r\\n\\t\\"k8s.io/client-go/kubernetes\\"\\r\\n\\t\\"k8s.io/client-go/rest\\"\\r\\n)\\r\\n\\r\\nfunc main() {\\r\\n\\t// retreive the config for the cluster we are currently in:\\r\\n\\tconfig, err := rest.InClusterConfig()\\r\\n\\tif err != nil {\\r\\n\\t\\tpanic(err.Error())\\r\\n\\t}\\r\\n\\r\\n\\t// create the clientset for this config:\\r\\n\\tclientset, err := kubernetes.NewForConfig(config)\\r\\n\\tif err != nil {\\r\\n\\t\\tpanic(err.Error())\\r\\n\\t}\\r\\n\\r\\n\\t// do something with the clientset, e.g. getting all pods in the cluster:\\r\\n\\t// pods, err := clientset.CoreV1().Pods(\\"\\").List(context.TODO(), metav1.ListOptions{})\\r\\n}\\r\\n```\\r\\n\\r\\nThe Go client implementation uses the [pod\'s service account](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/) and the environment variables `KUBERNETES_SERVICE_HOST` and `KUBERNETES_SERVICE_PORT` to\\r\\nidentify which cluster it is placed in. Subsequently, it creates the REST config object, with which the clientset can be obtained.\\r\\n\\r\\nSimilarly, when running outside the cluster, one needs to create the config object, but this config is read from the local kube config:\\r\\n\\r\\n```Go\\r\\nimport (\\r\\n\\t\\"context\\"\\r\\n\\t\\"flag\\"\\r\\n\\t\\"path/filepath\\"\\r\\n\\r\\n\\tmetav1 \\"k8s.io/apimachinery/pkg/apis/meta/v1\\"\\r\\n\\t\\"k8s.io/client-go/kubernetes\\"\\r\\n\\t\\"k8s.io/client-go/tools/clientcmd\\"\\r\\n\\t\\"k8s.io/client-go/util/homedir\\"\\r\\n)\\r\\n\\r\\nfunc main() {\\r\\n\\t// get the passed (or default) kube config file path\\r\\n\\tvar kubeconfig *string\\r\\n\\tif home := homedir.HomeDir(); home != \\"\\" {\\r\\n\\t\\tkubeconfig = flag.String(\\"kubeconfig\\", filepath.Join(home, \\".kube\\", \\"config\\"), \\"(optional) absolute path to the kubeconfig file\\")\\r\\n\\t} else {\\r\\n\\t\\tkubeconfig = flag.String(\\"kubeconfig\\", \\"\\", \\"absolute path to the kubeconfig file\\")\\r\\n\\t}\\r\\n\\tflag.Parse()\\r\\n\\r\\n\\tconfig, err := clientcmd.BuildConfigFromFlags(\\"\\", *kubeconfig)\\r\\n\\tif err != nil {\\r\\n\\t\\tpanic(err.Error())\\r\\n\\t}\\r\\n\\r\\n\\tclientset, err := kubernetes.NewForConfig(config)\\r\\n\\tif err != nil {\\r\\n\\t\\tpanic(err.Error())\\r\\n\\t}\\r\\n\\r\\n\\t// do something with the clientset, e.g. getting all pods in the cluster:\\r\\n\\t// pods, err := clientset.CoreV1().Pods(\\"\\").List(context.TODO(), metav1.ListOptions{})\\r\\n}\\r\\n```\\r\\n\\r\\nAgain, the Kubernetes Go client has us covered with a simple function to parse a kubeconfig file to get a config, which can then be used to create a clientset.\\r\\n\\r\\nWhen trying to run these simple examples, you will also come across one difference between these two approaches:\\r\\nRunning the local tool is easier because you don\'t need to build an image, push it to a registry, and then pull it into the cluster.\\r\\n\\r\\n**Which one to choose?**\\r\\n\\r\\nSay you were to build your own Kubernetes UI in a similar fashion. When it comes to the decision of where the webserver of your tool should run, there are several things to consider:\\r\\n\\r\\n- **Distribution**: Running your tool inside the cluster means you have to build and distribute a docker image. On the contrary, you will have to distribute a native binary if you want users to install it on their machines. For both cases, there are lots of tools and resources online.\\r\\n- **Availability**: When your cluster is down for whatever reason, users might not be able to reach the tool hosted inside the cluster. This leads us to the next point:\\r\\n- **Onboarding User Experience**: This might be an edge case, but a locally hosted web tool is available before all of its components are installed in the cluster. This means you could implement some sort of UI onboarding flow for new users, making the tool easier to install and set up.\\r\\n- **Compatibility**: Multiple users of the same cluster could have different versions of your (locally hosted) tool installed. This can not happen if there is just one webserver running inside the cluster.\\r\\n- **Persistence**: When needing to store tool-specific data (i.e., non-Kubernetes resources), you could store it inside the cluster (e.g., in a `ConfigMap`). For the locally deployed variant, you could additionally store user-specific data like settings on the users\' machine. This decision is highly use case dependent.\\r\\n- **Developer Experience**: There seems to be no significant difference, but it is worth noting that when developing an in-cluster webserver, during development this server still needs to support the out-of-cluster config approach somehow. Otherwise, one would have to build and deploy an image into the cluster after every change.\\r\\n\\r\\nEventually, whether the tool is deployed inside or outside of the cluster is completely up to you, but it\'s always important to consider the use cases and be aware of the context in which it is used. You can also opt for providing both options to your users.\\r\\n\\r\\nFor us at Glasskube, it was clear that we want to provide an easy-to-use interface for new users (especially those new to the Kubernetes world), who might not have yet set up all the Glasskube cluster components. These users can be supported by having a CLI command hosting the local webserver with a supportive Web UI.\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nIn this article, we have explored a few Kubernetes tools offering a web UI and analyzed the web aspect of those tools from a software engineer\'s point of view.\\r\\nThere is clearly no ultimate one-size-fits-all solution for how to design and develop such tools, but the list above hopefully gives some hints in the right direction.\\r\\nAs always in software engineering: It depends.\\r\\n\\r\\nOne more plug: I work at Glasskube, where we are building the missing Kubernetes package manager.\\r\\nIf you are interested in our work, make sure to star us: [`glasskube/glasskube`](https://github.com/glasskube/glasskube).\\r\\nWe are also working on an article shedding some light on different CLI frameworks, if you are more of a command line person. And if that\'s not enough, we might write about using htmx soon because it\'s trending, and we need your attention.\\r\\nI can already see the headline: \\"How we reduce our codebase by 95% by using seemingly old-school technology\\" \u2014 I think this has not been done before ;)"},{"id":"open-command","metadata":{"permalink":"/TP2024-T5/blog/open-command","source":"@site/blog/2024-02-12-open-command/index.mdx","title":"Glasskube v0.0.2 \u2014 Open Command","description":"Version 0.0.2, launched on February 9th: 14 contributors, 58 commits, new open command for service access, real-time updates with htmx.","date":"2024-02-12T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"},{"inline":true,"label":"release","permalink":"/TP2024-T5/blog/tags/release"},{"inline":true,"label":"kubernetes","permalink":"/TP2024-T5/blog/tags/kubernetes"}],"readingTime":2.15,"hasTruncateMarker":true,"authors":[{"name":"Philip Miglinci","title":"Co-Founder","url":"https://www.linkedin.com/in/pmigat/","imageURL":"https://avatars.githubusercontent.com/pmig","key":"pmig","page":null}],"frontMatter":{"slug":"open-command","title":"Glasskube v0.0.2 \u2014 Open Command","description":"Version 0.0.2, launched on February 9th: 14 contributors, 58 commits, new open command for service access, real-time updates with htmx.","authors":["pmig"],"tags":["glasskube","release","kubernetes"],"image":"https://github.com/user-attachments/assets/3fb4d679-5f3a-4307-bce0-70c3575539ca"},"unlisted":false,"prevItem":{"title":"The Inner Workings of Kubernetes Management Frontends \u2014 A Software Engineer\u2019s Perspective","permalink":"/TP2024-T5/blog/kubernetes-frontends"},"nextItem":{"title":"Glasskube is now part of the CNCF Landscape","permalink":"/TP2024-T5/blog/cncf-landscape"}},"content":"import Install from \'../../src/partials/_install.mdx\';\\r\\n\\r\\n![Glasskube open command release thumbnail](https://github.com/user-attachments/assets/3fb4d679-5f3a-4307-bce0-70c3575539ca)\\r\\n\\r\\n*Glasskube v0.0.2 was released on February 9th, just 9 days after initial technical preview release.*\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nGlasskube is fully open-source. Support us by leaving a star: [\u2b50 `glasskube/glasskube` \u2b50](https://github.com/glasskube/glasskube/)\\r\\n\\r\\n## \ud83d\ude4f Special thanks to all our contributors \ud83e\udd70\\r\\n\\r\\nWe didn\'t anticipate rolling out our second preview release just one week after the initial one,\\r\\nbut thanks to the remarkable contributions from our community, that\'s exactly what we\'ve done.\\r\\n\\r\\n**This release includes:**\\r\\n\\r\\n- \ud83d\udc65 a total of 14 (mostly new) contributors\\r\\n- \ud83d\udee0\ufe0f 58 commits\\r\\n- \ud83d\udca5 no breaking changes\\r\\n\\r\\nWatch our release video to get an overview of what has changed:\\r\\n\\r\\n<iframe width=\\"100%\\" height=\\"460\\" src=\\"https://www.youtube-nocookie.com/embed/fbi2fdQiRrs?si=cSBxS_0R2VyrkbYL\\"\\r\\n        title=\\"YouTube video player\\" frameborder=\\"0\\"\\r\\n        allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>\\r\\n\\r\\n## Most notable changes\\r\\n\\r\\nOf all changes, bugfixes and improvements, two new features stand out in the second release:\\r\\n\\r\\n### The `open` command\\r\\n\\r\\nIntroducing Glasskube\'s newest feature: the `open` command!\\r\\nGone are the days of laboriously setting up multiple TCP tunnels with `kubectl port-forward` just to access specific services.\\r\\nWith Glasskube, accessing your desired services is now as easy as a click or a simple command.\\r\\nSay goodbye to unnecessary complexity and hello to effortless convenience.\\r\\n\\r\\n### Realtime updates with htmx\\r\\n\\r\\nThe second-biggest achievement of this release: The integration of htmx for real-time updates.\\r\\nThis advanced feature enables automatic and instantaneous updates to your graphical user interface,\\r\\neliminating the need for manual page refreshes.\\r\\nWith htmx, your application stays dynamically synchronized with backend changes, ensuring a seamless and responsive user experience.\\r\\n\\r\\n\\r\\n### BREAKING changes\\r\\n\\r\\n*This release does not contain any breaking changes*.\\r\\n\\r\\n## All Release Notes\\r\\n\\r\\nThe release notes can be found here: [v0.0.2 release on GitHub](https://github.com/glasskube/glasskube/releases/tag/v0.0.2)\\r\\n\\r\\nAll changes can be found here: [Comparing v0.0.1 to v0.0.2](https://github.com/glasskube/glasskube/compare/v0.0.1...v0.0.2)\\r\\n\\r\\n## How to upgrade\\r\\n\\r\\nFollow the installation instructions below to download the latest version of the Glasskube client.\\r\\nAfter that you need to upgrade the server component ([Package Operator](/docs/components/package-operator/)) by bootstrapping Glasskube again:\\r\\n\\r\\n```bash\\r\\nglasskube bootstrap\\r\\n```\\r\\n\\r\\n## Getting started\\r\\n\\r\\nFollow our [Getting Started guide](https://glasskube.dev/docs/getting-started/install) if you want to try Glasskube for yourself and install your first package.\\r\\n\\r\\n<Install/>\\r\\n\\r\\n\\r\\n## Get involved\\r\\n\\r\\nThe easiest way to get involved is to tackle one of our [open issues](https://github.com/glasskube/glasskube/issues).\\r\\nYou are also welcome to join our [Discord](https://discord.gg/SxH6KUCGH7).\\r\\n\\r\\n> **If you are a cloud native developer, please [submit your package](https://github.com/glasskube/glasskube/discussions/90)**.\\r\\n\\r\\nAs Glasskube is still in its very early days, your feedback is highly appreciated.\\r\\nLet us know what you think, we would love to hear from you or support us by leaving a star on GitHub:\\r\\n\\r\\n[\u2b50 `glasskube/glasskube` \u2b50](https://github.com/glasskube/glasskube/)"},{"id":"cncf-landscape","metadata":{"permalink":"/TP2024-T5/blog/cncf-landscape","source":"@site/blog/2024-02-08-cncf-landscape/index.mdx","title":"Glasskube is now part of the CNCF Landscape","description":"Glasskube joins the CNCF Landscapes Application Definition & Image Build category being more visible while building the missing Packager Manager for Kubernetes.","date":"2024-02-08T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"},{"inline":true,"label":"news","permalink":"/TP2024-T5/blog/tags/news"},{"inline":true,"label":"cncf","permalink":"/TP2024-T5/blog/tags/cncf"}],"readingTime":2.155,"hasTruncateMarker":true,"authors":[{"name":"Philip Miglinci","title":"Co-Founder","url":"https://www.linkedin.com/in/pmigat/","imageURL":"https://avatars.githubusercontent.com/pmig","key":"pmig","page":null}],"frontMatter":{"slug":"cncf-landscape","title":"Glasskube is now part of the CNCF Landscape","description":"Glasskube joins the CNCF Landscapes Application Definition & Image Build category being more visible while building the missing Packager Manager for Kubernetes.","authors":["pmig"],"tags":["glasskube","news","cncf"],"image":"https://github.com/user-attachments/assets/5caa9483-8ace-42ac-896e-67f8b771248f"},"unlisted":false,"prevItem":{"title":"Glasskube v0.0.2 \u2014 Open Command","permalink":"/TP2024-T5/blog/open-command"},"nextItem":{"title":"Glasskube v0.0.1 \u2014 Technical Preview","permalink":"/TP2024-T5/blog/technical-preview"}},"content":"import Install from \'../../src/partials/_install.mdx\';\\r\\n\\r\\n![Glasskube is part of the CNCF landscape](https://github.com/user-attachments/assets/5caa9483-8ace-42ac-896e-67f8b771248f)\\r\\n\\r\\n**\ud83e\uddca Glasskube is the next generation Package Manager for Kubernetes \ud83d\udce6**\\r\\n\\r\\nFeaturing a GUI and a CLI. Glasskube packages are dependency aware, GitOps ready and can get automatic updates via a central public package repository.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nSupport us by leaving a star on GitHub: [\u2b50 `glasskube/glasskube` \u2b50](https://github.com/glasskube/glasskube/)\\r\\n\\r\\n## We got accepted into the CNCF Landscape\\r\\n\\r\\nGlasskube is now visible next other relevant projects in the cloud native ecosystem landscape like Helm or Backstage.\\r\\n\\r\\n[![Glasskube CNCF Landscape](https://github.com/glasskube/glasskube/assets/3041752/54b8adad-e88f-4853-9250-e8c3bbbad993)](https://github.com/glasskube/glasskube/)\\r\\n\\r\\nThe goal of the cloud-native landscape is to gather and categorize projects that are relevant to the cloud native developers,\\r\\noffering a comprehensive overview of the existing ecosystem.\\r\\n\\r\\nBy exploring this landscape, project teams can make informed decisions about tooling, technology stack selection, and best practices.\\r\\nMoreover, it facilitates access to emerging innovations, fosters community collaboration, and ensures compatibility and interoperability,\\r\\nall of which are critical for the success of Kubernetes deployments.\\r\\n\\r\\n## Glasskube is part of the Application Definition & Image Build category\\r\\n\\r\\nApplication definition and image build tools encompass developer-focused and operations-focused functionalities,\\r\\naiming to simplify Kubernetes deployment and app management.\\r\\nThey address challenges of complexity in containerized environments, offering solutions for reproducible image creation,\\r\\nstandardized app deployment, and simplifying developer and operator experiences. Tools include Helm for deploying third-party apps,\\r\\nthe Operator Framework for building and deploying operators, and Cloud Native Buildpacks for containerizing application code.\\r\\nThese tools help streamline Kubernetes development and operations, offering diverse solutions for various use cases.\\r\\n\\r\\n## Accepted in just 7 days after the launch\\r\\n\\r\\nThe pull request [#3735](https://github.com/cncf/landscape/pull/3735) got accepted just 7 days after the released of our first\\r\\n[technical preview](https://glasskube.dev/blog/technical-preview/) of [Glasskube](https://glasskube.dev).\\r\\n\\r\\nGlasskube was accepted into the CNCF landscape category due to its ability to effectively address the critical challenges\\r\\nwithin application definition and image build, underscoring its importance in streamlining Package Management on Kubernetes.\\r\\n\\r\\n### View Glasskube in the CNCF Landscape\\r\\n\\r\\n**[Glasskubes entry in the CNCF landscape](https://landscape.cncf.io/?item=app-definition-and-development--application-definition-image-build--glasskube)**\\r\\n\\r\\n## Try out Glasskube yourself\\r\\n\\r\\nYou can already get your hands on Glasskube and install the first available packages.\\r\\nYou can find the correct installation instruction for your operating system:\\r\\n\\r\\n<Install/>\\r\\n\\r\\n## Get involved\\r\\n\\r\\nThe easiest way to get involved is to tackle one of our [open issues](https://github.com/glasskube/glasskube/issues).\\r\\nYou are also welcome to join our [Discord](https://discord.gg/SxH6KUCGH7).\\r\\n\\r\\n**If you are a cloud native developer, please [submit your package](https://github.com/glasskube/glasskube/discussions/90)**.\\r\\n\\r\\nAs Glasskube is still in its very early days, your feedback is highly appreciated.\\r\\n\\r\\nLet us know what you think, we would love to hear from you or support us by leaving a star:\\r\\n\\r\\n[\u2b50 `glasskube/glasskube` \u2b50](https://github.com/glasskube/glasskube/)"},{"id":"technical-preview","metadata":{"permalink":"/TP2024-T5/blog/technical-preview","source":"@site/blog/2024-02-01-technical-preview/index.mdx","title":"Glasskube v0.0.1 \u2014 Technical Preview","description":"How to make 6M developers\' life easier? Introducing Glasskube\u2014The next generation Package Manager For Kubernetes","date":"2024-02-01T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"},{"inline":true,"label":"release","permalink":"/TP2024-T5/blog/tags/release"},{"inline":true,"label":"kubernetes","permalink":"/TP2024-T5/blog/tags/kubernetes"}],"readingTime":4.415,"hasTruncateMarker":true,"authors":[{"name":"Philip Miglinci","title":"Co-Founder","url":"https://www.linkedin.com/in/pmigat/","imageURL":"https://avatars.githubusercontent.com/pmig","key":"pmig","page":null},{"name":"Louis Weston","title":"Co-Founder","url":"https://www.linkedin.com/in/louisnweston/","imageURL":"https://avatars.githubusercontent.com/thekubernaut","key":"lw","page":null}],"frontMatter":{"slug":"technical-preview","title":"Glasskube v0.0.1 \u2014 Technical Preview","description":"How to make 6M developers\' life easier? Introducing Glasskube\u2014The next generation Package Manager For Kubernetes","authors":["pmig","lw"],"tags":["glasskube","release","kubernetes"],"image":"https://github.com/user-attachments/assets/1c6859ac-dcee-4482-ac66-58a342bc0352"},"unlisted":false,"prevItem":{"title":"Glasskube is now part of the CNCF Landscape","permalink":"/TP2024-T5/blog/cncf-landscape"},"nextItem":{"title":"5 shortcomings of Helm","permalink":"/TP2024-T5/blog/5-helm-shortcomings"}},"content":"import Install from \'../../src/partials/_install.mdx\';\\r\\n\\r\\n![Glasskube v0.0.1](https://github.com/user-attachments/assets/1c6859ac-dcee-4482-ac66-58a342bc0352)\\r\\n\\r\\n*The aim of this post is to share our technical preview of how a cloud native package manager could work and what challenges need to be solved.*\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nGlasskube is fully open-source. Support us by leaving a star: [\u2b50 `glasskube/glasskube` \u2b50](https://github.com/glasskube/glasskube/)\\r\\n\\r\\n## Introducing Glasskube \u2014 The next generation Package Manager For Kubernetes\\r\\n\\r\\n![Glasskube GUI Mockup](https://github.com/glasskube/operator/assets/3041752/71d0da0c-34ac-40b7-8740-bd2a81ca9f07)\\r\\n\\r\\nPackage Management on Kubernetes is one of the most pressing issues in the Cloud Native community.\\r\\nA concept which is widely known from other ecosystems like desktop and mobile computing has yet not been realized for cloud computing.\\r\\nFor example on Android and iOS, millions of developers publish their packages in the Play Store or App Store to reach their users.\\r\\nThe package manager also makes sure all users receive the latest version published by the developer and the developer receives\\r\\ncrash reports and user feedback as a return to improve their applications,\\r\\nbut as a cloud native developer there is no package manager you can rely on \u2014 yet.\\r\\n\\r\\nOur first release (v0.0.1) already features a working prototype that can install basic packages, but a lot of challenges still need to be solved.\\r\\n\\r\\n### A cloud native architecture\\r\\n\\r\\nGlasskube itself is designed as a cloud native application.\\r\\nFeaturing an easy to install client that comes with a graphical user interface and autocompletion for your favorite shell.\\r\\n\\r\\nAt the heart of the Glasskube package ecosystem lies our central package registry which holds the package manifests.\\r\\nIn a future version we also plan to support 3rd party registries and the possibility to use multiple registries in a cluster.\\r\\n\\r\\nThe Glasskube package operator syncs the latest manifest into the cluster and makes sure it will be updated as soon as a new manifest is available.\\r\\n\\r\\n```mermaid\\r\\n---\\r\\ntitle: glasskube install [package]\\r\\n---\\r\\nflowchart BT\\r\\n  UI([UI])-- via local server<br>http://localhost:8580 ---Client(Client)\\r\\n  CLI([CLI])-- cobra cli ---Client\\r\\n  Client-- 1. validate package --\x3eRepo[(Public Glasskube<br>Package Repo)]\\r\\n  Client-- 2. create<br>`Package` CR --\x3eKubernetes(((Kubernetes API)))\\r\\n  subgraph Cluster\\r\\n    Kubernetes-- 3. reconcile<br>`Package` --\x3ePackageController\\r\\n    PackageController-- 4. create `PackageInfo`<br>if not present--\x3eKubernetes\\r\\n    Kubernetes-- 5. reconcile<br>`PackageInfo`--\x3ePackageInfoController\\r\\n    end\\r\\n  PackageInfoController<-- 6. update package manifest --\x3eRepo\\r\\n  subgraph Cluster\\r\\n    PackageInfoController-- 7. update manifest<br>in `PackageInfo` --\x3eKubernetes\\r\\n    Kubernetes-- 8. reconcile<br>`PackageInfo` --\x3ePackageController\\r\\n    PackageController-- 9. deploy package --\x3eKubernetes\\r\\n  end\\r\\n\\r\\n  Kubernetes-- 10. package status --\x3eClient\\r\\n```\\r\\n\\r\\n### Challenges that need to be solved\\r\\n\\r\\nWe already covered some our upcoming features in our [public roadmap](https://glasskube.dev/roadmap), but I would also like to take this opportunity to shortly speak about broader challenges.\\r\\n\\r\\n#### Kubernetes version compatibility\\r\\n\\r\\nKubernetes releases minor versions every 4 months, which often come with new API versions. Package authors need to adapt their packages to these changes.\\r\\nIn Kubernetes, a particular release might include more than one API version of a resource, so that packages can be compatible with a broader range of Kubernetes versions.\\r\\nThese compatible versions are often only documented in the package distributors\' changelog.\\r\\nGlasskube aims to incorporate this kind of metadata in combination with automatic checks from tools like [kube-no-trouble](https://github.com/doitintl/kube-no-trouble)\\r\\nor [Pluto](https://github.com/FairwindsOps/pluto).\\r\\n\\r\\nThe user should not be required to drudgingly check all packages for compatibility and package developers should get feedback if their package is not compatible with the latest API versions.\\r\\n\\r\\n#### Package dependencies\\r\\n\\r\\nCloud native applications often interoperate and there are some packages that can be found in almost every Kubernetes cluster. For example: cert-manager, Ingress controllers or\\r\\ndatabase operators. Due to the lack of a package manager and ecosystem these dependencies are still often only documented in the Getting started section of an application.\\r\\n\\r\\nIn an ideal world a package author could simply specify a dependency of their package and the package manager ensures that all these prerequisites are fulfilled.\\r\\n\\r\\n#### Testing\\r\\n\\r\\nIn order to support multiple Kubernetes versions, dependencies and packages Glasskube needs to build massive automated testing infrastructure for all packages in its central package registry.\\r\\n\\r\\n#### Feedback and package quality\\r\\n\\r\\nAs seen in other package managers like the [arch user repository](https://aur.archlinux.org/) or the Play Store and App Store\\r\\nusers\' feedback and reviews help other users to decide between different packages.\\r\\nAlso, application developer will incorporate users\' feedback to gain popularity and better ratings in the package manager.\\r\\n\\r\\n## Glasskube and Helm\\r\\n\\r\\nGlasskube is no replacement for Helm. Helm has its strengths in configuring releases through templating and having the ability to perform upgrades and rollbacks.\\r\\n\\r\\nGlasskube is laser focused on the administrator who needs to only install and kustomize (pun intended \ud83d\ude09) a single application, but who also needs to make sure multiple\\r\\npackages are kept up-to-date and secure throughout multiple Kubernetes version upgrades and adapting to inevitable breaking changes.\\r\\n\\r\\n## Getting started\\r\\n\\r\\nFollow our [Getting Started guide](https://glasskube.dev/docs/getting-started/install) if you want to try Glasskube for yourself and install your first package.\\r\\n\\r\\n<Install/>\\r\\n\\r\\n## Release Notes\\r\\n\\r\\nAll release notes can be found on GitHub: https://github.com/glasskube/glasskube/releases/tag/v0.0.1\\r\\n\\r\\n## Release Video\\r\\n\\r\\n<iframe width=\\"100%\\" height=\\"400\\" src=\\"https://www.youtube-nocookie.com/embed/uAtzPRehBl4?si=UOEHmqYtFceL-sLJ\\"\\r\\n        title=\\"YouTube video player\\" frameborder=\\"0\\"\\r\\n        allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>\\r\\n\\r\\n## Get involved\\r\\n\\r\\nThe easiest way to get involved is to tackle one of our [open issues](https://github.com/glasskube/glasskube/issues).\\r\\nYou are also welcome to join our [Discord](https://discord.gg/SxH6KUCGH7).\\r\\n\\r\\n**If you are a cloud native developer, please [submit your package](https://github.com/glasskube/glasskube/discussions/90)**.\\r\\n\\r\\nAs Glasskube is still in its very early days, your feedback is highly appreciated.\\r\\n\\r\\nLet us know what you think, we would love to hear from you or support us by leaving a star: [\u2b50 `glasskube/glasskube` \u2b50](https://github.com/glasskube/glasskube/)"},{"id":"5-helm-shortcomings","metadata":{"permalink":"/TP2024-T5/blog/5-helm-shortcomings","source":"@site/blog/2023-12-14-5-helm-shortcomings/index.mdx","title":"5 shortcomings of Helm","description":"5 reasons we are trying to build the next generation of deployment automation for Kubernetes.","date":"2023-12-14T00:00:00.000Z","tags":[{"inline":true,"label":"glasskube","permalink":"/TP2024-T5/blog/tags/glasskube"},{"inline":true,"label":"helm","permalink":"/TP2024-T5/blog/tags/helm"},{"inline":true,"label":"kubernetes","permalink":"/TP2024-T5/blog/tags/kubernetes"}],"readingTime":9.805,"hasTruncateMarker":true,"authors":[{"name":"Philip Miglinci","title":"Co-Founder","url":"https://www.linkedin.com/in/pmigat/","imageURL":"https://avatars.githubusercontent.com/pmig","key":"pmig","page":null},{"name":"Jakob Steiner","title":"Software Engineer","url":"https://github.com/kosmoz","imageURL":"https://avatars.githubusercontent.com/kosmoz","key":"kosmoz","page":null}],"frontMatter":{"slug":"5-helm-shortcomings","title":"5 shortcomings of Helm","description":"5 reasons we are trying to build the next generation of deployment automation for Kubernetes.","authors":["pmig","kosmoz"],"tags":["glasskube","helm","kubernetes"],"image":"https://cms.glasskube.eu/uploads/Goodbyehelm_7c21643ff8.png"},"unlisted":false,"prevItem":{"title":"Glasskube v0.0.1 \u2014 Technical Preview","permalink":"/TP2024-T5/blog/technical-preview"}},"content":"![helm-thumbnail](https://cms.glasskube.eu/uploads/Goodbyehelm_7c21643ff8.png)\\r\\n\\r\\n*5 reasons we are trying to build the next generation of deployment automation for Kubernetes.*\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nGlasskube is fully open-source. Support us by leaving a star: [\u2b50 `glasskube/glasskube` \u2b50](https://github.com/glasskube/glasskube/)\\r\\n\\r\\n## Introduction\\r\\n\\r\\nAs a seasoned DevOps engineer, I found that Helm, the popular Kubernetes deployment tool, has some shocking shortcomings. In this post I want to discuss some of those which, in my opinion, require a new vision of a more modern deployment solution.\\r\\nIf you never heard about Helm before, in a nutshell it is:\\r\\n\\r\\n> A framework for packaging Kubernetes resources (apps) to charts, publish them and let them easily be installed via a command line interface.\\r\\n\\r\\nThe goal of this post is *not* to hate on the smart and talented people who built helm, but maybe we can kindle a productive and healthy discussion about where we need to go as the DevOps industry to stay relevant in the coming years. But to fully understand the following, I think it is important to understand what developments lead us to where we are today. \\r\\nSo, before we start, let\'s quickly dive into the history of Helm. \\r\\n\\r\\nIn 2015, a company called Deis created Helm, a package manager for Kubernetes. \\r\\nDeis is now part of Azure Kubernetes Service but the original project still exists as [Helm Classic](https://github.com/helm/helm-classic). At the same time, Google had a project called *Kubernetes Deployment Manager*, which was similar to [Google Deployment Manager](https://cloud.google.com/deployment-manager/docs) but for Kubernetes resources, rather than GCS resources. \\r\\n\\r\\nAt the beginning of 2016, the two projects decided to merge, which resulted in the release of [Helm v2](https://v2.helm.sh/) later that year. \\r\\nHelm v2 consists of a client and server component (Helm and tiller, respectively), where the latter was the continuation of the original Kubernetes Deployment Manager project.\\r\\nTiller was designed to handle deployment states to make it easier for multiple users to use Helm without interfering with each other.\\r\\n\\r\\nIn 2018, Helm [launched](https://helm.sh/blog/intro-helm-hub/) the Helm Hub as a central place to discover charts which are otherwise found in distributed repositories. \\r\\nHelm Hub was [rebranded](https://helm.sh/blog/helm-hub-moving-to-artifact-hub/) to [Artifact Hub](https://artifacthub.io/) in 2020.\\r\\n\\r\\nWith the release of Kubernetes 1.6, which had Role Based Access Control (RBAC) enabled by default, production deployments of helm became more difficult, because of the many security policies that were required by tiller.\\r\\nSo, people started to experiment with a new approach that could do the same thing without requiring a server component, which resulted in the release of Helm v3 in 2019.\\r\\n\\r\\nAs you can see, helm has a very rich history. It became the gold-standard of packaging apps for Kubernetes and is used by DevOps engineers all over the world. But just because helm is the biggest player on the field, it doesn\'t mean that it is without flaws. **So then, why say goodbye to helm?**\\r\\n\\r\\n## 5 shortcomings:\\r\\n\\r\\n### 1. Helm doesn\'t provide a mechanism for upgrading Custom Resource Definitions\\r\\n\\r\\n`helm` does provide a method of packaging Custom Resource Definitions (CRDs) by placing them in a dedicated `crds` directory, but these are ignored during upgrades!\\r\\n[This is intentional](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations) and designed to prevent accidental data loss.\\r\\nTherefore, upgrading a chart does *not* automatically upgrade it\'s associated CRDs, which is unexpected for many engineers and leads to more manually involved and error-prone upgrade procedures and other anti-patterns.\\r\\n\\r\\nTo combat this major design flaw, chart developers have come up with several strategies, the most popular of which are:\\r\\n\\r\\n* Putting the CRDs into the chart\'s `template` directory\\r\\n* Creating separate sub-charts just for CRDs\\r\\n\\r\\nAn alternative way to overcome this shortcoming is to not invoke helm commands directly, but rather use a CI/CD solution, like [Flux](https://github.com/fluxcd/flux2).\\r\\nFlux provides a setting to automatically update CRDs during a helm upgrade, but it is [off by default](https://fluxcd.io/flux/components/helm/api/v2beta2/#helm.toolkit.fluxcd.io/v2beta2.CRDsPolicy).\\r\\n\\r\\n### 2. Helm dependency management\\r\\n\\r\\nThe way to specify a dependency in a helm chart is to reference it as a sub-chart. \\r\\nThis method can work great for tightly coupled dependencies that you might want to install separately or as part of another chart, but it has some weaknesses that are important to understand:\\r\\n\\r\\n* Sub-charts are **always installed in the same namespace** as the primary release and there is no way to change this.\\r\\n* There exists **no mechanism to share a dependency** between two releases.\\r\\n\\r\\nFor example, our [Glasskube Operator Helm Chart](https://github.com/glasskube/operator/tree/main/charts/glasskube-operator) depends on kube-prometheus-stack, velero and a bunch of other dependencies, some of which are already installed in many Kubernetes clusters.\\r\\nTo provide an installation experience that is as simple as possible, the chart references all those dependencies as sub-charts, but using this approach, all those dependencies are bundled in the Glasskube [Operator](https://glasskube.eu/de/r/glossar/kubernetes-operator/) release and can not be changed or updated separately.\\r\\nAdditionally, there is no way to check whether a dependency is already installed, so a user might end up with two separate installations of the same helm chart!\\r\\n\\r\\nIdeal tooling would allow chart developers to specify external dependencies and simply ensure that those are present in a cluster before a chart can be installed.\\r\\nThis way, dependencies could be shared among consumers.\\r\\nThis is how package managers for operating systems work since forever. Why does Kubernetes need to be different?\\r\\n\\r\\n### 3. Helm chart creation is not user-friendly\\r\\n\\r\\nSo far, we discussed problems that affect you as a chart user.\\r\\nBut what does the situation look like for chart developers?\\r\\n\\r\\nWell, let\'s start by creating a new chart.\\r\\nThis can be achieved by calling `helm create your-chart`. \\r\\nI invite you to quickly open a terminal, run this command and go through all the files it creates.\\r\\nAs I\'m sure you will agree, it\'s\u2026 a *lot*.\\r\\nI still remember the moment when I wanted to create my first helm chart and saw the results of this command thinking, \u201cthis can\'t be right.\u201d\\r\\n\\r\\n```\\r\\n.:\\r\\ntotal 8,0K\\r\\ndrwxr-xr-x. 2 kosmoz kosmoz   40  7. Dez 13:23 charts/\\r\\n-rw-r--r--. 1 kosmoz kosmoz 1,2K  7. Dez 13:23 Chart.yaml\\r\\ndrwxr-xr-x. 3 kosmoz kosmoz  200  7. Dez 13:23 templates/\\r\\n-rw-r--r--. 1 kosmoz kosmoz 1,9K  7. Dez 13:23 values.yaml\\r\\n\\r\\n./charts:\\r\\ntotal 0\\r\\n\\r\\n./templates:\\r\\ntotal 28K\\r\\n-rw-r--r--. 1 kosmoz kosmoz 1,9K  7. Dez 13:23 deployment.yaml\\r\\n-rw-r--r--. 1 kosmoz kosmoz 1,8K  7. Dez 13:23 _helpers.tpl\\r\\n-rw-r--r--. 1 kosmoz kosmoz  925  7. Dez 13:23 hpa.yaml\\r\\n-rw-r--r--. 1 kosmoz kosmoz 2,1K  7. Dez 13:23 ingress.yaml\\r\\n-rw-r--r--. 1 kosmoz kosmoz 1,8K  7. Dez 13:23 NOTES.txt\\r\\n-rw-r--r--. 1 kosmoz kosmoz  326  7. Dez 13:23 serviceaccount.yaml\\r\\n-rw-r--r--. 1 kosmoz kosmoz  370  7. Dez 13:23 service.yaml\\r\\ndrwxr-xr-x. 2 kosmoz kosmoz   60  7. Dez 13:23 tests/\\r\\n\\r\\n./templates/tests:\\r\\ntotal 4,0K\\r\\n-rw-r--r--. 1 kosmoz kosmoz 388  7. Dez 13:23 test-connection.yaml\\r\\n```\\r\\n\\r\\nIn total, `helm create` generates 10 files in different sub-directories and it is not immediately apparent which ones of those are actually essential for a chart and which ones are just example code. \\r\\nI once complained about this to a DevOps engineer who had already created dozens of charts and they laughed and said: \\r\\n\\r\\n> \u201cThe first step in creating a chart is running `helm create`. The second is deleting 90% of the results.\u201d\\r\\n\\r\\nReally? That\'s the best we can do? \\r\\nOkay, let\'s accept that and say you figured out the structure of your new chart.\\r\\nNow, you probably want to add some resources.\\r\\nOf course, you can just drop your existing YAML files into the chart\'s `templates` directory, but you\'re probably interested in using some parameters from your `values.yaml` in your resources.\\r\\nAfter all, that would kind of be the point of creating a helm chart in the first place.\\r\\nTo look at an example, go back to your terminal (where, previously, you created your helm chart) and check out the file `templates/serviceaccount.yaml`:\\r\\n\\r\\n```\\r\\n{{- if .Values.serviceAccount.create -}}\\r\\napiVersion: v1\\r\\nkind: ServiceAccount\\r\\nmetadata:\\r\\n  name: {{ include \\"your-chart.serviceAccountName\\" . }}\\r\\n  labels:\\r\\n    {{- include \\"your-chart.labels\\" . | nindent 4 }}\\r\\n  {{- with .Values.serviceAccount.annotations }}\\r\\n  annotations:\\r\\n    {{- toYaml . | nindent 4 }}\\r\\n  {{- end }}\\r\\n{{- end }}\\r\\n```\\r\\n\\r\\nNow, I know what you\'re thinking: \\r\\n\\r\\n> That doesn\'t look like the YAML I know! \\r\\n> What is \' `include`, `toYaml` and `nindent` and what\'s up with all the `-` and `{{` and `|`?\\r\\n\\r\\nIt\'s true, although helm template files use the file name extension for YAML, they are actually just templates. \\r\\nHelm templates are based on the Go template language which is very flexible and powerful but doesn\'t really know anything about YAML or Kubernetes. \\r\\nThat\'s why it\'s necessary to call lots of these conversion functions inside the template files.\\r\\n\\r\\nAs a result many popular charts end up with template files that contain more template language stuff than actual YAML.\\r\\nThis makes them hard to read and maintain, especially as someone who wasn\'t involved in its creation.\\r\\n\\r\\n### 4. The `values.yaml` file is an anti-pattern\\r\\n\\r\\nNow, let\'s go back to something that\'s a little more tangible for you as a helm user.\\r\\nAs a Kubernetes application developer who writes resources as YAML files, you are probably used to having rich support in your development environment, including strict schema validation and super comprehensive autocomplete.\\r\\nCreating a `values.yaml` file for a chart release is a little different.\\r\\nSee, there is no general schema for what goes and doesn\'t go inside a `values.yaml` file.\\r\\nThus, your development environment cannot help you beyond basic YAML syntax highlighting. \\r\\nThe only way to verify if your `values.yaml` file is valid is to run it through helm and see what happens.\\r\\nUsing `helm template` allows you to render these helm templates which detects possible errors in the configuration file.\\r\\n\\r\\nA lot of chart developers want to give users the possibility to fine tune most aspects of final deployment.\\r\\nAs a result, the number of possibilities for configuration is often unreasonably large and complicated, mimicking the actual resources they want to create, but without any schema validation! \\r\\n\\r\\n### 5. Inability to interact with the Kubernetes API\\r\\n\\r\\nWe already discussed 4 shortcomings of helm, but in my opinion the biggest downside of helm is this: \\r\\nA helm release is strictly a one-shot operation.\\r\\nOnce a helm release is successfully installed, helm\'s job is done.\\r\\nBut here\'s the thing: **Installing an application is usually not the hard part, maintaining an installation and keeping it running is**.\\r\\nUnfortunately, helm doesn\'t really help you with that.\\r\\n\\r\\nAfter finishing installation of a release, helm can not perform any additional changes due to its design as a strictly client-side application.\\r\\nThis inability to interact with the release during later stages of a release\'s life-cycle means that **helm as a deployment method inherently static**, but modern software deployments are often required to be very dynamic.\\r\\n\\r\\nA simple example that an [Operator](https://glasskube.eu/de/r/glossar/kubernetes-operator/) can do, but helm can\'t would be setting the Ingress class and annotations dynamically based on the detected Kubernetes environment:\\r\\n\\r\\n**Detecting the cloud environment:**\\r\\n```kotlin\\r\\nprivate val dynamicCloudProvider\\r\\n    get() = when {\\r\\n        kubernetesClient.configMaps().inNamespace(\\"kube-system\\").withName(\\"shoot-info\\")\\r\\n            .get()?.data?.get(\\"extensions\\")?.contains(\\"shoot-dns-service\\") == true ->\\r\\n            CloudProvider.gardener\\r\\n\\r\\n        kubernetesClient.nodes().withLabel(\\"eks.amazonaws.com/nodegroup\\").list().items.isNotEmpty() ->\\r\\n            CloudProvider.aws\\r\\n\\r\\n        kubernetesClient.nodes().withLabel(\\"csi.hetzner.cloud/location\\").list().items.isNotEmpty() ->\\r\\n            CloudProvider.hcloud\\r\\n\\r\\n        else ->\\r\\n            CloudProvider.generic\\r\\n    }\\r\\n```\\r\\n\\r\\n**Applying configurations based on the environment:**\\r\\n```kotlin\\r\\nprotected val defaultIngressClassName: String?\\r\\n    get() = when (configService.cloudProvider) {\\r\\n        CloudProvider.aws -> \\"alb\\"\\r\\n        else -> configService.ingressClassName\\r\\n    }\\r\\n\\r\\nprotected fun getDefaultAnnotations(primary: P, context: Context<P>): Map<String, String> =\\r\\n    configService.getCommonIngressAnnotations(primary) +\\r\\n        when (configService.cloudProvider) {\\r\\n            CloudProvider.aws -> awsDefaultAnnotations\\r\\n            CloudProvider.gardener -> gardenerDefaultAnnotations\\r\\n            else -> getCertManagerDefaultAnnotations(context) + ingressNginxDefaultAnnotations\\r\\n```       \\r\\n\\r\\n## Conclusion\\r\\n\\r\\nAlthough many developers are a bit scared of helm at first, its simple design gave helm the lead it currently holds in the space of Kubernetes deployment methods.\\r\\nHelm is currently the de-facto standard for managing complex application deployments, but that doesn\'t mean we shouldn\'t challenge its design and point out shortcomings.\\r\\nNew requirements for applications will require more dynamic deployment methods and we DevOps engineers and application developers must be prepared.\\r\\n\\r\\nThis is why we started Glasskube: An easier way to deploy applications and infrastructure on Kubernetes with Glasskube [`glasskube/glasskube`](https://github.com/glasskube/glasskube).\\r\\n\\r\\n**If you want to follow our progress make sure to star  [`glasskube/glasskube`](https://github.com/glasskube/glasskube) and join our [`Discord`](https://discord.gg/j9A7epEeg2).**"}]}}')}}]);